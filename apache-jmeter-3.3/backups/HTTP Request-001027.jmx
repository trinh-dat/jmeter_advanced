<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1506481286000</longProp>
        <longProp name="ThreadGroup.end_time">1506481286000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="STAGING_URL" elementType="Argument">
              <stringProp name="Argument.name">STAGING_URL</stringProp>
              <stringProp name="Argument.value">saas-api-staging.inspectorio.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ASSIGNMENT_ID" elementType="Argument">
              <stringProp name="Argument.name">ASSIGNMENT_ID</stringProp>
              <stringProp name="Argument.value">c7243a98-141b-43f6-ab15-8dcab336a2c8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="INSPECTION_ID" elementType="Argument">
              <stringProp name="Argument.name">INSPECTION_ID</stringProp>
              <stringProp name="Argument.value">208b7438-a8d9-11e7-a694-0242ac11000b</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="START_TIME" elementType="Argument">
              <stringProp name="Argument.name">START_TIME</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,-P10D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="END_TIME" elementType="Argument">
              <stringProp name="Argument.name">END_TIME</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,P10D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="RESULT_ID_PACKAGING" elementType="Argument">
              <stringProp name="Argument.name">RESULT_ID_PACKAGING</stringProp>
              <stringProp name="Argument.value">packaging</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="RESULT_ID_MEASUREMENT" elementType="Argument">
              <stringProp name="Argument.name">RESULT_ID_MEASUREMENT</stringProp>
              <stringProp name="Argument.value">measurements</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="RESULT_ID_SAMPLE_SELECTION" elementType="Argument">
              <stringProp name="Argument.name">RESULT_ID_SAMPLE_SELECTION</stringProp>
              <stringProp name="Argument.value">sampleSelection</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="RESULT_ID_WORKMANSHIP" elementType="Argument">
              <stringProp name="Argument.name">RESULT_ID_WORKMANSHIP</stringProp>
              <stringProp name="Argument.value">workmanship</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Auth</stringProp>
              <stringProp name="Header.value">${TOKEN}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;email&quot;: &quot;ivt1ur707092121.h5tpioi8@mailosaur.io&quot;,&#xd;
  &quot;password&quot;: &quot;be8941a749efb2cf6a7b5b632fdf74b58be17b9d3049b833dfa9e52414f1ce787b380cea0e960d8035f971faf29bdc97188d42726e14ff76a63be42ca30352f3&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/gateways/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract token" enabled="true">
              <stringProp name="VAR">TOKEN</stringProp>
              <stringProp name="JSONPATH">$.token.session_token</stringProp>
              <stringProp name="DEFAULT">NOT_MATCH</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract org id" enabled="true">
              <stringProp name="VAR">ORG_ID</stringProp>
              <stringProp name="JSONPATH">$.token.orgs[0].id</stringProp>
              <stringProp name="DEFAULT">NOT_MATCH</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract user id" enabled="true">
              <stringProp name="VAR">USER_ID</stringProp>
              <stringProp name="JSONPATH">$.token.user_id</stringProp>
              <stringProp name="DEFAULT">NOT_MATCH</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract inspector name" enabled="true">
              <stringProp name="VAR">INSPECTOR_NAME</stringProp>
              <stringProp name="JSONPATH">$.token.user_fullname</stringProp>
              <stringProp name="DEFAULT">NOT_MATCH</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract session token (Auth)" enabled="true">
              <stringProp name="VAR">TOKEN</stringProp>
              <stringProp name="JSONPATH">$.token.session_token</stringProp>
              <stringProp name="DEFAULT">NOT_FOUND</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get_assignment_list" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="inspector_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${USER_ID}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">inspector_id</stringProp>
              </elementProp>
              <elementProp name="from_date" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${START_TIME}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">from_date</stringProp>
              </elementProp>
              <elementProp name="to_date" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${END_TIME}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">to_date</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/get_assignment_list</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="update assignment status completed" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;status&quot; : &quot;COMPLETED&quot;,&#xd;
  &quot;inspectorId&quot; : &quot;${USER_ID}&quot;,&#xd;
  &quot;inspectorName&quot; : &quot;${INSPECTOR_NAME}&quot;&#xd;
}  </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/put_assignment?assignment_id=${ASSIGNMENT_ID}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract inspection id" enabled="true">
            <stringProp name="VAR">INSPECTION_ID</stringProp>
            <stringProp name="JSONPATH">$.data.inspectionId</stringProp>
            <stringProp name="DEFAULT">NOT_MATCH</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-102921809">inspectionId</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get_assignment_detail" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assignment_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${ASSIGNMENT_ID}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assignment_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/get_assignment_detail</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract inspection_id (only after assignment RELEASED -&gt; CONFIRMED)" enabled="true">
            <stringProp name="VAR">INSPECTION_ID</stringProp>
            <stringProp name="JSONPATH">$.inspectionId</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract shipment date" enabled="true">
            <stringProp name="VAR">SHIPMENT_DATE</stringProp>
            <stringProp name="JSONPATH">$.assignment_info.expectedDate.shipmentDate</stringProp>
            <stringProp name="DEFAULT">NOT_MATCH</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Shipment Date Not Null" enabled="true">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">20</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">SHIPMENT_DATE</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract Check In questions" enabled="true">
            <stringProp name="VAR">QUESTIONS_CHECK_IN</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Check-in&apos;)].items</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract Documentation questions" enabled="true">
            <stringProp name="VAR">QUESTIONS_DOCUMENTATION</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Documentation&apos;)].items</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract Approved Samples questions" enabled="true">
            <stringProp name="VAR">QUESTIONS_APPROVED_SAMPLES</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Approved Samples&apos;)].items</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract Approved Standards questions" enabled="true">
            <stringProp name="VAR">QUESTIONS_APPROVED_STANDARDS</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Approved Standards&apos;)].items</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract Production Validation questions" enabled="true">
            <stringProp name="VAR">QUESTIONS_PRODUCTION_VALIDATION</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Production Validation&apos;)].items</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract RFID Check questions" enabled="true">
            <stringProp name="VAR">QUESTIONS_RFID_CHECK</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;RFID Check&apos;)].items</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract Green / Black Seal questions" enabled="true">
            <stringProp name="VAR">QUESTIONS_GREEN_BLACK_SEAL</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Green / Black Seal&apos;)].items</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract On-Site Verification questions" enabled="true">
            <stringProp name="VAR">QUESTIONS_ONSITE_VERIFICATION</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;On-Site Verification&apos;)].items</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract item_id of Check-In questions" enabled="true">
            <stringProp name="VAR">ITEM_ID_CHECK_IN</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Check-in&apos;)].items..itemId</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract group id of Check-In questions" enabled="true">
            <stringProp name="VAR">GROUP_ID_CHECK_IN</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Check-in&apos;)].id</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract item_id of Documentation questions" enabled="true">
            <stringProp name="VAR">ITEM_ID_DOCUMENTATION</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Documentation&apos;)].items..itemId</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract group id of Documentation questions" enabled="true">
            <stringProp name="VAR">GROUP_ID_DOCUMENTATION</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Documentation&apos;)].id</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract item_id of Approved Samples questions" enabled="true">
            <stringProp name="VAR">ITEM_ID_APPROVED_SAMPLES</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Approved Samples&apos;)].items..itemId</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract group id of Approved Samples questions" enabled="true">
            <stringProp name="VAR">GROUP_ID_APPROVED_SAMPLES</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Approved Samples&apos;)].id</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract item id of Approved Standards questions" enabled="true">
            <stringProp name="VAR">ITEM_ID_APPROVED_STANDARDS</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Approved Standards&apos;)].items..itemId</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract group id of Approved Standards questions" enabled="true">
            <stringProp name="VAR">GROUP_ID_APPROVED_STANDARDS</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Approved Standards&apos;)].id</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract item_id of Production Validation questions" enabled="true">
            <stringProp name="VAR">ITEM_ID_PRODUCTION_VALIDATION</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Production Validation&apos;)].items..itemId</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract group id of Production Validation questions" enabled="true">
            <stringProp name="VAR">GROUP_ID_PRODUCTION_VALIDATION</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Production Validation&apos;)].id</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract item_id of RFID Check questions" enabled="true">
            <stringProp name="VAR">ITEM_ID_RFID_CHECK</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;RFID Check&apos;)].items..itemId</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract group id of RFID Check questions" enabled="true">
            <stringProp name="VAR">GROUP_ID_RFID_CHECK</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;RFID Check&apos;)].id</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract item_id of Green / Black Seal questions" enabled="true">
            <stringProp name="VAR">ITEM_ID_GREEN_BLACK_SEAL</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Green / Black Seal&apos;)].items..itemId</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract group id of Green / Black Seal questions" enabled="true">
            <stringProp name="VAR">GROUP_ID_GREEN_BLACK_SEAL</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Green / Black Seal&apos;)].id</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract item_id of On-Site Verification questions" enabled="true">
            <stringProp name="VAR">ITEM_ID_ONSITE_VERIFICATION</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;On-Site Verification&apos;)].items..itemId</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract group_id of On-Site Verification questions" enabled="true">
            <stringProp name="VAR">GROUP_ID_ONSITE_VERIFICATION</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;On-Site Verification&apos;)].id</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract group id of Product Overview checklist" enabled="true">
            <stringProp name="VAR">GROUP_ID_PRODUCT_OVERVIEW</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Product Overview&apos;)].id</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract item_id of Product Overview checklist" enabled="true">
            <stringProp name="VAR">ITEM_ID_PRODUCT_OVERVIEW</stringProp>
            <stringProp name="JSONPATH">$..steps..groups[?(@.label==&apos;Product Overview&apos;)].children..itemId</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract styles list" enabled="true">
            <stringProp name="VAR">STYLE</stringProp>
            <stringProp name="JSONPATH">$.assignment_info.detailOfPIPO.styles..styleName</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract assortment_id" enabled="true">
            <stringProp name="VAR">ASSORTMENT</stringProp>
            <stringProp name="JSONPATH">$.assignment_info.detailOfPIPO.styles..assortmentDetail..assortmentId</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract solid item - color" enabled="true">
            <stringProp name="VAR">ITEM_COLOR</stringProp>
            <stringProp name="JSONPATH">$.assignment_info.detailOfPIPO.styles..solidDetail..color</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract solid item - size" enabled="true">
            <stringProp name="VAR">ITEM_SIZE</stringProp>
            <stringProp name="JSONPATH">$.assignment_info.detailOfPIPO.styles..solidDetail..size</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get user profile" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="user_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${USER_ID}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">user_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mobile-responses/v1/gateways/userProfile</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract UID" enabled="true">
            <stringProp name="VAR">UID</stringProp>
            <stringProp name="JSONPATH">$.data.data.uID</stringProp>
            <stringProp name="DEFAULT">NOT_MATCH</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="update user profile" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;uID&quot; : &quot;${USER_ID}&quot;,&#xd;
  &quot;city&quot; : &quot;Ho Chi Minh&quot;,&#xd;
  &quot;country&quot; : &quot;Canada&quot;,&#xd;
  &quot;email&quot; : &quot;ivt1ur707092121.h5tpioi8@mailosaur.io&quot;,&#xd;
  &quot;mobile&quot; : &quot;0999992233&quot;,&#xd;
  &quot;address&quot; : &quot;Dong khoi&quot;,&#xd;
  &quot;gender&quot; : &quot;male&quot;,&#xd;
  &quot;province&quot; : &quot;Mu Cang Chai&quot;,&#xd;
  &quot;picture&quot; : {&#xd;
    &quot;content&quot; : &quot;\/9j\/4AAQSkZJRgABAQAASABIAAD\/4QBYRXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAEAAIdpAAQAAAABAAAAJgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAA8KADAAQAAAABAAABJgAAAAD\/7QA4UGhvdG9zaG9wIDMuMAA4QklNBAQAAAAAAAA4QklNBCUAAAAAABDUHYzZjwCyBOmACZjs+EJ+\/8AAEQgBJgDwAwERAAIRAQMRAf\/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC\/\/EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29\/j5+v\/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC\/\/EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29\/j5+v\/bAEMAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf\/bAEMBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf\/dAAQAHv\/aAAwDAQACEQMRAD8A\/v4oAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgD\/\/Q\/v4oAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgD\/\/R\/v4oAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgD\/\/S\/v4oAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgD\/\/T\/v4oAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgD\/\/U\/v4oAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgD\/\/V\/v4oAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgD\/\/W\/v4oAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgD\/\/X\/R3Sv+DhL9pS7uIDc\/Av4JPZyY3m1n8dJcc44jEvieRMqo3Hem3BGHGGLfyHifpD8T0oN0sjyGc0\/hn\/AGjy21bT5cUuWT+GycrNXf8AKcX1qenuxevS66aa+9rfmuuXpbW6cfVm\/wCC3f7Wuv6r4Us\/h3+z18K\/GDa1eRWmoaBp1j8Q9Q8Tw+ZIA0unW9h4jZLmOKPMk0j2\/lQqN0siKCawzL6TWYrK5\/2VkeWQz6OFq4h0MzqYmOVU\/YR5qk8RjoYnDxwuGinzSxFepCnSjd1ZQSXM3Xre5GNPmqTmoxhGE5SlfRKEYyc5SfSMVJvy1R+qvhD9rr49XNtpWseP\/h\/8OfCtrf2hLeGodQ1S68RPfTW26BZr8a5No+lRQSuks0MMevXMyI9tJ\/Z0zGaL+K+Mv2qUeCMFmGXRy7gPxB40hQqqlguBP7fq8KZNXkqcqFTN+KcVjsRQzfkhVU3heHaGIwuIlSr0XneCqRjzfcZdwhmeL9hXxdGWXYScldYqVOGLrJp6UqN7ULyXxYh+0iml9VleUjifi1+3Z8b\/AApoEl14O8EfC+TxBFBcTx2Him41+TTrsK+YUS+0rXLeW2Z0UozSwvHvcSllSMxt8PwB+1o43zjNVR4r8N+Eo5TUnTh9c4d\/t9Y3DNwbnKphMwzOrTxKbtaNOvQlFJv943GEDNeHqGX07qvUjUfNy+1nRnTlZrl+DkmtHZvl3Ta+Hkn8+eEP+Cu\/xE8RaFi9+F\/gy08a6OZ7Xxd4cgfX5YtNuoWYx3Vnc\/2vLHPpV5CBLa3DT\/vCJEWQ7cP\/AEDh\/pmfSO4m4whkPh34T8E8WZRnFKnjuF81hDiLCLHZfW05cdUxudYPD4LF4etCtQqxryoRqOn7anT9nKJ8vXlQpQhJe0b5U6ybj+7k24rla0nGTTavKLW2urjsR\/8ABUv40z3fh6GL4Z\/DQQeJDIbKdp\/E7NDDFEZZJJ4xqyKSFA+RZVIYhT1Jr9Szb6QP0juFc4w2ScZcF+FuUZhVp+1q4XA4jiTNa9BRcfawqOGZYfCxnTjL4qWKr05PaUo25sqUZ1KarOUFBz5eVRlzP5t6OybXuyT210kfOHxA\/wCC4nxh8CeMvEXh+7+F\/wAIhp2iLC8V3cTeLvtdx5kSsR5ceviMs0m5UVIiB95vuEP+sZV4\/ZtmGT4XHvJMA8VX9vCdCl9acI1aderSilfEtwg1CEnzVJW5pPmSUIHh4rM8Vh8dWwyo0fZU+VqcudScXGL2U3d35l7qfRWb5kfL3iH\/AIOPf2hLDUYbfSfgR8GJbOW7hthcahJ46Dusku1nRYfE6IgEeXBdmzjJ2glF+qwPixm+KS58vytTtHmjSeJmoydrq7rR2b7yt2dlKUwzTFSjKo6NJQWqfvptavZzd3ZXSVr7aXi5ftx\/wTM\/b78U\/t4\/Cz4i+K\/EXh3wZ4T8WeCvGX\/CNJp3ho6xPpS2d7pFreaTqF9FqWqXV5IZ7tr1HW3u4UeC0ZV8mQB3+9yPi7EZ1HFKFPB06tCsqMX+9cE6kV7KVROrzW57tqKV4RdpJpHbl+MrYuNR1acISi4cqjzaqV1zNNzb95Wt7u1lzJ80PiX9qf8A4Krftp\/st+P9c+FXiL4B\/BnV\/Gksup\/8INPaz+Mo9E8QaNpelX3ia98XXe\/xWLu28PaZ4Y0jUrvVjCZbm0vza2QDNKjT\/iXFvjzxRwrxDiclxeRZJThk9Ovj88nV+vyrU8qjSqU8HUy9UsTKFXGZnj6uDw+EoVvZr2csTUfN7OEJejQhiHTqyxFK0pXp4R0lJQrYhJTfO56qjTpKrOpKLvf2a0u5R\/Qb4eftk+Pp\/wBn\/Tfin8WvD\/gXw14su9Pg1a40XRW1kaKNN1XSdM13Qp7eTUNUurtvtularazS5uG8uaRoAC0Tuv5bwJ9MzNuNOLanA9PgzDQz+jm08FXp4d46VCGCq06GJwWKjUnUak6uFxFOU3GUqftFJJw5ZRPoKeSP6jHGYir7O8XLljy2du27V3tf5paI+bpP+CqXiOe7t4NP8LeBRAdRtVuprn+3pZF0sTZvXtoYdXiMl88ClLMSOtuszrJcFokZG\/tvPKnEq4YxGJ4e\/sClxM6dD6vDiCvioZHhpVK0I16uNeE9ni6kMPRc6saFKtRnXlFU\/bUOZyj4s6fJJb8nMlzXSbV9bbpu219Ot3ZqXS2f\/BTvWL7U4LNPC3g22hubqOJDPPq7SxQySKN8pXUAjlEO5mRFU4O0AEFvocMqf9mUsTXxmHxeIhhITxFfAJU8FXxEKV68sLCdfEzp0JVVL2UJ4nEVIQ92c5OMpyiMJSlZK0W7J79bW+yls9b+9ukrcs+c\/YP\/AOCk\/wAbf2wvFn7TMF98Pvhl4f8AA3wV8Q2XhXwxr+jf8JTcXWuave28s+\/Vzda7cWpgtFe2eeKxitpXVnRHU7GT+cuLvGjO8ixOe\/2ZlOVYzBZJTlWqVa7xanOPtlShC9LE8qlaNWTfs9eWKcY3k46UKTrynTT5ZRfKpO3LeSvC630uubVX6WumfGeqf8Fof2zvBfxK+JvgH4hfs8\/BvS4fhl4hh8OavqdgvjvyjdXU94bK5DTeK7gG0vNPtlvoZFTa0Eqz7\/LIVvDx30iMXPIMrzjI8ryzGTxsZPE06yxzp4WpD3JUZTp1qajKVaM40nOf7xJKPM3Lk8vBYjEVquKo4miqU8JVhSqqF7wcrp3Un7yvFuMk43i1de8nHqT\/AMFnv2kH8Pa54ksvg98G9Tt9DuFFxZWU\/jJ746fLB5yajHEPEjieKIq6XMUX76NV81UaPcV9nhbxa444r4czXiDLuHslr\/2LjKeHx+ApRzCWKjh6mHVVYugvrKeIhF88atOEfa04rnSqR5z0MRCeHtKynTd\/ejra2ztdXi77xclpZtXRB4O\/4LpeOdT8LaP4u8WeAvhRoGjz3F4davUn8VeRZ2FhfXkdxJbCTWpXluGtLTEEbbg97PFGFKtiufL\/AB4xrrUKmb5dl2Fy7+06GDxlfCxxtWtTw9WtThOrSp+1rOU4wm5JcjV1dx5U1KY+\/wAlnGKdGVacptKMVCM5S3kltB8t5a3UVfc9c0\/\/AIK+\/Eu2+AkXxS8TfDj4d2ni++8I3fiTTfBtjN4jBuNQ1CO5vPCPhxVuNamuZ9VvLaTS7a\/iilDyX0l2LaJEVEX9szTinC8PcAVuMuIp4fLq0cteMp4SdRU6csTiuZ5Xly56ntauKrOph6dSFKXNKpKr7KFlaOdJ1qsIyhSbnOPNGmk+Z32j3vtf3dPKzRxPw0\/4Koft3\/EDSrXXNU+BX7PHgDS7iS1iVPEWpeOr7xBKbiWKMyJ4d03xOXtIlMmQuo6ja3JHWAEEV\/PPE\/j\/AMZ8LUcDXx\/Ac4YfMIKpRxlbD4vD4aMJx5qc5qrio1kqv\/LuLgp2lFz5E056U4VZX53Tp+8ormfvNtpXUbw2b\/m1+zvyn17r\/wC3j8Y\/B2q2vhLxHY\/CGbxrq2ox6Zoek6V4f8Y4vj5cclzqdzDP45eax063V\/lMjSySjAGxpFSv5TzX9orxfg+JOIskw\/hVliwPCXt\/7ezzMM1x2GwlKpH3sNhsJSp06qxOJxNOUJ+zVdKkqkW3JpuXtTyiNOlSlPFQ9tiGo4ehCHM6j+1OV6kXCnF3V3FtvRWspSdq\/wC1z+2nZ6BqHiTw38OPgF47g0u6uor3QtNn8a+H\/E4gtjnzbKz1TxJe6Zeu0YdvK\/tW3lYjEUUrEI3M\/wBqTwfleb5TkXGGUYLhTG51g8Hi8FjK9DNMzyqMMY3TpyxlfB1Y18HT9tHkdSph3TirynUhCE5x6qfCuaV8LLFYVUcSoSnGpShNU60eTV2hUmo1LqzXLO\/aDvHm+P8AxL\/wWv8Aitp3hXUI9K+BvhL\/AIWJpeqeReafqt34hh0eOwj3\/ao5bAX9tq1rq1syCM28l3NHNkyIyYSN\/wClaX0oc8qZdDH0ci4fzDDYilDEYLMcuxWMrYKrQq8koVFThWrTrU5UnzRqUsQtd6UEpuXgVoxhRcoKp7aEuWpTmtItN8zvyRknGzXJKK73V3GPhWnf8F5v2l7yZYD8CfhC9zcv5VhYW\/8AwnMt7eS8\/LGg8SkYJ74GPX7wTqw\/0k+JK1GVd5HkPJGDqNQ\/tJunBaylUTxV42WnLJLezknzROGnVqVNYwT0vGK5ryWuqeqenZO3eV4nr3ws\/wCCzH7Svji4hXW\/gl8KNJNxLdw2Wi2p8ZnxHqktsZFdbGxl8QTYCNG5klnURkI3l7+Hq6H0ieMcxap5bkPDkJVNaVTGSzDllHdtUo4unUqafC4uHM9LO7lHpw0Klf3qnLSg03FNN1J2v8KvFJK2rkrvdRStzZPxf\/4Lh\/Gv4R3OmWniD4MfDXRrrXJ0tdHi1mTxSDf3byeStpH9l8QDbcGVkj8qUxvvOMDcCvvYXx6z6tUWHnl2QfWVQniKsI\/X4NUqWlSpGMsXJqnGV07tuPK1J6XLqOhCXJ7RqbvyqXVK17aR5mm0tLf3uS15fMXiz\/g4e\/aw8PanJZJ+z58EI12eZHHqcfxEtbraAAWKnxXGkiZ6SIFT1I+VmyreO3F8YwqYbI+HsdQqbVcPPHSUb3cVO2KaXu295c2zvBWOac6kIuTiracrs7PW13Zu127WXM11973TxrRP+DnH9qu\/8VeLPD2ofAL9next\/CVtFeX1wG+JLPJbzwxvbpEP+Ew8trm4mfyY4gScjI3AMW+hxnjPneF4ey7NFkuXvH46s6TwknivZQUJSVWXNGrzRVNR5lKUrSuklF6S0w3PWhWqT9nCnQi3Ublyvm\/5d04q825Tbsmk7Wb5XdF3xD\/wc1ftWWi+HtN8Ofs7fAbWfE\/ifVLTTtK0hz8RgXWeVFnuJDH4tBSKFHzvL7VP3icMleXw145cRZ3i8THF5Nk2FwODpTqYjEQljLqptSowdTE8spznolpdaq28RyVqajrObStulHrL7Ltb73u1ex+o\/wAc\/wDgqt+1X8IfC\/gXxHH8H\/g9et43+Hj+LrDT54\/Gk88+oWVv9o1OC1a38V20Z0+3Ug72ZpVBQGRjJGG+Xzn6RnGeW5lTwEOEcpUIyjLFVsVLMKcKWHnUdNSUo15LnXucyakk5XaVnGVVoVadacIqM4Kgq1NxUuaorpSt0aXNF2Svbe+h8d+GP+Dgn9pS6ntZPFPwO+ClhppKfbJdPfx158Qb\/nmtx4olUnocFT6HGGZ\/dq+O3FVTBzeAyXIa2YSV6FKpLHqg32m44rnV+msV05ne0eb28lZSik7Xt\/UtNH\/e2\/vXP\/\/Q+fP2I\/g\/4r\/aYWPwzpPhrU4LuwSDVfFvxP1DUFt\/BfgHw7LI8YvfEMKQNM97dtb3EWj6VbzfbdXuIWSCKK2iur63\/wApvEbjLhjw64azLijijErBZbhakqeHlSqQr4zMsVJNYXKsswCkqmKzHF1I8lCnFcsYe0xOJnRw1OdcrK8prZtOlQwsZOtNOpUlN8lHC0Y\/HXxE7tU6UW30i5SXJS5m7H7uaHp3wX\/Zo8G6tZ\/D\/wASf2jc+GLSO68W+KrRbC8u9UuUiMif8JFqM0gEMbFPNsPDmnTJbQj5obOa5aS8n\/zRxFX6Q30qcfVpZbwjisq4IWK+r0sqjjauT5XRpVcUqmFxWZ4vE1qNHNs1p0oUfbYibm6LhUnl2BwNGvLDz+9nSyThqk4YbHOvjYwUp4mlThU9o4qzTqqnJUsPzJ2owaUtFUdaalKXw\/4n\/b21T4p3NvH8P0tNQ1R71bYpqs9zYTW0aTGM30NhFKrGTcQUj81FHBIO5gv7Pkv0C854NxOXYHi7FUMP\/abpulhsn5MwdWnVUb05YypShTTV3G8aE4pe85pL3vl8w4nxeYNSnUbktlGTpxvupq+t1pJrkTurXVonf6p4n8Za\/pFyfEetXlzqENmSyzSSJDbzCLO2ONmAUAcKRjOcgkEqn+mXhL9DTwp8L+HI5w+E8oxfEE8P9Yp5rm+Go5jWw9VUre1ovEqVDDz3beHo0lzSbVk+Uyo4mtjE54qrKpJQSgqrckrLR7Sdo76xv5Q0nL4S1Lx74kt9SvLnS5zB4r8PrdtZzRFlj1ywgHmzaPeoGZJ4ruJHSBZN3l3PlSIVY5b894h4tqYPPcnxVOtTyvP+H82lhstz7A06ahDCVG40I4qg4OlXw1Cs0q9CpF054adWLScouHg4j2uKnUpXftYqfsGpWUpw950Wla8asfdXw8s3Frbkn6r4f\/abk8UeHPDi6bYOt1Y2TRWlwPnMEsqzRXMYYEsC7SxugIDY2qc4avk\/FHj3OOJOJ6+Y57gqGEzalh40ak6EeShUqTp04V6mHTTlGnUlBVYxdnFSUFJ25pZYbFxq4eEYqUeWTUo81lzR5k+ivfVq6V9uWWh4h8cI4dIvtG8TeIrWbU77WdIlW6hjyT9ohuZ2hLHDASm2miR2YsP3XzAYU14XDeNzbMcup5bhsasJOliHiJOU7NYWtUm9\/dXuTuppfakrSjzc8tpYajNxxNWn7SVnTkrJpyXvQfWzcZWjtbkd9+U\/Nb4ieLbYayjW0a2duJnkit\/OyylI5WG4qSq7uMKqrg\/KS3yFP6d4SwssPlsYVKyxFZRSnVjFxUuWa0TbvPXS9433fvLlOapCDhKMVyKW3VKW6Vls7KK3v72sVZSPrL9kL9sL4q\/s06vql98KviFrXhOPxjpsWk+I7LS7lBBqsG5hHLPA+9FvLMys9lexLFd2ZlcRSqjuleNxDis\/wscbUyfHYnLa9SnUhUxOHq1IWpvVtLa8YptTSha3uuN5RiYNrDVY1FaUZOPuPWMlquTWGmuinbR7qLRrfte\/tfLqHxm1vX\/CPiDXvF7zfCzxZ8KJNa8f31zrusXemfEPRtPs\/Ht+hnuc6dq999nbTrO5tQ0+mWCPbWrDe8rfF8NcF43PsPmGZ8QyzGqszznKs6VWrjZvHYilk9WpLKaeKqNc08O5\/wC1VMPKdOnUlOlCbahY3zXO6yrLD4ZRlSwmEqYWTmrxVbFxX1mcW9Iyi5fV07SjHkk207TjY17\/AILR\/Fnxz8I9K+E\/xE8BeHNR1LwZZeH9C0bX\/Dl9qvhVNT8M+GNKt9H0jSNasdPnuLOXUbewtbeKHV0tXSfyohfWUzgzV99wxwrlvAvEtDivJ8vy9YupluGy54mvhIVsRKnhKMcPh3ValRcKlKhBUvbQnGpLlvU5pOU5KlxNjZUI0a6U6cUuRKKjGd94uzfLK7topLa6gcN4S\/bwPinw1qlv4S8JaknjeKSX7VomuXyX4t7L960U2m3tpHZC\/EMSbri3a2sbt5WAtxcgYX67xL49WMwGGp5ti8XgsLWajhqODq+wympVdl9Yx2JcZ4mbUpRUKK9nQgnedZNtxJ5tSxHK0mq9+SFCdkpSt8TmotTmusWouPNopXcZeSab+3F8e\/A+q2+r6bq8ml3drf3N\/aTX2gWV5b2c770KxQ6la3NqYoyS0cUschjlXeMuFLfL8NcVcR5Vk9XI8pzmlLBVatSvKn+6xFZSr+zclTqTc6kKalGPLGKUPi2vPnypZlicO9uW+vv07q+qle8Zq3K3vomr+9eTO+\/Zp\/4KE\/tB\/AvTPF3hX4SfFPVfAWjeO\/ER8VeK7bR7HRJP7W1+SKGB9Qupb3TruYHyreKPyIJYrcLkCLJYV8nxC80dDMKeJlVnRzP3Mfyy5fbRv7RKfIo3adSTXLUi9Wnf3VHahmNWnzcko805Oo5OMJNOybetOTimrPl5kk7XaTjy\/Y2r\/tqfEf4vRreeP4fDmteIdXvdMl8QeMtP0m00nVfEv9i6Mmh6TH4lt7FIrC8NrpwaOK8htLWUtPM9yspZpK5PC6XCPDdPOuF88w+KeRcXeyw8sXVryrxybEtUqdHFQjU96lRhKhh5Tq05qVKUfbOMnKrOXfTzTnrS+sUaSnUlH21enBQ9pyR5Y+1VuWS956pr3uba8ZE7+LNQ0Cc\/8I7b3CW15DDLcLGJB5bjcRBIrBQTEGMYYfKyKDkEmv6d8FeEM64IwvFGGzVKX1nOaby\/ERlCVLHZdRwy+r4uHJdJVVVvK7vzczXutOXr1KeHjTp8k4cjje23Lq9+ZXT5enLpHld5Xiz54\/aX1vRNC+GPgS4vZ7eGy8V+PbYarplpYTWp0ePTdafVdYtpIxmO8lv0+yX\/AJ9ntRor1bV0EyOr\/B53l2X4DjPjzC1qEaeEq5vwvjKUOSLp0sFmWGeZ5nUw9KFpR5JZdVjKyinzytfmUTx8ww6UMO04wp1asaEeVqyjKo5VFJLmezSdr2g4pcz94+qdC1nxR4ybRdaa1ljt9NiF9pUOoK8Fro0UsIjttTe2fa39rXNuzR2EbDzNP0796ixSaiVTozfxIyLMs1fGXE2HrV+D8jq\/U\/Dzh6rQ\/fZ5mVH3Mw4txWDqqChhqU0sBkjr0mlCnXxdO3toM9WpCnRcf+fmuilblVtNeVSbkt7q8dFZc0+T3mz+M1\/4E8H6qDCNR1In7Z\/aEhctFJD88AjUmXCRyIrdB1LEscLX4z4n+JuP8T8Tl+Chh3lWTYWrF1aU5qtUqJO\/vNcqi7Wv7totWVveR5terGMJ1akf4d3BRd7OOt1pveN3fmvurWcY0\/Cf7S\/iXxh4m0r43faR4l+Itw628+n3Fq89lm3SO0EUEMMhlRwsIBVFO5m3ja5dq\/kjxM8KKXFFPiXJcwxs8tyXNMVHF18ywdSGHxsqkY0mqmIcqXJKPsqcIt3+COzUnTi8LjuepQzCLdatGMeWlUXNCOtrKyja2stG1r19\/m+urX9ov4+WMN7quqfDbXYbLVle5uJvDwd1gSZOWbTph9oKBTnKbivYHO9\/5R4n8GeAOMs8wOGo8eZPPH5Rg8JlVLDZhh5UnVp4KU2lHGwlLDqcpVJ6yc4pySdrSpx9+lm+ZYaNR+zq06Ndub5Oblg56Xe7S5k9m247ON2fMHxO8ffDvV\/Er69NoGo6PH\/Y0Et9rdkFXUf7ft9zAXOm34UXVvK5WO\/tpQzFUzDNC7B6\/ofwu8O\/GfhihRhk+e5fmGW4XMKeFoZHndWrHJ8TkUaNKEnQxGFhiXQxkVFzw+Iw9KN5uSrRlRlOhV4sXKhVrxqwhKEZU71akGpXqay5uWThz3b1u1bVJya9z5z1LWrbwzr3h343+ArCw1bQhqEQ1zwrqsM\/2G01WGVBqemO0NxFdw6Tqe393PZXlvMqXPkicP5jP\/oHwphMtz7B5nwhjksrzzEZfUhh80wfsFi6uE5ed0o1KtKrCtVwyvUoSq06ntcNeDjF0G5fD5rUx+R4qhnOB5a+W1KsJV8FWjKVKFW9pKPLKMo0qs7p+zlH39b2k4Q9s8Cftf8A7Mfhr4xyfEW\/8Aa98M5\/EWi20Vxocd7\/AG74X0Pxrpso8nUvD95L5eoWVhqUUu67sb2J44olLLdOTM7\/AI9m3ht4g8LYjiL2maYXPaM4VMRwzjMLTqYPG4Z+xjGnRxWHlejP2NSEXJwryVVTk1GHMoH0mV8Q5Pm8njMPQqYGuowji8JVcatOnV5rKdCpFq9OsuslBxcbWd+aVX\/go14O1P8AaFh8O+NvANjbfYPEFtdXXhbXdMZJbNfEWlWMus6dc2ktuWjRppLIRHBEjNHHv+au\/wAA+B+JeIs+SzjHSec4yeZ410ZU5eylQw8WquXvmbajUU3zJPRttXtJHJnuLpQr0q0KPuxiuWzXS0m1pa0kne9u7uneXF\/Dv4DWv7RH7MXwm+KXiDW9R1jxj\/Yl1P4muoIIPt87xfa7S5gjtlWMNNZSwIGRdrzIjoQHfNfeeNnAXGXhpwflniJ4d4GWb5XKnPEZ9kMnUlHC4ec481fCqPNNRwihJV6bjKXs5SqU4SnBQLhmFPEV1RxEIRpRp+57ONubmjHVtWcpSavorX6atx\/Bi4gj0v4g\/FyzaS4aS11GeGeWeB7SYxaJfW1mA0DgPGUWUlkfBVjzIxXFfa4TF0s44KyHMKUIxhmOX4HHQhCrTxMYTxcY1JxVaDdOpGM6so80Yxi9nzaSOKVWk5zdOMoQutJSu72aal7qvZxb2stla1odV8EfFtjp3xK0PxF4szJp11cWmk22qzhpZfDWkS3asNQij43bj++nA2v5GNrcjZ8rxbgK+FyCrhckl7HMKEv7Tq0cPZfXcTRi506FR2vduPu3a5pOzs0pR7cFWjGs3UfxQlSjUt\/C5lb4eRXSvrJpeSkk1H97\/i\/8dfC\/jrQvCGhaj4nk8S6f8PfhjrHhLwze2YmPkahqtxaGa5tpS6o5nt9OtFTMpiMbGPa8bPs+fyri7FcT4XE1MdlVbC5vmVPLstlCrTpwpU6MKtT61WqQlzOlJXheXLduN3zSi5S76CjGteriIVYU6Hs6VpNSi+sNb3TcYxWr116xlH8xdC1XWrjxBFoNvaSTi7laPy7hEXZO+SQHJcFGf+59z\/aBAr9QxOSZTk+X1cxxWJpqslywnh589OUYpR5rWUVory0bb67SOeooV61qFGokoXlHkb5OstbpNKyf2nG\/2dUf\/9H4vu\/jm\/hrw5e\/Dr4QeI9d0TwQ92txqV1pl9eaWfF2rww\/ZX1u+tYJYR80QaKyEys9tZ4hhSJS6P8A5K47g7B5zi6eZcW5Vl+a4unL2mEwmOw9HG4fK4tO31eNeNSKrNS\/e1oxU5yk\/elaEo+tmGcU8NTnlmUVpQwcHKNbE0nOnLHVLe9VnZJ8mlqUJcqjBpKLes+W0nxNqT2RgfUbxjeti8WS5mK3Wf4rgF9spwSAZAxHUEZdW76mC+pWqZWng4U4x9nTwq9lCmoO0YxhDki4xsnZKK620bl4LrSqRtKpKXNa+7u30bbV7WtvHurNOUvbvhNo3h\/QdY\/tZmWLUrhAtrI2FSMsd74bzGG\/IyOD6hsLtb948E\/ETK8w4tw+F43nCdbD4ZYXK5YnWgvcaq2c00q1RJJ6N8usbXcYcmKoOMY1YtKKlzSte\/k7L0vrLRPSzSUfre+1rxt4rs\/7B8IwXF9dXLeXc6jJIdkasfnDTliTj5gAAMJ\/Gcbq9bxt8WsZiMViOEeB4znhqXNCriKPPJQUvjUXBNy\/uQu0l8UleCN6NatJJJzd3y3XvOS31j7trqy0ldWV9+WXkHxD+DnjP4eSaHqdzdf2lqmpS\/Lb2UDzzi5k3eVDFCgM1w7SBUCorsxb5c7glfzBDhTiHGxwlPF4LFVJ4\/FRpwqSpucqkqk9eWMFOTb6xvJ6Xd7FYihVwtNYqT0g+Zt\/Zb1jdvTWy6vV+646yls\/sk\/Cqx0\/9orxj8Nfi\/pXiXwJZf8ACM\/8LM0\/QbzQbyy8SyT31hpWtWHhfTNN1aK3g0641waxcyWmoawItN0\/SbN9TuFnWCO3l+l8SqXDHDPCWF4s8TcZicBR4Wwv9n47DYehP+082zKEadLKsujahWlTnmMfq03iKsZQoQ9rN051IxhPjwkFVzSdGnBQhjaccZFy0VPmXNV5YO17y9ooLmhpHmfux5T6F\/bY8N6x4n+CGsQaXdfDDwpYfDvUX8S+EfAPhOytdV8a6p9oii07VZ\/E\/j+XF9rd3DpPmXcmnRn+zvOt8afa2arHGv8AL\/Cv0m8JxRxJwpwlgeBKuScK1cbXlXzaeEjhPYV8RhZQowr1p062ZZgniKeHpfXMbiIQf8SGCw0XyR+hxWGpUoVlCrS5\/d5Ix56lWrKD0cql1SjdSl7lNKHM+WHLrKf81\/xIt9a02a2u9TMYNxIXSONNpQSbiCzbMEMrcBdxOc7sACv714L4kweaQq4bCe1XsIcrnNxako72+GSlFxSfM7K97uzUvm6vtIOPtEo+0XTS2t01o3Jtb6xte2tker\/ADRLXxP8AE74d6XqEAOh6z4g0m11iObWH0SK4tJLyINZf22ljqUmlT6nKI7CC7XTbxreS4jmNrcKjR1nis3lVxM8trUZ5lVnioU6eBofusRi6cr+1pQl7zi40uZ+01Sa3i3BjpU3J05+9Fbzl8Xs1GS1d76vSPW7lZpJWKHxG+Evgefx7428L+H\/iFFa+IfDPizVfC9zpV\/fTaokeqWk8wFnY6vNYWdrrEgiik\/e2aI9yImmW1gVgifW0eLcHS9ksdkucYKlXlUoU8VHBwxWGn9WrfV5xbwdSpKmozShGValSTXLy2UlKOVTDUoNv2kZNtOS9pCVRf4oNUZTae8oRmvi91+7GXz74o+BnxF0F554oU1lMEGTTjMJwE5YvBJGHDR4II3MT0+XJLfRYfMckx6h7HGYeV3z+zqyhCppulCc4vVvvzRe6TjeWVOjTq2VOcZK9pJvVSe9r+06vldqqTsmt04+V6fqniDwlrEV7\/p+mXkMnlzCVZrZ54kY74pc7d4HBU9VdQQy4VqwzXIstznBVsFWp0K9OUZOkvdk8PVktKlNOEuXmd018ElupX5jKphfekpWTfMouWkuZL7Fot+9b0b1fLeUY\/X\/gD4m6X4wkTRNeEcupzK32S9Yosd84TfLHOGJX7aEw+Sn+lIJDsaQPX4fm3B+NyCMsThoz+oU5WdLVTw0XpFXsm8NzRcYO0pUW\/ZuUaUqcjsw05NOnVvKUV7krOTnGMdOZuzlKPL8bte3NaTTZveKvhSZA+q+D54rLUx+8e0WGJYrtQNzDtEj8MVMfll2JJDMSa0ynPqLccLmkHisK+W0pTl7Sg3ouVp3kv5oy5lF6R3uazoxleUFGM73s1dNbb6patczUI3fvWXwk\/wAOvG\/iLQriOy16yge3S6EFyWieGa2nB2AhonCk5A4aJs7gMLjc3q53kGW1aDxGBb5Wvaw5ZpwnDl1k4yXw20+KnFW1SSk488JNSUJQ9m9FvNczfS\/NZXVraO+ybupH7g\/C\/QtE8SfCDRvG1\/Pa29lFaTQ6heXLALCbWYxRLM20FpZI3gCRqrSSsyKhZ2CJ\/X3hFmeGqeFmV5tneNpUqeTwxuXYrGYmo3GNDA4urRwzn77lJvCyw8KUVzzn7qi6nMoHoLFNctNNNtaa6\/Cr2lu7bX0jG1nezkfKXiK28I\/Gb4rWvge1sNP13wZ8L73TvGV7qUtrNG0\/iCe1eNPDrxXUSE2Ruv7O1C8RPLW6W0EcpeIoa\/nDxd4jy557nHFGQ4mtL+1cDlOQYNy92lUeDp4qrWzCnSleUX9WxXsaaqJThqmvenOeqxixdOGFajy0Ks60p8r5lP4ORN2cU5x\/eWcoy205YzPqeN5xbPp0BMryuNkMSfPLKx4G1Tk8fKCR0yMLgu38+1cVjMwnCpjK9fFVIqNOLqSc+SCXuxgndJWafJBxStZNr4NvaTkuW7ldrTq2n\/M22k03onp535Ze86b+yT8S\/FXw2134l+JNDv8AQ\/hnpNq66trV0qWkRiI8v9y9yYzLgsq5hhlXzGVN7OQG93D8O4tZbic3rYarHLsO1GpXjFXc52tDWVpScmtIKT96yitpdEqDlB+1uoSg04L3nyreS7O3eOq\/m96R4R+x7qM\/7LHxu1TT\/Gfhy+8XfBzxbqKS6N470vRpNebwg80oRX1aztree6s7RlbNzOkGyMr5wJVn2fyp9IjG5pxtwz\/YHC+fUuFuIsDj8PRxlHN5U8ulnWWtxvWy3FV6scNUxFGlzuVD2sataMOWKV4oXD9WGCxsqNSDqUOa9Ko4O0b6+9o0lfl5n7qS10u0ft7+0Vd\/Crwb4ei+I\/gbxnPrms6hpIk0WPSbsXWhhXSHc17apujjSIyb2SVUfcxDKu1kYzjww8JcHgOFK2VVn\/amCjg1n+LwdX2UsVJRvUhW6VsRWqKSV3zxs2tHNR+mqQqe1bq1JQvGThFtuDj3WlmunTm+F8url+DfjzxNpN9rNzqupB9VuLi8MupvdybhI7yMz7Y1G0Lk9FA2jpjIr9U\/1szH6hTwuSRjlmHoQjSwdKnB88KMIWjeTUruyV7tuVleUW\/d8rERwnLD965Sv78Y7RfVq2vTXXbvcsS\/EH4d6lZTeEzYWelaPqVrJbTyQIqx288yIpuhhk2MHRHYlWBaNCCSoasuFuI+Icq4jy7P6+Lr1cThK9OpapJuFWMJfwanNb3JKcov3l8Ulazan5WNWGr0KuD53LDVKc4SpPeEp8vvxleVpJqErq13Fb2SPCvBPgrwxrXxGl8C+NLG2ubfVtO1zTYjIiTwtrdlpd1q\/hu\/tpRyq3l3ZQ2qzIwEllqMqkEOAv8AYXjLjsTPwtxPGvDlWXPl9DLuIaMqclzf2Z9YoRzWlLZT9lga9ec4uMrVKEZWjy2PgeGacMHxFHB46TjTrxxOEqL+WsqTqYWfMruSlUpxhsk4Ts+S0FP9lPhX8H\/Demfs\/a74t+D4vLbw1bQ+FfEF\/wDDG+uTrOhXOoXtxYW99N4ck1Fpbjwzqu55VV7CdbOUq8Nxbuk0hr5XwL48hT4iynGVuWpj8qzB0cfVrVIYaljqGJ\/dU37VQcadVqolCc3HmvyVG48so\/omc5bRVKjKE5To1knHlXPOnJ9aenNZXfPGSaaUrX0PiX9if4p6f4b+F3xr8OT211pT\/C34x+PNPtfD2qxiHUtO0zWdSm1jS7C5t8xhVUTyxRHPlvGI5IfMVhu\/uDBcU8OUOBOIcTnkadHL8HjM2dPLMbKjLEfV8RUq16OGVO7hKbjPkpqm6sZJWi3zOR8s6U4vDxp1FW\/dqn7anGTg3DRNtpyW6bjJJ3XSzU\/wb\/aAOueK\/wBqb4kzrYWGjJ4\/8VatNe2lhJHJb21lqMGhXqmAQjask0cQMg2JsuJJYm2kAr\/KuWYnBVOG6FfCYenRwlKeOqUMFSX7vDwhiKtWNKCSUV7NODaVlzuSjzRSnL0KFKc24RV2pyXKtffj797csfd1vtNLZWTTjxd\/p8+i6lJFNA1nCsptSssZCoUG1EI2ngoBzwCMOAcAt8L\/AGj9cU5TkqlVydSUedcyXNe+i+zotteW6ctjaK5ZNNNa2s9NVpru1Zx0aT+LS3K1P7C+GHi280\/wFeDVLxbmPSXjh0y2aJWe4ilQyQjceT5bZReuEUE4AIqKGLyuhDE4t0owxdP7MVHnnN3183Juzd433963v71IezjGbSu7paNc1lum0nbW9kmvOK5Zz891z4hT\/brfUkjNrqEM3mRS2kjQyKQRjGwqzqABndjJUEZI2rzUM+zPH0quDrYaksPUjyuMlzWu2k9E0npZ8q1T6WibYfMK+Hf7qVuaPLKN9LO146xtqlt02ctYn\/\/S\/ILw1D9t0Y67pH+k6fHta+tonE8mnMSAXYD94bYtx5jovlkqj5+V2\/zwzbLfZ1asKU41ZQhKfs9VW9mknKUYy1qRjrz8vNKC1soXUfHhNtJ3TT0cbL3ZW1vbmcm0tLxs7tWk43j6tbX1lNb2zQNh0RC5JC5IHQDpkfQ9jzkbfgZTqUZzlJfu5Np219X0d2rXuo8u3vpNQ1TVkk9ftdE7b73ba0d1yJ2b9\/Rx7KHxKZrKC3imKTQEYdGwwKH5WQlsgjtgqe5HO1fGxmVxnUWNw8p05JqcZ0\/dnTcXdSjKMlyzT6pd173xz6VVbpxjr+ctdNbuKe+1vTlsfrN\/wT\/8HfEP452l\/ofhTSpo9O8NyG68beO76B08O+ENHiQ3F5qWr6o+y3Fwtgslza6WkzX+oOgjtrUoZJ1\/orwpxPCuXcG8UcVcUqNHAcL4PMM24gzfFQ5qWFy\/LcLUxuJrVasrKpVWGpydOhG9WtOVOEYe\/BnoZW6UnGnCCqYiUlTo0d5TlKVqd9LQhzW5pb2ulzSVz61+Mv7T3w\/+EOjarpvwj0\/Srm88K28scXjG\/ghur5r2CKRBefbdy3F5qM1yFlnlSZLOKWV4LONbSKGNf42yLwZ8f\/pA5xmvjR4p8d8Y+EXh3PE1MXwJ4WcKZpi8nznDZBUdX+yqmYUoTlhMqxE8O8LWx2KxlHG5pj69bEuVLK6EcNCP21anh8HhXRjh6OJrcrlUxFampxnOOsnHSDhBXfJTg1yRWkpyc+f83fDHjfX\/AIsXt78dfF1zLceJ9W0s6NqWpTsI7u6liv1FiymLbtX7BfS2u0qAIYFX5j81f1z4M8B5Pwn4jcG8N18sniuHsxybN+LXg8\/xeI4gnWxccLWwlfH4zEZxPGV8Ti62PhhsZGc5S9jWnei6EFCJ8hPCVcdhKmaP3Z0pPCOpCPKlFVY1KUVy+z0cKk4ybeqSTTu5Q+l\/ht8NfGPji0bVLTwrfar4ehmSHVr5xbLaQ2k7+VK1xJeywwhGjLj96+1\/nWMEqyr\/AGjxPnnhjHK8dkWbY7hvLliMNVpuliVg8PSi5wtGLm4RpQcnolzLT+e6jLxHga7ftKalNRfNzQ5vda287Ra\/m015W2nCX4s\/8FG\/2bdS+Cfxi1Twzp89rrPgrUYofEHhy80q+sr3+y7LUHBu9B1H7Hc3C2l\/oN6zWzQXADzWD2NzyJ8p\/BGCwmV8HcQZngMJj8LUp1K1WeX1IVY1qNfDy9+FNVaV4SnTi\/ZNqUXpCbcr8knmFCtK0+Vr3YynFfYlpeM43lZXTl73s7p3WlmeRXnhH\/hV\/wCzcPibLBqatN4t8PHw\/r9lEHtoNS8PuL+WyklaZBFdyz3FqIFIAItriQb\/ACiteJw7mWe5lx0swoZZi44aUsZlWDx0qUlgKeOiqeKqp4hU+VVqVCFGtTi1zVIOqoOXLUjHvhh8Ph8rqxlUj9YqKNVxcp+05FpTjZ+6vaVFbm5dOW1k5JS7Lwh4E8PaN+yF8HPiR4sFxD49+Jv7SN98WVuLnT5Tfazo\/wBvvfCmnwW0tynl39neNpMqBop3hknvLjazSJIIv6N4zrZNgfDjIuGstzOi+L62JxuLqUIyn7bCYergq2Dhia9dRvSi61KjiKbblzT5qn2Wj5GXNGvHF1KalThXhH3kpKUYazi0+XmUm5xdua\/TdRj+uHw08C3ekyRa1feH4P8AhILxCj3lwsDzW9m5ytskbxOsTyriS8Kn967bSAqKW87gnwo8NXw7l8uMc+wuM4ox1GFTFzjiqrhhaXN\/s2Dw0Z1ZOFOnH97USj+8xFSpJppKEfaxGNliqzxFHC0sDGf\/AC6pUoRe3LzTairzbV5XvbZxskz6GvfgT8OPiJZeV4z+H\/hq+ldPmv4dLttP1Jfl+ZzeWUcZnIGTi5WdT1KjBLfZY36O+R4zCuvwnxBVjaPNSj9adaD5VeN1KV1r\/LJvZ3dkcf8AaEoy\/e0oVFqr6X+Xe\/dtXbsubXl\/LH9rD9l39m\/4frb674Nv4A76pHZPp0WmJBqWlakJtitba7o6WiXLRzEDyJ7dblO8s+zY\/wCA47LeKsjr4vB1cXUxeEo1q+Cq1XUqVMJUq0NK+GdHExlC8U25JqUHy6ctly+usPCVN1eVQ5YxqNSsp8s9mkmlLlV39lJarmu1HxC18OX3hbWLfw54i06+tL5URmg1ezktr2eGVQ9tP5csUXmJdRAPFNFmOYMGjJ3KlflGbOdGNXGUqsVh01KUab5FRSe3K5XUItu95JRXKlBJWjzyjZKUPfi9dNHq9NNdG3und3u0rI\/Z3\/gl\/wDAT9jn4w+NfFHws+PPwn8Ma\/4o8XpbeKPhb451MXlvqVprHh+18zWPBlxLDdRW9zBc2Vmmu6NFLCytLZatayFxcQRV9z4ZcVZc8w\/snPKVGvaaxOXzxEuei50LVKmFqRvyuFSPNUjGcZ80ozg4yVROPRRwmHrxnGalz254TbvJJbxu5wT5XrF2utU+WKPqj\/gqr8DPCvwG\/Z58EXfh7U44RqnxM1H7SLR7e0s9P8L6L4R1q92S2lv5SsttIPPjZV8vzLXBCt5aV++eJ3iPSz7I8pyjB\/VsHh54vnlgsDyU6c54ahKPtJ0oOyip1IuFN+7GUE1JuKlHN5esJH2jbb5rRk1tFb6uSV7K+yXe93zfjZ+zP8OdQj8O2+vfYZn8VfEi4uPEV3blSDp2l6g8f9hWci7OHh0uCw3qT8hUKNuX3fzLxNi54zHUMroLnpZZBqrZaPG1\/wB5iakpXaap3VLTl+CS+1YzwsLqU21epeWr0Ud4r\/FaKfn7rajdI\/px\/Yo\/4J8eEfCljpPxP+L9vbeIdZkihvtP8P3C+bp9mSiyxPeo5C3U8eQfLIECHj52+ZvqeEcjy7DxWa5k6dWjSblClKfu1FHVuX9xfy2ldrW2ql7dCjGCTWrafvX6b318t9JN7WScef43\/wCCtf7X2qavrS\/s2eBXTRfAfh+TTr3xRa6Uq2sWp6nD\/pFhpsqQCNfsliDFdyRfcknMG\/HlKG8fi3jjFZ\/iKuBwcoYTIMHU5KGDw8VTpVMRT3qTirObjfl5pc12m3ytJnNjq\/s4+xjZOWs5c13a+kVu7Na3Wjulpa54Z+xZ420DQLmztNWjguL\/AMUXdtZ+bcFJY7e1CjAZXyql2OOVBO7HzDLN\/H\/jfwxiONMuxb5ZLB5JQ+trlg\/aVcSpJpqaXNaOjuoxsotuLt7u2VYhUajuk5TtG8ndKLv0slu9U5abtrRR\/ZjUNf8A2bdN8Ka1oHj6w0y5i1yyuLG\/iWziMiw3MZSTy3ij3QnDK3mIVdSoYZIUr8HwTxz4TZXw2sgzbGyq5u5ctWEHOVShXhG0GqqjNUeWVm+bll3tFKUvsKfLQ\/e4jk9nUire1gpJJ7x5fdevrHq3a7lH87fFH7Ef7JPjDSL1PAniSSK+v545NPE+sGS7Eu\/YYGMsrFkmDHKOqMGUFMPhn\/VfAHM6HEXiXiMizTN4Zrwh7GNTD0sTGFOvD3Zc7jjKfJKok7KEnKU6buneKhGPlZ5l2XSyt4rAyjDEuVk41OZz973U4W00fLa0++jT5\/z5+Nf\/AATO+L\/haZr34bafqHieMzOZrIYaRLb+C6huDxJD0DqCGj5bcVDMv9Y+KXhtwzw3h8Nm3C2Y4zF4HEXdfBVrVsRg24XclOGtSnHlmua22qteUY\/CUKeLb9m4J30i43V1zW+H4d9LPs173Mpny94c8D+KtA8b\/C\/\/AISnSrzw74n8NeNIdA8S2GqI0c0UGk3guIriYsWDodIleKORGcSxQJtzGyFvWy7PsNV+jT4j0sdJ4ynw\/wANcV04QjadWvhMTleJr4SjGm7J\/wC1ynRs4xin8XKkpx8HH4DEUuI8rmoOnLEVaHted7Sw9VRnL3evsVGSkuXazvfml+qfw7+KGgfA79nb4geCNZ8VaI\/jLWtSM3hHSbe7Seb+zrbxDFqNr\/aMaMTZL9mWWIo+CNvyGTOxP4u4W4zjjOGuRYPP6OMz7LsidGrleBxM+TFYSrhZTaxS9ynGcaHOpTnBqMrO3NzQ\/Q62L+q4TCwnyVK9KcuWn8XNFucLK2i02upa6u1rS\/PPxx4t8d\/Cr4ifEi48V+CvDOj6B+2Z8MLPX\/C+q2kiCbT\/ABR8N7i2sNSvHWUQvDe6l4fvbFvkzlTG6MJFlC\/s2Y5hX4+jkX1HiLHyxfAOe5dHifKas6jeOy3HxcMLWmqNWcZTo47DSo1ak4yhKHtqPK7xnDCCq5fhMRCphoReYRjiKMnb2lH2k4xq8unaUZci5rNp8+5+cn7O7fBy3\/bhgu\/2gtP12b4SRavqV3q99o8aXk17bWul2KNPFsIlFuL+K3E8abZxC7GInBNf1VkEqOD4ewTrU6WIoUVP29GSelGp7RVKah7q9o3y8qlKz63vCMnlmE9jKWJr1HToulOVOrv7\/Oo6R5nJK6antpb95JJs7X9r22+CWsfG3x7bfAyO81X4QXF7ayeENR1K3uLDUYIpNNs3uoPLlPntFZai11FbyzqjyxqrFFBUt+cZhlaxWaV80wMnllJ4hPD4GEI8scNGEafJUgp1Ix9pKM52Urrm0UW+U56\/K6+I5qqr807QqK0eW\/b3E2o7fDJOO8lY8v8ACsel22nWGharc3CWAuUaW+iRGuIYtpQggfeVScnHOAcV5lPK+TGzrVJuVKra8NFyz5k20vdWl5JJydlvK7jKUSrwq0KNGaUHSqtuel+WS5Wm\/i0ai73dlto7S+xvDfwP+BV9Z2t\/\/wAJRpN5LKgkWSe4KlnVctHIr7WV88FSuewwDvbrzDiTK+HKatgsXi5LlT9hQcmk+tleUnq1yrl7cysubenhcOmkmm3qpJrZW+Frk325lez0d7c5\/9P8A\/A\/iHVdAdV0q\/uLGSQ4fyZtpdXyrxywODDMhAAMbs+7vnJ2\/wAZZ9kMa1V15w5\/Za000+a6vZqrTvVh1Wkns09rR8CfNCzTkpzS5n1Xf+e7stLf4m94H0bpOqTagiwTWzJfzxPNbXlsghgvDGheS2lso12Q3JXLwzWziGTHlvCHZHr8ZzTBxw9eVZ\/u8OqkaVahLnnOjUqz5IVvazd3SqVLRqRqJThJxamoJxjcZOTjCV5c0moyjFrbXkaUoq6tpy23t711zfp9\/wAE8v2CNf8A2uPH\/wDbnijVrvwh8AvAdjB4h+LvjiBB9phtJG\/4lng\/w35qSW8vi3xPIrQ2iuJk02xS51OaGV1s7O97FheH8hyLiHjrjjNf9XfD7grAvNeJ82jT5q9anosLkuUUdfrec5vXdLCYPD01KrOtVpRhD2tbDnbg8LicZXoYHDKPtqzfM3ZRpQW9WptC3xP3vcXLKUrwhNH6Uftoft0+Afhl4Xg\/Yn\/Y98M6R8MvhF4ak+xfEK58NPv13xHqETI0+j6rris11fXtxMiXHii+nubu\/vLlVsbq9mRZ4l+X4H+kLnniflmFzXD+H+G4G8IYxjW4U4KxMYY7PeJ62Hr8+G4k4sxS9nhY4TmjRrZdklKliI1MZSlmOPx+YQp4JR+oqRwPD9ZYfDNY3GwvLEYi7jGjJxX7uCleUqrV+arKUuSnaMFD3ox+X\/hP8X\/AWjeEZLLUPhxo+ta1czkXep6skV7LJG75XyvPjaSMAYGzegVuQZMgr6XFPiLxpm6xNB1amGy6vo8PSdSK5F8KapuMLtq17O9uqXvb\/wBrKrTlUqwvK1lBbRV9U5K2nV+5HXvZHouo3nhyeZb7+ztP0ywuIRLFpFjGsNmpbypI5ZIF3rJPGUxFJjciySg7i4K\/I5fx1xhisTQrYXFSp4nLsDiMpwmNVOSxlDA4mdOpiMNSq3dqVWpRpOautY3SalKB24bMaMcvr5fKUHhcVXoYudPkTftqEKkY2afupxqvmXwTcITahyKEfIviD8SNenbTfDsPi2S38E6dtu4fB8jRW2gz6kQRLqF9AzIL6cxFYQ0qSeUnyxlNzhfzfijKq3EWPxk+IcRjcbiaMksNio47E062DdSlH2sqMItU4VZ3t7RrmdNcinFNI87EUYVoU4Rqezwybn7NO0ZuT3k1rJ22i3yxT+zdngfxj+MDeNvh0fg3c6V4TvtAn1qDWtMgtbctJYeIWiez+1WF6Y3n00X0c5t9Tjsmiiv0WBrmKea0tXR8I5BnOTUpYDC8XcS18oeMhjKeWZt9UzKhhMVzPmxGAlVoU8RhatSnKdOqsPiaVOup3xUa3LSnHDDVMsw2OoU8ZSUsBWnGljZYWTlVp0puzqxi7JzpO1Tku3JL2aceZnzN+114LuNI\/Y3\/ALNGl6Rpo0GTR59b\/s\/xF4kaO\/vZNejFpcnQ7rULrw7NdWcd4bT7bY6ZpV00Lbp5bpkLN\/Rnh5n1XBY\/K+GVUxFWMs1xeLqYuM5QjjJ1o4mali8LzVKUalGnUVGnUoTj+7ilOLu5z87iijgK2YYnE5Q6zy6jClh8NOtelOvSpwpwdeVHSNNVKvPUVOfNUjGSTbtOR59Ya58R\/GXgD9m74b+N4ri9T4f6r8EpPDNxeOI4tL+HOnWwvNL0m3V0jiito49TXUHjBjlYyXNxIJvneu7PcPiKma8TZxg8yr4uvLBZ1hpYGtU58VSnyVIYX6qpNS+q4Vc9KhCleEISStz8zPkK1bFQdHB4mDjCVajVw1SXwyozlzcintzXa3u19vm05v2Yh1PUlJmMxG0lgwDfd9VO7Axxj5cc8Z272\/lGpQ4thVVatmWYwqwUmnOviYTT6OXv8t02+l9Ely8vMfQpXj8C6bdE3d669dW7\/wB1XTbl1GifFG90uVI5bpJ0BCsjlc47gMA3Pb5ge33a\/R+DfGHxP4LxlH6rnFfHYaE1CWFxs51IuN7cqnZW7ay162s+XCrQoVFKTVn8Ta6WVtPibjbvHteT1nH4V\/ayS58WfGD4QaHYxWekeG9Q8W+HtcvdO+zwomq3sOoRT3LtIqkMsgRw4YurbsEEbVb+w8q4oxvibXyLCZrg6OWU8diabrQhKEIqVZP2tdySgpSmnK0nKU5t2d\/cR6lLLoxyivi51pRdGVkpq7qwdlTSlLXlWiTV36WbP1\/+IH7Pvwu\/a18KR+D\/ABPDp3hDxFpug+T4L8c2tvBDqOh6xFHFHYN9pyJZtKDhTqWmuxiubdpPJCTpHcJ8x4p8FZfknEFLAZTiKeHhXSpVYySlQrJ2S9tTsouF92lFuOl3aKPFwM1ias41P3cYwdrbS23s4qy85LyUfdR4T\/wTP\/Zq13\/hsjQPhH8W\/F9hoXif4ar4l8SRW1nBcTr4v1\/wZJFANL028aS2MRl0vUrHxb9ui+0R3mlRSiLDyl0\/JvDng7A8VeJc+E8yryyavgnjXicLUjUnPEVaOD9vTo4OrGUFy1qFaOOwuIcoKdGi0oSqNo9aNCWHq05qrTq050lXg4Jrm97knC0lD36bcea3Mkls058vj3\/BR\/W\/iv4s8ZeDfhH4rs\/EV3Zax4+13whrU919pXS9N0nwHfaZe\/Etba5lEkKzyWd9pFi3lCSWW01yCPB+2otfnXAeXcS5LmXEn+tMsXWzHh3OM4yuhRxkqlKGIxGV4tYKrLDc\/Neh7SpCu5XScatJXcpPlwxVX2tSGHqTlSjOXI5qLlywXL7SVrrmtGyenM+ay5eZOH0R+yrrH7P41210j4natqXw+hWS3ms\/FVvYf2rpiyWkqGGwv7S3X7TY2ZiRY1niWVUHDpGqKX+zweGo411sPmmPxWVrFTnUnmOGorGv2kve5a1H+NyTk\/ipcz3XLZRkTOk8Q4QVdYenBp2Stz2dmnJRXIpJW1d0tG1fmj+1lh+158EbxD4E8F\/EzRfEOsWlo8VnFbi8txqGyM4+xtdQQLM5RQxjRt6jI2nlq\/IPE7xJzvw94VznE\/U8yxmW5dSnGGZ4fCYj2NSkvdjXalyVYQbtf2lKCXX3Ywcvo6HsqkqVGnUi6its+vfm99b7K8r\/AGeW75P5j\/2wNYl134teNtcuCTcXev3bOTuyVj2RINx3HISNRzg9gWwSnq8D5o804NyDMnKTnmWW0cwc5XUm8Z+\/tK+t37VJpqLW62ifO4t81etzNNqcotvpyNR031sntzpXS15uePT\/AAFdbefRrsk71ktmh5xhw424OVxggchl+9\/EAC3q5vCFTJ80U4+68Bi3NL3rxVKblbW90lde87votzTDvknGXZp\/4Xo9d9LtW89Xa7jD9PL+bxCsNneX\/hrStbhvYlkjE06FgCu5RJ5hcZI7hcjtuyDX+TeRcQcF4POMwxFbLq+ISxVerKGJk6qnz15y0pSpunG6leVm3dbrSUPuK9CtOlR9pKL54rl5baKy3fNLRbaKKeqVrSUZfCvx0+DPhzWYdB+IHw9PhbUTIPI1aJEezMgbCyx3EQYLtJyAxXHU46N\/aXAPitwbRwlDEU8jcadKK5sbgYQ+sUdt6dFfWLxV9FS5Hy3lN3UofPVXh6dZ4ap+5mno5q8JPTVSj7qeut4aN9HH3v0w8Q\/tUfBT4J\/s2XnxLv7\/AErXbg2Utn4b02OW0m1DWdRuVeOztQuZZYYowWnvZSjeTbRyy8kolf6N8M8ccNz8NI539W\/tXGY2hGlleHxTjCrOVT3eSop3lGNpOcnNtNXa5bxZNSdOnFOUowUVJynFJ+0e8bP3knd8tv7u7s3H+PL4gftQ6347+Kk+tmW0u\/EOv+MrW7iS6QC1FzNfpFb2wzlo7RYvJs8ZVzbrsYHcxr46tlVDD8K5tkyrvBYDMsrxdHGxo1JKm6denUlUlL36kajpSqSlHnu2rr92lFS8qtiFWxFLEy9lXnSqRlByWqvFKy33sot699HeUfQPjN8RNMX4jGz8XfCiTwr8TdLeX+0L6wlL6TfpcWiPYyC1mRIZrSaF4p4btQ\/yHau9lda\/mzgXww4u4Xw1elhPESOe8GtzqYfL8RQlHFYeXNN\/7HXjVm6VpcqVOlONLTl5I3UjfEuOIre0VCVGrK8nF7Sa1UXHTZe7z+eid5Tn7H+058NvEXxN+HHwA\/a18VJpknw9+F3jzwV4PuvDtxdvEreD\/FL23hbW9QSJNsSKus3ltfzOB5iwAuSFUM3xXgZxzR4G464v4LzyVXE8UcZYTNnhK8EqlWticgwuJzbCZeqXM3QpLCUq6jJp+0xWITqJTr0+T36mDr4rCYfPsTGCwlOrHDfVHusPUl7H2qk72k6\/7yyvaFm7cqjH4k8d6T8D\/wBnH\/gpBYt8QvD1j4q+GWufDvwjqM2gaaJza3j6pb30Uq+VCJQ88kunRSSCNR5yt84RyzV\/b30afFDKvFPgbE8Q5pgsXhMvw2e59k1ahj6cJ1H9SpUJUqkaVrunKWIj7OM3GcZXvH+Xhnh6VCvjcPTmqt4YWVKHPaKUv3tWKblKMWlBX958ydveume33ng\/4E\/tQfHnx\/afC\/4Xaj8NPhjYafocmkzafdxpcWuojTpU1mW8sx58FtDqF\/8AZ7iytA4eziieSTm6NvF+p8GcKrjniSth8shVweVwxU4VKFTWpGnGFP8AeUqjbUU5KU+VuSjGfs2lyXhwY76hDB+2oykqsZvRR9x6RbhyvmSfNpsuutn+6+fNP\/Za8bfEv40eIvg98AtPu\/iLqHh+3e5vLqRrbT7SzSIASx3uoTyQ2ay7mijVIw0krusYiLB2rn484Sw3C+eYrL8txGJzXDYZ06dSrCheVPFyg5VcK5xlClUlSum5c8bXSd3H3\/Oy+niMyUuSnG8VzOTajTUYuylq4vmb0tf7N7pe8fOfjbw54w+H+sal4d8TaNqGh6zompXmmXlpdxN5a3unzPb3UEco3W915MiFSYpW4CkMMgN8Tg6mHnVvTq05VIwi503ye2pRk9HOm7ySvzRaknFy0TlyibdOTjLmjUjPlkm92n\/hi1f3XqpeaW0f\/9T8DbjSI9O1R7e4jESGQnayb9kn\/LVVYbCoVm4zuwvBY\/LX801P9qwsKtL4pQ0fVxs2mnyq9uzV30s7qHm1Eq0FVSUXq52dtY9n220t9npc9r0PTLW+063v9P1OSG5014nFgt053yIC6tGHaOSPK7iSisqn92VP32\/Kc6j7HE4jBY7L41sPjqdSP1v2EXKEJaWm+Vwm4yatztN76uPMcXLePxcrp6q+jfZ\/ErWbSeqt3bcZQ\/o+8b\/tveD\/ANnv\/gm98GPhd+zro50Txb4r+Hej6l4oMYgnvrr4y+J1lm8ceK9Rv4sm8g8EabbwwaNGSIIrnV9D0x0xoqrX8++OuCwfi\/ifCTwWy2riaPh3wpKfiF4qVHOpSln2dYKH1DJ8jxnL7L28cVjMVjq041bxpU8HUlRjKpgqDh9ZkeIjleV18Ykv7QxUPZUtOdxc5ybkuyhClGSitFDlhK3PLm\/Gf4fWN7dRSatqTTzzsr6hdS3jPJdXNxPIXmmmd3lkmllnkZ5JHYuzsxcFmct+y5Fw1hMwhhsNl1PDUsJhp0MGvZxhSo4eEKXLSpU6cXyRp0qUYqnCKhGMIrlilHkl5HvyknNynObcpSk7ynKTblKUnzczcpO93H\/t695ez6H4otLq4Fkh+zhbY3F46OA0CrkxKzZJBKruPy8fKpznCeZ4gYLC8K455dhZUswfLFubXNFydot3s0lK+lrd9NXIdWcKjgoNQfVNJ2tfzbevlazttyhqPxh8R6vMulaKJfItf3CXGMK6p8uTJnaQCOCH47AAHd8BlmCxdWU6uGw02pvmkqFGU4xa31horX1Tu+9uW8XGq4\/C+X\/G3d97pe06Jd3K\/wBialzamgy3+pGd\/Extb1VXzkAnzOHiUv5OXUgpJgAhSOflG4ZL8mM4RzbN8TLE5XQrVMVGLVWnGM3Cqorlje3NGFWMfdi2+zd7KMfTwmKheNPEtSptpwkkla99Pe21te3NJe77iUuaXgnjLx5YXPjvQ7aytY4bWx1EXHkRxRo0ktrueOPCA5CS45ZQMjcSwOa8zJcNisLKvLFxqKdFVKdWNXSVOaU4cs01JJwlo4vl205bRiYY+rTqYi1KnGMIp2sl0a20adratSVlpy3ueoftSPY+MP2NfijrN9fwafd6LL4StdO0qMol3q11deI9Liu5ZEyzeRaW0rORF0mYElFTY\/13A+UZ8uKskzmGBrVMlljK8K+PlCaoQtTqwiqb+Fv2\/wC65nJx3STvNnTjKUZ5JXny+zcFBxWj5n7SnfRxT2d309NGek\/ErTtZ0bw7+wl8WNGMUWneL\/A\/gj4cfEyxsbKCWwv9U8LaDFDDpuoWU6XFvO82lxzkrIhlR4VmjZDtCff5lwvjKWdUsFmlP6tHNMXVr4SvWnKgqbqVJSU3Wjy8vtKTjNWvBa3Tu3LgzWE6mEyFU1+7rYilRrq3Na1GTUW3eylG9+uiXvNRcvermDSfGixwLp+r+A9QtBs07WLBpLTRLhf4UuraN0exkzjEuyS1O47tgxs83jTgjKuHqU8Rh+J8kzOukni8pqYuh\/adFfanh60b08Xyv3uVunWS2VVpnPVoqD\/dVLxTfLHmaaWraXuyjLlaTVlHSy\/xctbf2r4W8RWOkePZ44LO5uYIYPEDY+y3aSY2NPLGfIRpi67bhcQShuWRhlviMPlXCuY5Pj5YuM6GPo4WpiMDicLG9PFSiv4GJhDmdKaSc6da3JP4ajpycJVc4+9JKb0lPlcmtfeere19+\/m5q8eT6a\/bK+H3g9vCX7FXxWuLyxsBfa1rXgt43ntrS2ZLe5tbC21S5aQp9ngtb4wiW9chU8+RjIcPv+lyPE418OZRPD1qv1vE5djfqs6cr11Uyio5RUIxlGalV1hCVpOVaCjq24nuYutUlTw+FcYulWrUKEItqMVKUbLmk9HeUYK6933nG8NJy7nwRqvjDwhrFzcana3+v+FtAvI7fxFe28nn6Zb2PnJHMf7SRhbh1j5QpJubHKAguvzmY8SZlmEpZtj8yxdeVCMJValeUqsYwp6cs+keba7s29ou6hLCeXRw9eeHdFU6lN8s0mk03bm1cZX0ad7xvs7PWPz9+1R+2t8NfhB+114e8b\/BXV9UtPFvwZ13wRrmniXTr9f+EovNR8K6NFrvg8WJij1i9WaGG1s7y48htIm0O+v\/APS0mWBJ+rL8BxDV4xXiHleK+pwpLIMVgq+JiqdaMcnwlT6xWr0JzjUp0cQqv1Vwk4+2w\/O1dVIKfVU\/s+GHwOFp4qnCvg8XWWIjyTlGVLF8qajUV05RUUpRXPy8+tnGSPK\/il8Sv2g\/jr8QNT\/aP+KC6PF4n+Kms32t2vw80jWEGifCnwhI9tpWn+FtMsNQuJbf7dqUGhadq\/iW6024vLvXbuaxvr+7lubeRbXl4h47yPjDirHYrBueMx2ZVHmGZYnKsPjIYOhXnKnSp0aVSvOlCMaNOm3yJ\/vas3iKrnWnNw1q5RicG6mMxaw8aHL7KlGrUpyqcjenJCLnLmkknNwppqWrvHlZlarqt9ocNvfahZz2dpcR+YqQSpNEZBgS263D+SEmhc48qU4lRkkEwJCL9VkWSUM592eLq4WrCShXhGgq9Wlza060owkv3VVSSTgqnI4yTjeMlD5PGYyOBqyjUhN05K+HqcyjCrFbxd4ycKkZXjNPf3Wm+aMYx6B8ZfBVlqdm+pXniDRp7eVJI9Z0+P7XPpsyf6uZraOSC9URscu1qLhlQ5CHJVvoc28LMVicLWo0MThM2w2JpThUwmKpOlTxUJwtKm3J1qMr6rlqeyfdu0eXijxBhYSSrQq0ZpqzXvWlo1ouWT8pQVTe9tJMwPiZ4ntPFL3GsWOvW\/iK1lnZZ7+Bt80sufnuJC6pOsrAhpYJ4I51z88Yyy1+e5fw5l2XQqcN5rlNfIMbh6VSOWxv7PDOEIydOlBc31dwvpCVJ8jWnLFqLOqWMhWjGrQlCtDmXM4Nys30e7jJWbfNdLf3rxZ7Z8HrxY4NPTBbatueOGG1hyDntjOcpj\/azXzMHh4Yav8AWuX6vTw1f6zfVezUWqi+JK3Le38+11dyh3wkm0r\/AMqve1t1o9bbdNb7xdrn6h+F9Y8K6zBZWurX1zZRSQwQJK1y6xo3lBTtVmUxqzD5SG2DH3hkBv4lqcHeA2fcTV45TT+rrFYht0KONxOHoqpzNVZ06CqxjClOetOEIumua0VThyqX1ypYp0I3qKUdoysm9FfWUnK3u6Xbb6a6c\/yt+0B4b+CPhbxRb3PxK+IvxKutJl05r6x03wpb6XcRtIrMJLV9R8sskijaw8x1LIyscFTv\/sXwZ8LvDnIaE6WTYKjmOZVqy9ricesNWq0qU3zU6UOe9KnTS91yp0oysoqfPNXh8tmcIUJSqYyrWSUE4Rpxe707VXd+aj5ctmfIl58bvD\/w78Wf2\/4L+HN\/438C3nh97bw9oXxN1H+02tnlV47nU5Imjv7OF5iRtg+zklVz5sWStfonFfEGS8OZrQyupTy+P1dSjVwdWnSdGTaUU4xVPkaUmvsxsrNN683ke0Sp0pvndKor01NtuMUuqtJp9V8PZc+rl+ZPjUXOu+NdS8WPpdv4YnvtUbU7fTdFi+yafYyeaHRbKJcIiRyKsg8sKocthFw4XGlmFDNsDOlRrUsRhqtKVCqqU7qNOopR9nyxt7Ncr5bX0skrNlU+WU+enJq+mjctFsvs632SXlrb3vcPGXx68XfEbUtH1fxtPa6je6J4esNBhuY4EiupbXT1lWKa4mAzPOVuGRi+cL0IwXf5jh\/hX\/VrLq+W4DG4vFYepjKmIpwxtX2vsKdT4aEGoRlyRabTk3OTld7HswzGqmpVYxqTUFGMlGMHfu371+bp7sV23Tl96ah8YPA3xP8A2RdR+Btl4hhuzc+CtQiXRrmfyb+x1qNDc2dxAjEbnt72G2mgI34ki4JULX8UZtwTxTwZ494TxIxWCxPs6fEWGxlPHKHtMHLCVaqhicK378FCVBSp1Pdg505JO8ouc+\/MM4dTKaWBhV5qMVGXLbl5Zwkpapc6SWr1b62572Pxy8BeKtb\/AGj\/ANqTwVrfjNZVm+HHgrRtJ1pld8XFz4Ot7yJJnbaCrXF3LkofmO584B+f\/TbhbhDK\/DLgfiHA8PyWJw\/EHEOYZ9go8ulP+3PYVFRp20lCjFWhOzTgoq7cVKPHh4NVaqnV9rzShNOz0VOjGNtpJqzs7R5ZO+js2fpx+zd4x03wb4K+LGp6a0EepeL\/AB\/\/AGDpisUWQkb4gEJKskcYDPtBwsaFuAfm\/qjwxxtDg7wwwmcyw8KnFGaVqmCwFDX2k8ViZOFNSVpyUIQTnUejhSjLe\/MeDV56taVBSaw7qupK9muSOkkryS0l2jo9eaKdz9KP2SdF8OaX4w8O+C\/BmqR+A\/E3iKW8bXvG9g1rFqmpzXjGeUGaWKXfI8rs8X2jzfKKDyw2CtfO534T8dYPK8wznOM+dTDYup9bq4elCUq9OvipOrVm5PSlTTly\/u5c\/wDNZ6y9rKJYeeOlSw9SVFKm4pU5K0lT2jreL3um0rLRy1seMf8ABSL9mn\/hT2nah4UbxFZeMG1uSbX4LjXLVW1eV7uaSSXVIdQih88zidiZJN43yPmQMCuz+TJ+E88P4j0+K48R51CNGlGm8LhqyWX1aLUlKFfD8k4VYzvzSc\/aWcYuKUm0bZhlrg3UjWnKTm5vnV6kPtNqVtU9b+\/aOzUbvm\/\/1fyx+P8A4T0WDV4vEPhkRPpmq29rfK1u24CcwK7SqmWMUV7byRyxBuPnwuTGHX+JvDXMsyq5bicnzr2ix+V16mG\/extJ0lLkjDmVlN05LllKPNzWvLl5ry48UqdLE1qFFKdOUFKmt\/f5buybT99NW8+3xz8y8NRaVqFjNGZHt9ShCuki\/uxIh27hLhwp2sdp27mKEkkEjd62cSx2FxNOXsY1sHO6lFpVJRlFqzV1GTun15EnpZ8r5vP5nZ8zWjveVrLe63cVdLvK3w2Vrn3t8N4bLxx4a8NeBZbzZeeFtIN3qbXTtILSx1S8ub2wtELDapnhaOVyNu5VjBZsIr\/gHFCweBzCpWw9C1fOsVU5nSioyq\/VPck9LOym5uK95Jym1y3aPbwkXLCQ1f2pwT960JT0lpyx16+75JpJqWj4t0CXwh4T8SakkoQW9nNFYzIB5ZRuBjlVwrANnDYPAX5sr08HcSYzLcZisqUZKji6lOtU5ly1KVSnzRjJO71lGVmtUlu4oqvh5Rg6rd\/et5W6r7KVndaS93RRcb3l5P8ABrQ9Y\/4Rq51PUTJc6j4hldfnDs8UU8u2COJMFnWNSNyp9QGGBXpyqZRxRxVDAZring8Hh37TEYqrVs68KeqpQenKuVO\/XzjZQjxck4TdSrzVOf4Iwd\/RJJR1tot79ZKycvYPHPwn8T6C9lpOhajFaR3MCveNP5KX4Zwr7ligSWSGOQMdkbsJQu0PIxOV\/XqHiH4aZPQnk2Hw6dCEfZVMVgsI8VzQjo06icI80rauDd335jR4Wt7s5wqUm9VB2UrN7ybtezcYK3Na6Xu2U5cXb+DdS0k+Xc6jdXM68yOLmU5PU4B2tgc8BRj1bLJX6dwd4jeE9OhHC5ZWoYXE1dLZng54WU6ku1WcPZXb0\/iR5t1a9pdeEoYdTUK05Qk5byUXG+mvNGUV3t8L1d7yUZSzp\/g3Nr+taVq9nerZXFvNm5lMTSPKCeHjYbR5oOQd+QwwSTgBvnuNfC\/KOK83WcZfiKWW\/XXF5nSw8YSpY2Glq1GMW4060oWi6kIzi46yStCJ7lTKKNSVOrGpGKt7+ifMvszjrFNu762k\/tSsnGf9qnRl0X9nnxNB9pHzz+HreKGSQCadjrdi8r7GYPI52NLKyg7QrEjYPn9vPMowXD\/COFy3C+ww1GjXy6hgsNzRhUqKnXUpunB\/vK1oqVSo4p3blJ2u+aM+nSp5XXo00oXjTgrtcykqtN3tq3dau11\/d91cv3n4mHwoew\/Yn8F\/Dq88U\/ETwR4Q8Q2XxI+LdnZYutSj1u8+HUOiNb6PYxRh\/Kj1MrH9jt\/O2o0kj7nbe\/8AKn0muOMzzXhnifK8gzLJsjzbLcqoYbh\/iXMcfg8NlNLGSlSjVpVsZOaoU5wpRrQhOc3L204RlyW5TgzKlhHRyGlRxDrKGJjicdCm5c0IQw1SEbOMvjvK7jDmcLavS0v1I1H4T\/DHUvCF1rmk6U+kwppbXiad4gsryx1qaNLdp5Y7fTylxK867QkYmNu8j4CJHkhv8Z8bx1xbl2ewwsvFqhxFio1qcMRWwlPOJYD63Unyzo0sb9TxeDrwhUXKq8pUsNOnLnjVUFyG9bB4SVGdSnT9mlC655u76u0ZTjLX\/De\/utLljI\/MDxhPY6pZX0Hhm8tfFHhgyTwCAIJ30e43N5lv5FyFkhYOGE1pMkTqQSkccgDt\/pBwHlvGtLhzBYniPDKrOVOm54nA4i3Mp01KnWo1qfPBVZQkpppqFb4lRcZPl+cUea+j5deRvWXzXurq0k243Tva9peAeItb8UfHOxi+CepyeVP4X8P3jaRBqdzd3Gn6d4b0mDVNd8Q3lhFHBd6g5srKC71CeztrW41K9dYra0iurvyVb7vIsPm+VZtltanmMcwhiMZUwuVSnTjhamHnKUsVQoYqnz+wVZ1Pap1KXs1Xcb1IRnJwn6OFw2IzV0stUlKtKUYU5TbVoOVubmVOVnBtOUow51BXUpStGP1D8IP2tPBn7LX7LfhvT\/ib498FftTeO7+6kuvgv8D\/AA5p2taVpWlaDayZ0fxZ+054mv7SxN5p2nyeU2h+B9JtJdQ8TW0NtLqN9Npsrvb\/AK5h+FuGHiJcTYmk6mZ4jGSxOY8MOpKrwzgs4oTcK+aYyk6NCrjpVq8XiMDkOGxMsHKc418fWo0XPDz9TM8PjcinUwGN5aldxjOGIUnJ1aM4LlftHFO1m4uTcZ+7y8rSlI+RNP8AiHpPx5+MPxO+PX7SPiG68Q\/E34k6FBpEOseCtD0rRNF8Lrp6RxaRpVj4cRLcyaJZ2sFtZPI9ze6gbWztdvmyb93x3iPiuJ80y\/Erhirga2MlUq4qthc1c6CzOvWUVUjLEYeToYbmpxVLDU40YUaMZRTqKMIzj4dOa9nik23PEU1B8sYctoPn5HzK95SULzUr+7ZSV7S\/WP8AZX\/Y4+In7XHgbwd43t9c0q00DwV4fb4cWNxMm66Mfhe\/udQh0wKoUwLFB4gt5YprgvI9vPEACINi+HwfUeJz3hzJ82wuJeGx39o0KeMoyopYHC5RUy9YvCzm7r29N5tQ9nK\/7yFRunezZ6FDBVsXg44jm5ZUoeytJ3k3zVOXRdLwezeqtqmpH1d8Xv2H9I1b9nu\/+Hp8MWml\/E3wDf3GvWOoWshu5PFUMyxLf2E8zR28kj3NvHFLYRlAI7i1+zIQtyXX+h+MsiyrhfEUs54LqVK9HDUFDFUrt4qphXBOtCpFSmp1sPNLE0Wrv+LTV1VuedisDDH4NYHFqMK8ZSqYectIqpeyXO1FctZWpu2i9x+6ocsf5zfix8NtV8IalqFi1vJa3lm3m2YdsNMn8VswYlxvAbakoZ0ZccbzXs8KZ1SzzARxOFkpYqHvVqUfhrKPxTW0VNJp+5zKXWLu+X87xmCqYXEzwOLurN\/V6kv+Xbf2JXfNyN82kn7vxXVk5eIeHtWvZLxP7NdIdQLKktjK+y01FVPNtKAcBzh1V1Mc8L8rnBRuvifKMm4ryurgsygqc+Vyo4qlpiMPW5fdr4erK\/LUi7ScJOKqRXJJODuclCeJy7EOVKUtJWcY3ej3hJc0m10vZ2vdWk+U\/eP9hn9mux\/aX061vPCl3fadbaXpUsfi1J1IvdF12Ndq6VNgFfMBBuI5I8R3NoYp0JSVxX8f8G8Bcd5vn3GfCHEtGh9QwVWdHLs5wV1h80yjEwk8Piqd+edHEtfu8Th5+9QxFKqouVNwnP8AQMHWji6Ma9Jy96KTg7fu5xvzQXwJ2fbmThK7cnFwPnP9qWP4sfs9fES\/+Feta7Be\/Z4PtmlXNohjuW0+WSSK2a5QEeXN8pV2jO1ymUCBWSvyHDfR6yfhPiit9epyrVcJP2lN335nJRlKKtzTcU17to3c5KDspw6amZ42nahGbtZxklzaJra6gpb7X2tfSzUPiy8sfHPiuQvfR6\/rEMjF\/wB683lqD822Iy7ljiOFDBV24HG7bvX904dox4frxxOBoKil7sl7NLms7JuVo3ktrpO97txtJTyjF4mcY4uU3SnL39OaUYPfRyk1a9tZX+1q0lH6G0jwN4o8UaLpdjaeFrpriGzitnUKrLDHEoUgNjkkYOV4BbHy9a\/Nc+8LfEvxB4uzziLLMHSxWBUoeylCvb2eHo0\/d5oQV7+09rJp3tzauV4uWGOoXxKjRfJh4JU6Lm1zOKWrcX8N3eyuvO10jnvHn7Put6H4V1HxR4m8LTWujWiETXUqAtZrwPOkRD5iIF58xsAcnnGxvS4Y8KOPsLOlisPnmFwcYVpxrUqc51faVKEXOrQnTl7O01GMk7wTWqUnd8sLA18PTdRzUVH35S25r6XaftL67JuKu7Wbj7vzvF+zX4j1xPhhqGh3fm6R8YPF8HgrwtqAt5jbR6vdLLNEL2XlI4DBbXEm8vz5TIoZim\/7jKuKMrxWb5xw7VnX\/tXIMH9bxc\/q8qeFxEVOlRqwoVNYe0p1KkJTjfmUHdJRjM78JhZ4qrQpKS\/ftqnKz5JcurV24y2ba02Vrq6R9OfFD\/glt+0D8HfFWgaFbeJfCfiDVdesJ7zTl0q+ltLpfJjjeSCeBvOeHPmBElJ8qQ9QoYV73E2MyDJMBGrxGqH1LEUVV9m408ZCVOUea04\/Zk435U\/iu1G3Lyx9bD8P47GYl4fDKNWa5rqWmi000adm9\/dt9qzaR8M\/sQ\/CPxp4k\/aP+Kng3SfDl\/qWtXPiW68G6jNaxb49C1AXU8N1cXc4YxiNbi2uEKHHmkbRIjMtfsOT5nkOIocHSnJVsBiaWHxWBpUo3ljMJ9WjVpRpU3qoulOLUndQXRtSRlOniKE8VRVKXtIOVCd9VSnBcr5v+3oOyitVu1y2l9C+BP2dvid4K+Jvj\/R9cuYftPgX4o62l1EZpD4bjltJ3tr1g4yXuI4pBF5QiQxTo4kZdjhv3rh6pwvgYYDiLEYjE1s0hmuLr5dkNJfWKdD99Vp1IqinKnzckfZRnZNb6bQ+fpUcXUpOkocseeTqVZq8n77fxrVqTbd5K1t+S75vp608daP4D8T6XqkPjAvr1hew3NrHpi7tk8L5Clo\/NwhICFWkTjIOP4f13EZtxhxPg6uHpcN0sBlmLpypyqZlU\/eOnNWTVP3UpKzldpWaXxe8bYKNHCVoVfrKdeEk1Gn9num79dmuWVtmk03L9fPj74Nu\/wBrf9ii1\/aAstW0zVPE\/wAKNFu9Vu\/D1raRmW60e1RF121vp+boXNpaxPeRxAiJ2gyd24NX8r8Y8LZhw3UzHEYiSrTy580qCpqEauFqSU5VITive5FeUdvcTSgpJzPscVUhiMNTxUEneHM4q6i3GylC75JJ+qdukWlGJ\/\/W\/Nrxp4K1HR4IPDyltQ0+zjkXSLuNmZptFlcvDau\/zFpNJuHMShwW+yTxKGKQgL\/JlPLIZThcozp4iE4ZnRVOpW05J16cY8spL3kp1KPuzs1zOmpPmbnKXn5pGUKlLEQWtKXLNRbfNT+yr2SSi5Ozbm\/e05bI8a8JWIs9VuLO80ma9WG5CSbAVMZSZQhZ+oDBgMdcHIJyQvDxNXbw3PRx1PCzdKpyqb0nFwcrJX1aV5KVnsr2ucLqfvOePvU24y5Fsk97OMVaz5ls77tO8eX6AsvEemWPi7xTY6FqEtrd3d1pWmqFDwyyTWOnWenzWMeFxOq3sLxxKdpIP3A\/zL8\/wtwrJ\/2fnWf5esT7HDVZwtD2kY0q1WpXp1N3yynGadS00lLbRch9zgFh+SVSajFtR93pFJXcXfZRcmt1pvt73pn7SPhT9oL4djwV8L\/iB4cbRf8AhK7W3urCeQ5lvLdPLeZZ8JhZoleITR9A0ucsTlSXBeBr51j8wwtKVGeJr06dKjJcvs41I8ylFLmfLGnpqpKLdm1b3satZY6nSwlGk4udR\/vOW14tu0otc26tZWs9nKV7R93+H3wu8TReFrO5hMdhDbWgUahNIYvLK\/IoikwNzs6szlSrAAKVG7c34jx3llDLuKJ5XSftpYaFKpXUVfmq11zyptK38Om4qza1k3ryyZ01so+py9yV504Rc6sntKfwqKb3s03aTtbdWi5dZqetx6VZfYNXk03Up441jXVYfPF40i9ZAcEyZGdxYhWGMdTs97h3wxz3OeTFYPBYilRqWly14xpUVF\/ytrXvzRTjbXWyMVHEVoOCp+3t7qru6+6XKuZa6rtqpvRnn3iDULOXRG1S0t2aSSfyrQXe2AXDRbFmeNVDSyESMIk5Xe\/HzKu1duJ+F8ZwrUp4GpLC4vGOEatWhGpzLC0ZySi5pcnvOF6iSnHlp2bteKPmM8xksrr08OoQnXmlUkuZctODaVnZOTnJ35U7aau105P0C78YaMshvtHsrZrq2aSLT7jE9xI0mRbzSW0pWbTwmfNPnMskgXaITuZ1+j4Ol4gZpQq0+D8BjcwoUlOnHFYqEpZdg5Je9PDVq2IhTr14rSlTp80LpNwlblnhT\/tDFcjqwrYWmleKhWnCpKPROCbUYvduXLNbKMrpnx7+1HrV5o\/gy\/1HX4NSudYg1jRJ9Me7MI0GKKDUEuLiNbT7MZLvfHEEEYuLOOIHPlSuUZfQp+H\/ABWsyw+d8ScUVataPPg8dkmNwWOecVJYunOlCdDNMRjYYfC4bDt+0jHBYOrCeic4JsyxGKxyxVKnKjJUqfJWhXlNzg5UnFqNrS5U2tm9ea6tdyj9NeKf2y5vhxH8Irf4OazpHhzTI9O0nVPGmiaNo1ikeoRXElnH\/Ymr3qRJrklw8dtcyXaW+qRPHazxukqStEYPx\/xr+jn4MLEYWhgsu4k4q4iqYOtis0zDivifNcygqkoKeGp06EK2HweDcZOpTgsFQw8o03b45Qqms8c4UsNWhWqzniJe1qJN7SqfveeS953d\/dTipOzv8Z77qv7Vnxglm0a70HV7vXdCv4bhLuCY2LS6ZcrN+6nsry4RlOn3VpMSYruI7DZ4SYyTl2\/FcN9Hfwcji6DzHgvH1cDi8JGlRr8N5nisLiVOMW44rEvE\/X8Kq6SjOnUqQVGpJuFZSbh7LqxNbGqdH2adeha1Sm7QqU5c+sm3LaSfvRb05U1OF1zeW+FLvxXpPj3V\/iDJ4g03V7PxCbufXfDFvamxhvjcKzRx3dxc\/ZNOtZrOfZP9sgExUCUAFZnWv6W8Nsyw3A1KjkWX8N4rMeGcFgquV0sHxNi8JWli8GlP6vKvVwuIxFR1KFVqVGpCjQ5YJ0acaNOVo1GnzJe64cl25c15Xvsvh97RJd76q6UZfIGt\/FfxH8W\/ineaD4Aa28K2GreJ7Tw9eeLdJvn1WXU2g1C1Fxp3hLULm1iM2mw3CqdSvFga1nNoYYWu4JYi88RZRkGTzx3E+bYKk6daVbM8n4Yw+IxM8Lhq6wrpQqVJ1LYimlJzdPEtOdF1rYflqRlVh0YWWLrYiFHDT9jFTpU62Ji1zyftU+SE\/dildKU4xlG6i4zb1P2I+Pn7K3w\/8bzaf4j1Wyle\/tNN0+yv9W0h20a9e0t7S306G5zYeRaTPpsFvCEtZ7WW2jhiEcUSxJsX+bMJxlxhkuU4ulhMeqlWEXi6dHGSqY2NR04Rk8NP6xOrVhGpSSpwrKvGqnBN1ZXcj9\/y7hTIOIMbQo5tRq1XiKLpUsTSryo1aeIt7s4yhKnGak73p1IzjGWqim25fEfjj9ijxv4CE3irwR4rHjvwzEv2htBk05o\/FtpbrudpIlsLi30zxALdB+8eytbTUEXGdLnUPLXp8E+L+T8RrDYTiPEf6tZ1iJcmHxClPFZNjqk\/dhGliKzVTA1JyStRxVZxlLWFVJwgfL8VeFmY5Iq+MyVf21l9NTlVoyXLmGHUdXzU6XKsTFLedKKm1y+5JxlOX6l\/s0\/t4+If2PP2T\/C\/ivwN4L0HUdL+I\/x6+IemN4e8QX2seRpNr4W8BfDc3MljfW7q8T3OoaiHmF2kqh22Ko2BF\/Qcx4W4geXZJiMv4uxmX5jk2ecQuWKhl+Er0c2hmGW8Ny\/2yhOKsqE6NGVJ0KkJT1b5uaR+dYPNY4DCTk8JDERxdZrklOcPZOnf+FZO93KUeWS0Wivypy+tvgv\/AMFZfhj4z8Wy+I\/jD4b1zRBeRwtt8Piy13T7WWM7tiq0un3ghBIKlknmypDZyK8rw7reJ3C\/EfEWP8QeNKPGWT5nOjVy\/D4DKI5PXyr2bqRnQVD6xVpVsPKHsuVuvKtzRqOc5QlBUNa2Oy\/HSw8qeHeFnSbc1KTqRm2rqVrqTalJ3SsvKVnzfPv7aGlfs0fH\/wATXvxC+C2t20kOu2M15qNstnc6Ve6J4lSHdcLeaXcxRSLZ6uF+2wNCGj+2pfKkhUxov6tw1xdVwWfV5ZGq7wTnQxVbL61L2coU6lVU8XUoO7ioOrUhJezvFc\/LzQvFHl8Q5XgcxpRxHuwrpSiq8NFKpGHPT57uEryUWm2425G0nzKUvwD8X6PB4I8aTR3wElhqTyuVt2KtHdQybZ2tnPys4dkk2FopBu3dmRv3HNaeLr+zxGXtUpYiCrQpVY3VpK9SldOKuqnM3F+44OKST5HL80jGFWmpVZJzjKVOo463cb8srvnfLJLV6u6d01dw\/XT\/AIJf\/tXal+zp8YJJbW6k8QfDn4oadF4a8UaW4UXtnq9sssvhzW4Qdv8Ap9ndzHT7rP8Ax8abd3KNvlS3dPl8o4ilknEOFni8KqFXMHDLMfTcrYeUq0uTBYmDlpGNPESjCo7QahUkuZqMVD6TI+enOdOE\/a0KkbxunzxnH3mua81e1o+7H3k17stof0ifE79i79nj4k\/Dvxl8ZfHvgWx1b4oa\/wCCLnXm8X6hd3k99otza6TNdaVpunJ9p+yWllp0m2KS3hgxLI08knmvIxb9H4m8MOHaHBXEXFWY874n+p4vGrGPEy9lhsXRjJUMJSpfw\/ZQjBJxt7zcpvduX1PJSk0o01Zxi3N3c3ZX5rrbV9FZdea1j+Ovx74r8ZWGvaimnXUkFjZTtGLe1jSJML1GFQ5UDP3SnbO7Aav88MdxNnOMlOk8VOn9nlp09HZLbW+99XJ+SUm1LyI1ZqXNdc6lpF6vS+t9Omytr1ty2PsX9lv4qTana29tdmTzre5QzSOPmA3YlBL7SVYckbOAP4yW3f0x9FTiXF0OI8x4azB1KtHMsPUdq65n+8VmvetZN2lF9LWu73MMfLmpQrRb5oPV7XSbVuidrSj8UL811ezgZv7SXxj1rWfGGpfD+K7Mfhq900WM1jFHEY5rm784zTSzFVkLFTHGAG2xoAAqsWd\/B46yfNco8Qs+wOX5hWwlCOYRrQw\/PalGFampVOWNlrOTlzPVtaKcUnzelQrTzDL6VNSVpxcJu6vpsm0ku6uuX7LdrtQ8Y\/Zs+NNzpHxp\/Z3\/AGXfE4Y6JZ\/GD+29LuzbBkV7TT7u60y1SbbuyLiWNFKBmZYmHyhn3fMcX5HiMPw1xNnOS0HVzeVLCrno61Kn1irSo4ltRXM3JNXXS+0bcsvd4QpYfEZngcDi6ijPCSxDTa5YrlozlT9676t\/FJJuNkpxTR9r\/tZfEz4i2\/7WI0PwsZ7a28FWsmu3mtalMW\/tS1kjnjjtrMrIpFmLiIqQSgQoQFClXb5DIPDriHijLsxr8WZhOlhsVgcHQweUtylUw+JUbzr1atSTlOFOn7lKEVTs5SbXuuM\/RpZlUyDiWvjMLyYulSVSE4yvyVI1HdLRSaadpaS22bTU4\/JX\/BLj43aF8FtH\/a9+L\/iGHSLvxHq3jWTX9IkuJonkv\/Et7quo3A0u1dFlk2S3Tw7UUPJGksu8DO1f3vFcPZjgsfwGsh5ZVMmwOCyqhhK2iq04PC0YuMVf3vZQlHmg7cqafNdc5iMbhKdHMKmIspZhU+tylG14VsVzzdOLV5OMHJJaws\/\/ACb67vvDmk+IbW9u9Z1m1sIPFl3e+I9bQyJFcyan4gu7jV9TlunVnkkke5upGy33BgYbGxP6Z4R4F4jy2rRzV4VTxVFuVKnKlUqPmcnKUvtxc5VJSdrNXbtJWtH5x43D08PKikm2rKSs1\/n8rx6vW65fzu+OPhbwn8O\/EUUnh3WxrNljzQ+9JTG2\/Plh1QHZz8gPzcYJGa\/pfIc7zXMMG6WcZbPBYinJQTVOUFUS05uSV7NNLW9n1vqz5elRjTrvkmpRvJpJxk1re1+aLsr2W6XfWx+mP\/BPr4o+KNc\/tX4KaLqtra6V8XNE1DQJIdTdpLG3vrnTp1E3kkhZHntvNhaHcPPPlxkAsHr5PxF4bwud5LiZzTp1qdKpRdSMVJyoVU6coyve6jKakuZS6r3eY+vy2tUk5YVyjKnXjK3NooyUbpq81fmirtpL4E2o2aP\/1\/n7xb8LfHfgbSINT1fSH1jR9LvLa7ur20Rru2nsIJQNRjiuFyYpJbF51TeFRm2Deuwbv88vA7jbKPFvwyznh7B5vGOeZfKtLA4TFVYUsdhMVQ5sRgW8O6vNyqUaak4SlzU5TTi03CXZKFOXLUcI1qFSHLPlu04PSd9rNf4oq61u2nPym88Ow+BPiL4h1JYY73wX9kXXJr66gR4l04WwvYJScMpaSPYBkqCWBLLhRXk5\/mv9s8O5MqlV4fOnOGG+rU6koTlXVVUKsN78sXGXNqmvhcV8cfKo5fUo5hOjSp+1w9JTcZTinH2UPfhKotbJpxW1rqzTs+b0z9jb9nnSvj74x07WrW\/KGLxda6yrKoM155euQzARj5gysUy+Bz7g5Xj4l+kkvCytkWRZ3gXiKed4nDZRCcablCjVxXsqUFOycoNyqwjC9k3q+XlUY9mAeIqzq0o3fK5yalaKs+vV7detre6leP7J\/wDBWXwPq3jb9pf4MWeleGdQmh8O+B9UnjFnZPOLm7vbu22YjiDsJY4bN3kBDBU5OFDNX9L5RicPmOd42tUccJh8NgaNWHt5KmpVpqpvzSvzRSSaV7N3andKPr4an7GthHq5ctSSl0VrW195PXV39FdtM+KrfTNau9Pi0O5vJTo9k7\/ZbBk8lluC2+XzsfNJ5DFolDkYfJIbAC\/kvAfDH+sOfZhxHnFL6xP+0q9OEpvmp4irTqOPNZc0XCkopKKUovS9re772GwtbGTnWxk3LDUmpRptcrnUa2nblvGP+LWWtnZ83A6\/4Be5lEUXLM7F3YcRRr80kshJGEjQFmJKBRzxiv6oqSwmRZTWzGrQnWhQpqFDCYampYnHYqpanh8FhKSvKpiMTWlGlTSj1c3eEZo5Mwxiown7OLsrqFOG7eyjGN5K8m7Rdo2u3dbHIanZwW0mn21kzTz6KqrpTxpiytLoSNJJflXAa+vzI7NCzBbWCRvOjSR0jevyDJvC3Nc94hr8UceUaFGOOxE8VU4ep1PrE5U+XkwmDxNanKNKjhcNTVOE6FN1p1uTlquMZVIS+KoZVWxONnmmYzj7VyTp4eL54wa+Dnn7ynyRtpywj51LWjNZaXdMXvLqeRnbM09zNJuJJ+ZnlkkJP3d3VhjovU1\/QOHeCyrCctKnhsBgcHRvyw9lhsPh6FOF9oqNOnGKWt5pf4ruMvXlSVteXft\/m7bfJa\/FtH5R\/bV1XTL74S2XhkwTTXGqeMfDkf2yZEhY2sck5njs4WzdOk28KZWVFJACrINpr+feI\/En\/WbPaeT4GWHr5dhalSrHFQpXnOpQhU5ZQqS95wT9740p6b3fN5ONhNQTbioSnCKjbX3ppX2umtX1utLwuuf7L+HP\/BJn4raJ8fP2QPht8YbHwH4R079pXWNW02O98RvqmvarolzbfB7WPizotpb6bo+pWEE1\/dW+g3ml3H2wiO1v4XtpcKhd\/wA7xnhhnHEub4zA5jnObZTmmaVsI8NXWLw1ShXoY6nTq0sTVjRy9YihS9nN4dUadeSjPVVVZRKpYWjRVOr9WoVoq0YLEOt+7alL3bRrQjNuME9I3XNdp3iz0L\/gpT+x1bfsP\/FDwv4VsfifpPiC48b+CY\/Fa6ZY6W\/h7+zX0+7OiTRQaa9\/qCvZ3bWyTxv57ymZrgGFUKGvnM64Jh4dY6lwxjs0o4\/E4fCUK9KvGEqUa1PFOrKGHjCbblUocjWklKUJKVt5w3xWDxtelWzOlh6jwyqqGInRpOVOhU5edXceZwjJJtKSsmrXablD8ofGHifxD4tFv4B0TVJtNi1m0hm8Y6rb70m0vRJiYpbOF\/MCRX2sDMEKqS\/k+bKwWFXaoy7DUMNTrZpjY3oUZe0wmHas69Rq8dNW7zV0p86cYynJKDjI8h1ZyapUpPa1Sovsd4pWacmnbXbWKT1Oy+Fukm++M\/gLw18NfDF3rOl\/CuTSE1d9LtymjaLetM11HbX2ryBoJ79o5IpruLzGuA8rPNhjsb4TifD4rNKOOzPGYj2dTNKHLQoOV68sLhJ1V+4oc1qOETajCtJxU37RRU5c0pfS5bUpYfDUoqlLkjjI8+IcGqKbjCUKbqO6nWklpST5lB80moyUI\/0U+LbadvD5s5pUZIlMAUcSJ5igsrnBRlO5jEGIJUp3Ar+f1WoYiMMVyJLE0vfsrxlam42aupQ2cXbmS1TUeZqX7vlXt6UsLHmblh69JxtpNcso1FH7SekutnbRK6aPGNJuXhtrdY7hVUBcxkBYyU3Any\/MkO4HAL4ztYEE42r\/ABzmuIr4XM8fRpuqqVDG16cKXNeKVKvJU0429neFnyt80t1s7H71XpQlNzi4xnJxlGEvc1cU5WfxNNu2t0918LlLQb4d6l8Xda+DHw58O6DojeH7P4g+Mda8RaV5RL3uoePLTw1DqOtTWwYRSRxQ+EbVZPIiikdp5JZ\/meRl\/sPwd8Tc54jyXLuDIYqpWzOjia0KVf3q2NlQxNDDKVPERmqkqlLC0cvisPXp88\/ZP2dWSnSi5fzF4scIfVMRSzzLsNChhJ4if9q4WlFKnGtWacMbT5UlGnWneFeMVBKrKM1bnbPtf40f8EsvgLqHhprXw9fXHwn+K1zYrdaDq+g738L6vdRxKBaa\/wCF5JWieC4l+WS80l7K+hLGQ\/asGJ\/2\/iLNsh4PwUsPxHjqlHMFT9thpVHDkxcLe9CVOXve0lNv34TaT6OKZ+Qxyt4ia+r6OXaWkZdtLWjp\/LK97O6acfx\/j8G\/En9nT4rQfDr4waV\/Z0GtOdHh1u0uHuvD+s2t1KkNnqml6gqxKfs999leSKZYbu1AaOeNN2a8\/hzPcBWxuBz\/ACnExxFChOLxtKPLz08HjIuFT21OLbUVDmrQesZVKHuzbjKEInhq0Pa5di1piI+zpzi\/dVWLvRlCTuoXqNU3qmoybaSlLm8W\/bI+HVhpzWk+mwFYdPv4ZXcbWkjku1WO9MoUbwUlbaxJbdtXav3jX9WZfjcRiMjdeq+erhK\/JaOkfYzXKpU5R933pKDWsE1f4rNy+Ir4aFDF1MPTj7k4KS5lZxqx1ldXWsU5J3vrqtYtHkXwwsvFmh258QeGLj\/SNOKTShH4lEa745dn8M8ZUGNgoJ243AjYv5rxNnWVYqpHC5gpQxEWpYbEWtUi07qFR\/aSa0lFXTs2pfDHqwFDG0HOthrOMHJzjo992tvLtbrzLngf2I\/Cr49X3iX\/AIJ4Xfj7xZrAl1Sf4ZatNcRvIq+XdrbTWMkIAxvH2tGCDgjI\/drgivocz4wxeO8NeI8bmeZzxFsLipUV8MZ80Y0qcuSN+aq27Tk225Xa5fgPrVUlHDxbVqns22tLxVuba92r6JO3ZKPM3H+Zvwz4dHjjxudOijEqX+ovv3jcpjWT5yQMdemMrnOfl\/h\/gapnUMsxtPMsRGVXDUMZSnOCXN7aMalvZqNr6JNPlltpFPc8inT9pelG3NNbN3S77q2ru99Ol0vd\/STwD8A\/CfgjVrJriCJLWa1El2ULxuWdd8Ycr0KSEbjyzLkEc7F\/pbhfxo4bjxLkXEWTZXPDVMDhPq2MxH1X2fMrqXLOK\/iOG0ZNX11tdRj20Mlk6VSlXfMm+aK5rvbv8V2m72e210lKPyh+0T8KNMn13UvFPhuSR7c61YJpzIJGMzSL5NzbW+7Mrr5uPLI6yKQrsgDv9Vx9x\/knFdelmOGp+zz3G5rSUeXSU8G6LjVlUilHl+GNRc0dG7NR5ry7MryipR5+WVqGlk3pztq6hfVK762XaSteOD8V\/wBl3xl8LvEvwK+OumaaujeKfDd1N4ygtbo\/vdXm0\/T5Z5dIZMNJFeTWAlCuqs0ckseUG1w29GjWyvFZXluIrJ4fiOrhsK8RfmVCpVrUvfS0bjSXLKfO1fzvcnNKf1DG0MbhocypaVoxvFyu+SyXLrLlu\/tbq21zd\/aM0bxx8Rv+Eh+Nz6pJZ6z4k0ZXXTLBmFtpHh+K0aSx0y3C7DJJErvcXVy3zXF1PcTED5Ur9p8aPCXNOEOGMpz\/ACKvXx1WlWoVs7jRT5auGqKKc6VNc3LHDp3SjrKCk5Xm7nHgsxeLr4iE+Wm583I5bprRRb92Tvezu5a21S+H8vP2bh8O9I\/Yy8f+OWuLu7+Luj\/H+30XRtDiu2MV9oevxXN9q2p3Fkdyyx2Gk6TrCrdCJzBdzwsHVjsb5z+01lOfZBm9RyqfUo4OvQw7S5aipwqyq+\/7zvGpGik0rXmkrq8Ylahz4PD8retSr7S38sfeu9ZWsrKOnSy5Le798fCn44eD\/iZ4clG+Oz8QQRlbi0kba7FF5GDyG4+XYF3AZGCCG\/ungDxCybjXCU1h506OOhFKrhXyRfMnd2V0+b5WcdYxfMz57E0ZUbtOTi9N7+qbtFve9\/d\/vXtzS+If2kfEsNlqJKycCQqAuQpBbocHkg\/7IIxw5BIr9SlRjOLuuzUtObRd7O131tJ2XnHk4qU2qis2nvpqrdEvelpbW\/Ml0tK0eX1v9nn4y3PhXRLrU9Jhnk8R2FnBe+HLyHUpdOl0\/ULOWKfzlljX53khVoU3MArsGOcE18nm+GrulJ4b2EowjN4jD4iN6WKp8j\/cuouZwbdnzqnpZ3veXL9JTxMoRjUTmpxcZQ5HyuLS0tte62Til0bV3z\/\/0PV\/AHxV17xH4fPhe80izu9DvYxBeB40m+0WjgxzgqY8eYdxK7drDoF4xX\/NTUweK4D4hp8VcN5\/mGUZ1hKiq0pYavUowlUp3dOjiaSk6eIwzTlGdKrGdO0uZWkoyjzZdm+Iq0Y4alRi4Ozk3G\/ufbcbOTjJXveNnZ9OZxj4X8ZPAQfw78QvBUvh77J4Rg8CvZWXi13SFtRhW7im0rRo0G+ZdQtLaOeG83eWgtreJlV0ucV\/XXhjxxT47w\/DufyzCjX4uo5niaudcPYenVawdVyqurmicpTg8Di3KlVw3Lz2rTq0XKE8NOR+h4utktHh6nWw9TmzOrOjgsTQnGKq0qNL97UxC5bXjUioU43cJX573ScZeRfsP+NNQ+HE\/gy60K4GmPp166QvKf3UrW8jNF5uT8+6SNX5O1icgtlSnnfSLy2WPWLx9ehHEYvLcXluZ4BRpOTo4rD1qNanLlWsopRcZ004r3bKSdnH4SOJVPHznSfuSqcrtaN4tfDJKMWrae8r26N3vL9GbD9qT4\/\/ABy+Lvij4i+JT4S\/s7wqk3hnRdL+zTmOa0Nrsvp5pxMJBPP52Aw2qp+VF4Z3\/s7w0z\/Js84by7E8V4zEYXPs7jSjyYd01GPLC3K6U6abVR887e7Lk1bump+t9dtXouMFCNGnG0byabb1ld8tm7LTpa95KylxETC5u2l3KhjnnkliV2Kq8szyuFkYOxQFyF3ljgYJBO5f6QyXhDL8sw2Fw+WU\/Z4OF6sLxTc5VJc8qkndPmnJtvo9koWTl9BDNLUXG61u99rrXtdt6Ozv2iua8ON8Z69b29rPbQlUaZybl1I3FFI8uAMCx8vIMsiHAd9nXYBX2OFyqUsxli8TCPscBSp0srpzkpU41atPmxuPcbtRxErxwVCUvfpUaVdw5Y4qan8\/iantJq+i3W+rvazX+FW3aXN9u3KfO154gg\/tAqsi\/e5wy\/U5xn+QP6mjEK87xsrPe+y132d+uvNfmt7tve0pq8dHum72ur6abpWen8tujdrnnPxm+Odr8MvCv2s28txLLE7LKCVgjk6Ro+3lguNzY2jPVmwFT+WPF\/ibNM04khwZgXUp4HBUcNWxlCFT2ccZicTD28Z139qjQpqMaVJ6Oq5TfNaEo+VjcWqEuRfFFLmvpv0jrK91Z+W7cd5fkTq37Qvin4qeOodauLxJf+Ee1bRNT0qxvIzPFcXVrq1vLbGOzMf2eW0hmijjuIpeZxKqFWRpBXi5Rw5\/YdXBVqq5sRipVYycEvZUIqHO41Lybc6i1u07qDUrNR5fBniHiZrmqJTjOCULtvTVvsraL4r+8rxlabj+lUX7fv7c3xN+Lngb9rz45fH3WYfiv8GdM1jV\/hjonhPQPDGg+HPAOmR6Bquk6nND4PstLl0m+utQ0DVdU03UH1e21C5exvZLee5bCJFvjuKM7znPnPhyria2Ow0KNKebL2bqUaWF5vYwoctGGFhQoqVTlqezU6inJSlVivd66dWvU5KleXLGMn7KhCPLFOzSc1bmlKas7SuorVNXLes\/HTSP2xfBPxl\/a2+K\/wAUPiZ8QtY+FPh\/wn4PtNZ8VTQ6Tqvjv4v+PfFFpN4d+HWgWOqX+rW83hjwx4Lg8V+JNTfwbpOkw6bYWunteWmni+SSf4jjPKuI8TmuUUeJnhMZi8wqpyxFPFOria+DpSdXEVsxrP2dSLw+Ho1ofuY8sqlShRpVKXNBy+9yHjKWR5Rm+DwdONfGY9whhqlSnH2FGVWm6TaotP2k6cpU5wupQajLnjJLlPC\/+ER8fP4H8Ov4K8P+JbvVPHvii90C8+IX9g6rJ4QsL+SGKa7vb\/xE1qNKtruwsFuP7L0Nrtbow28XkxyRpNJXzVbOa1apjs0zLDVcLw7krnClSkpKpjqtOEFTwWElFRhPFYqq4xxEoOrHBUIxi2uaM56YDg7B1cVRy3L8X\/bGZ4ynhIU6lJf7FhsVi4TrZhjMbVjacMNldKOlGahPE4iUYcyTnCP6Z\/CKXwL8DfAWl+D\/AAp5l22mRwXnijXZWhlmv9fvZ431DVdYvmkL3d5d3HLMonaKPZEoCom\/82lmuOzatmecZhUp4KpjsM8Bl+HqqUaVGNTmtRoU6anKUaEIxpQUYtScdeW8HP6rjmnkuAy\/IuFMjlSxNLJsVLG5ni6UoSlWxPLGM6leonZ1q0nKU1GTVKMYU9eXkP1E8c6pHHZ3KxqJWkdUCfZ3WM5YBWV0GXYL8u5BujXYXA3pX4tVnPCYON60aUITl1hzfabjGLu4q99WqfVXaUuX7jDzpTlTn7NS5+Rae0XvKMdW42T7LWelm2nJHz7psNzewy\/aIIYFE0q2slnnY0ay8M7Zffzne4ZG3kjyAFWv5Z4kqYehnWYOhOdTmxVaVWFV6xqSnJzjBNQtZ6KNpR5Yr967uR+01ZKdlODpzdKkozhdwdqcJKUmnq1FLmk43XZ2lCO1YarrXhe9tNSsr65t72yuobqy1G0klt721nikEkM0E8HzxvE6rIHV16c42hU5MqzPF5dmGFzTJMXicqzPBVYYjC4rC1pUqtKtSkpQlGacLe8o+64SjK3vR5X73z+OpXo1sNj6dPF4LERlSkqkedShNfDrGTcZXd1fRLreMo5F3\/wUi+MuhfGa08I\/FQwePPDWkXdpc6N4mMcNr4t0nRNVhglZbhrdLa11630y4aa1mk8lLry7fzWMkxct\/eHHuQYv6QHgRlOfRxdDL+N54CpRo5qqMad8wy7FVcLjMLKvBt0Y45Yf6xSp16c1CdaDjKKfPH+N84r1OFuLMfltKMq+AoYhVMPGXPzRw1emqsYv3kp+xc\/ZN+5J8l5ptyjL9MvjB8DvB37S3w007UvE+qTRSacP7d0PUtEmt2ubaS6tgZFn+0pcRXNvPF5byxME2Sokkbq8Yd\/478MOEOPPBbOqmfYvi9Z1hc1wkcpxuT5zVxcqE8OqyqpwnWxuIlCvRmr0ZRgrKVWLjNVW4+\/jVTzGhGVSjyTpr20J01FLbd+5C10lvezSa57NS\/H39qrRbO98H6oI2trq9tNPeKe+wiSX0+lsY5bkRjeEaea1lZ180jdkgtnLf65eHmZSzfg2nivaJ\/WcrU5U43tGtg4qFSld3d7U1O797lldr3Yqf5bnLpTx1LEU4KKnNyk4639re9rX+GfNHWT+H7WkofLPwo1Kz07Tkjv7Nof7QjSCO8hUvFcxSAKUkjKgBxJghWBYY3Icrtr8D44q4h4ipWwtf2ioycp0qjSqU9229VePLdvlSjdXbTuj38k9lCPs6lKUXVSipKMpKaemq2vdX1Tatp15fuHxb+05qNn8Ez+z34PsL6OPToo9Fv7x9kFq1sJzd6j9nXcv2mS6uZZ1kkKrlMuoJClfF4jx+eR4Py\/Apwp4PE4fDrFwjKUq0nVftat6bsoNtyfvSUF8mpcONxieNxtGjCo4UKzoKT0jKFNez5lJJ6ScelOOndpGH+zd4E13Ub3+3IFa1e2y4d0+ZmHzMd7DaMlSM4OeCQuU3ej4Y+BeeeIdGWOdDly9tKDqK7a253C1o3Ttq797p2OTD14+0cpPkkvi0tq4\/EtduZ2Sa13Uo3hCX15q1x480m7k1PUL8XNikTBrYoAcDmMK\/If7pHPlgDJ4wQ37fmP0b8y4cyavUw2FoU6dCLqTm+bnmkveWsZb77Wju3K8ox9mnmsKLvzTqK1le299u923K7lZap81k4S+q\/2dfgloGv8Ag3xF8bPi1cwQ+F\/BM11r1jpzIk0CnTIjdG6eMLm4kjlnEFjaLvElz5bAb9oX8y4P4Vy3G0M74izCq40OHlWhCMI8znLDL32km05zm406Cg5c83d6rmPpZqvGhhU6fvYhRqKC2XN8HwrpzW305b6293yL9seS\/wDHureBPiPZnVtI8M+D9B1WePRb63eCwsbO\/j\/e3M1scLc6rPa28Ru5XLLbQgWsDJtYy+LjOP6mOzCjhJZNmNLGUfZTwtSpRl7PC0qdb3KMHdxqVaskqlerFKzjGCUoRUTjzXDUvZU6fPyVoNyqVJ6RXuq6cXyp2el76a\/3XL84vCPj\/wAV6n8HrzWdVt4bzw7ceH9dW2vyfLieO1S9t4XMfSEvHHG4jB+XcF42hm\/vfhHxPz7HZKsu4nyX6xlcMDQpxxVWzg2sPCCpvnV+Zyun8KvvzaKl8nXy9OP1ilVUatRc0ktNZfE0tEtddnddNuT4A\/4JyfDK08aeHPE+sX9sl1p41jWbEK4yiT3JaTzcH5Gbyw0YO1W2uxGQzhfN4K4AqcZ5zhsTiYL+ysHeNSEk7881GpZOMVG0YqKkntaLVrpQ7liYYTLKqk068nOEIuzv0surbaT0ave2iSkWtc+F+u\/CP4ma0NOjlt9PE8l5azgssZtGl3+XuHB8o5QDn5RgYz835Pm+OzPwn8YXgMFKusMsdDE4SjGTjHE4Cu3KNNc1RJ+yqKdPmbdoqKfJe5wYelLFYRyqJSmk1Jv3rONlfe+qkr6LTVxVznfF9toXxK1P7Kjm1u1mVbmy1AC2kDDlZraR8Q3EMvVdjFwvEinBVf7+4c8SOH+KMFh8RhMdTw2IqQiq2BxlWlSxNGt7sZUrOry1Up2UXTn72+rlCEPHhRjCpOHI1OnJ3i9Xq3yu0lFcstNk1rZuNmp8dDpfirxFr118LPhYUspbFUh8Z+OXjMuneHIJMf8AEvs9u5LvV5FyTCrbYQcyYxsrm4hzfNMbDF5Xw9D2mO9lJV8XL3qOD54tqKjqqmIne0IKVoq8p+7Zy76d5e7pCMbycu7\/AOfaskk7t396SsvcTd1D\/9HxDQPid4u+FztoMskT2DSo0d9NbrJLHg8J5mcgAHAbcyngFR8wX\/CvjrwtyvH13mmHp1p0JxajSVSVqcpL4KqtZ635JOMdHbWa55eNKOKyipL2CUaUnFTT9+ULPeEtbxeru4S120Vj2bXItU+NHhKPRfDutNqPirxJcwQWEDSFIFuJ18sRzEnCKwbDbwcYyFJI3cPgHjVwF4t5TRxOWKOUY6nisnxVNv36v1iLqYadNPkjKrHE0qMYybsoTqLmhdwPUoYqNSUHVqurOpy80Uoqz1s2rpJa32ltZxk2+X4v0TRPGPw78Jatoes2H2LxN4I1u\/sL+3ZxuWS2mcq+\/ILBk2sjAHKMjELllr+r+LcBl2a8aQtaWFxVSlVhTcU4tK0uVxtLaSt0TttKzUISoxxFSjVTVSNW7a952krrROK2e7cbXvdt80fcvgHrvi7VLC\/\/ALM1B7S51RWkvIlld4ZpJBzlEG55XJAMg2hl4OAVZfo+F+HcLmniDhZ4qMo5XkKp8ip81Je1hHlWkKii+WDk+V8lr3jJXbOTMMwjhqivUcYaWV0rwtpok7cyjs111teJ9afBqHSrfxPLZ\/FC+S0tYj5ggkuWhhuSXPmtLKDETsXAEIODnHPzbP6L8YPGvJ\/DrhRY7J37bE0qXLy0oKrWgoQvFU4pS5nJ9VBS91JKTb5OrB5lHEuChPlTteUrcsbuz1tLo2ryjs9eazcfvKbw78DfFGltaaXp9gLZk8v7THbwRQE46+Zgs5PBB5J6lm6V\/k\/xL9PDxdnmdWWQ8N5niqca01atXrRqcnM7TjRwtPFOKmrcsaioTSf2JJwj77w2GnHmeJeiXvRjeN+qTc6asndN201V53gpfCviH9kzSvF\/xf8ADvg3wb4n0vR5PED6leOdQu0hso7XSrKbULiONvldriaKFo4YwFYliVyVav6s8MfpdcX5h4bZ9xhxnwnjsLXyfD02qUaVZ15VK9eGHpVbTpUnyRlUjOXPBy93ziThOepi\/qVOtCrfmlGpLRL3b2k3KSdlzLRyvo7q8YnXftlfsSaP8O\/gP4Z1iXw2njHxxDAG1nwr9hN\/Y6OmpuU0sajCnDThFjlMEnCPcEXJV4JI1\/m6P0ocvzfxqzXJczzLDqrPJ1UxGMnKdL+zsfRftYZRXqyb+tZjTwtSNbHUqMFQyu9HBOtVxaxMMLy5xg44ejHFuPPUTlGfM+ZKMvgqOMVePM1JRu1fdXi4Rl\/Pr8cPDHh3wjpNlYad4Z0nRtZtdU0eXVJ9N063sTHPZ31t9ot3eKFdxWabbIqSbA0eSDtTd\/YfB2NjndbDZ3RzCdbBclCNGClOVGtSx+FquNePNrFWgnGXKr2dmrs+ftGNOlJKPNUnaFo8qbVr+8lJbdFGN7aSleJ0nwb+GXxA8aeGv2sfi1A\/hbQPhH8OfhTdeGNd8c+MtQvLOGHxZr1lLZ6L4Q8I21vBdSa34p1+6vI1ayiSJYYXinuruGPDV+pUs\/yzhVTy7J8qwtfE5nTrKMPbKjPC4Nv6tLF88lOVWtXmpwoUW71ZQladGCmzvwFKTo18RWkuShTm+eWvvvmUYJJL3mopKzdtE73bj+co11PDL2PgfQFJ0fTbK7bxAJ3PlFL6zeC5jnx8sWp3hkS6vZ4laa3KWmmREx2siMq+XvH0quaYudsfXqUfqM6cW50pUK9OtCEE7J0YOCXLJcklKdSdpTR5UKnsrScVKTVo9G4u90lpyu0r3Tjy3TXM3Jx9Zi\/bo\/aC0n4OeHf2dPB\/jG40v4O+DtbuvE2geErmL7fb2nirULJdP1fxLAbtnKX+qwInnrIJYoX86a2ihnu7x54lwRgcbHEVM6xGMzKOLxWNxlXAyruGWUKuN+qqr9XwsFy05xpYPDUXWpOk6lKlarz2ly+3guKM1y3BYrA4N0sNRxcKdPEVYU08Xy03KSpwxMnGrGm5VXJx5mm\/evK1j6I+Ffx58VfGfRbXwnqWuyaL4q00Ryra2wt0svEsULriQE7Z5bi2K5a0kkZ4wxkiMiKQn5pxFwTlmSy58PhqVTB805YepKP7zCVJ3Ti1rBOV24VE3dJcqXLKM8KWPq117F1HGUlC9tI1FF7aNNrmV5KTirvWbs5S\/qm8Yu8Gn6W8kU8pNpbiR4IyT5nlQ7sfMwXLK3zN1CqPmKq6\/wAC8QV4U8JjaUq1GlKFerUTxE4pRXtKjk5bSbilZxUXH3mvcTbl\/SuVTpylhE+f3oUoycPiuow15W46vTRtaq6fQ8y0nUrWW6u9HkX7O9pPLCkZkcERK7\/KFxlTGSUGPu5xzguv8s5vRqSnPM6bVaGLqTruaho5VJc6k72dpxafvQi3u7fa\/cFjqFWtVwdVJTw9qUZqVrxjBRs01HVWTvf3XprfmlavNGupVmkjc8GNPnbbH5WeRHvJGWRsnduxtcA8bl4qGOpRcIyhfWT91e9zdHK13pJW0fa6V0fPZhg8bes6c3K+iUn7jpJa8t1y\/Dq5ucUldLl91n5cftIzI\/xZn09JQv8AY1hoySXcAdJIjOlxdSi3mgdiPMgvI2kDxurSqW\/dqwCf6UfR2r1cP4X4OWlalmWIzapLB4i7jCVPG1cPTqtSjZtSw7T5L3hJJyTj738e+I9GVTijF0pShz0KWFjNrW\/7r2l042dnGpre3NLX3U0j7A+Hv7SHjaHwHo\/hHT\/iJeXltFZxWUkblFciFPKQyvGFc4jCoS2RuU4+cg1GN8F8t4rz3EZjisPH2mHxDxOFwtLFVJ0KMp2vKFB3i\/eTV5Rbgl0tGR4VbP6mDw1LDVJTlCUPZzq2te3SVTS0rL4Wm38Vn7\/JkeOdUkvvhZrdxre671GC41qOC52b0ltbm1+0h42jyF8mRpw5ZV++vILK7\/vHAGCzDhqhicixMI0KEHUrUf3l+alicP7K6U3JpOeHk3Fe7rJ8nKly8Tw2GxWEw9em1NKvUpNvTkcJKrrbmt\/vGnrZX5VKPhn7MepQa\/4t8OeG9RgkOlxn+0dZN2jeVFptjELh3jdmIH2mZYrVCjuN1xyDgGvy7i7JMPiM8pe1rUo4WeJ5q8qNSPPOhTbniqUoqUXFygowbdpJyTg9bHvZRVVFNcjlo5K\/vRi1pHXkkr8zWl9b25nZyj9DeLPEngCT4havoetyRaKt20Asrr5YEKs8ql4pRnypQDvWRguTnKtgKvL7Clm2LUIxTwEasYKMbNUqcfdWl0nGK\/u368qVuTjqwoQxVVVIKDkm4t\/alJ3fvLq3v7qbfdSaj7P4G1jVfhlo0lxpXiGz1rQ3ZXd5JYzL5BOf3hRokDBRnKsoYjIU8mv7g8L1R4B4djm2W5jh8TlkIe2xeBnKlOpTUVzT9lUTTcUr8sJKM10cm3M8OrSVavKkoOEpP3ai5lze9ZXXwrbvJavvc+8v2Z18G\/H74peH\/DF9Ibzw\/BoT+IdaiWdmgmZbiCG1tbh0MZUTu8rCIn94ICOdrM2nG3jLguNKFLh3J3KhSx1442vy8ns6Dj71OEmoSVWonyrlU+VNtT097fKcsksbKrioOVHDaqMrtTqc8Urp1OVxjH3uV80X0a3j+rvxI034MfDH4NeLYfEGraV4K8GSyvaLcancw6Xp7SQ3ET5BmYfu18hPljV5J32iKOR5FWvzTCcJZFkXDWYYShCVN51i5YfB0rSlVrynU96dOnac5e6vae6pNvl928oTn+mU8ZNyo15Ri1Rp88m7KMI8nLra6STa6aW0uon4E\/Gf9sLQPHV14y0fRLqObwZDZ3fh7w3dz2b2cd1pcMMkcd8Ip5Gnka8kdpEknEUjRNHmNNqqv6bk3g7wplOW0c84sxOAy7mw6cVjJUlUpxfM6VOMdf3jThKdpzlKctb2UJfFZzmyxM5ww1N1eja5rOb135dlq9H5e5aNSX4Q3PxU+Oui\/Cnxf8KpLi1tPBdpda3cWeoybheyaRJLLcC3g8sA7ZUdoyzl8oBgEYLfI47jCh\/ZFfhfL6NGvg6mM5IY6GlSVClWboxg2oqCqRVNzqJbXStf3uCFLmoUHL2kK9KKjJbRnFrt3ikra6vtf3ND9jT9qfRPgT8ANf0h9Iu9Q8Satrd9qWjzRoJLUyFPJjhmVT5hYMNyqoLSFtq4Lbl\/S+CfEfB8HZPjcop4Gtic6xdaNfL0o3w1Sc4+xUa01zTjyOLnaCTqJ2VnKMo8+LwaqfVHz8sXCc5t7t32s023JX1u0nouayPpPwDrXxt\/aB8DeNfiR8QdKsPDPhnSdOuxpiX2lSaZe6lbCMvczxyyyiWJbeJTJHJ8qhwA2FLiubiPw3zfxD9px5xFh6ODxmSYSvUwOFpU1S+s0kva1lKV6k1KMaadKcpcsZxT9k1KaN6GKoYOm8LB80a7jHmbd4SekXdcy0lZOK5bq+y1j4j8Mv2fPjt+05pXirVfgb4JHxP\/AOFYXel3PjTSNN8Y6D4c1W10jWEvrfTdY019cura11SFry3I+zq21pFSNivnK9fhuHmsJi1Gamp4V0cW66putRpujiaSiqvJUjKEZu0VUip+z5435rLmyxtLnozU4SXvSpSq01HmhOcJJLl92TvZuL5mr6O1nGXoXwY8F\/F79lr4gWzftN\/Du6+F\/wAJPFVprsmleG9W8S+FtQ8VXuv2ptZF1a5t9I1Ke4l81dsE4QR20KXG+S6dyiV+qZf4n5tkOOrUcLiamLq4nATrwwEaaeCw7qzh7PG1atSnKpCq5KUUqjlOam3FVIwbjOBouDWGr1JuMIc\/M1pBc+iclrdtu+k\/NRuuX\/\/S8i8DXnwm+NXw81OPUdfi8OfFDRll26PqE6x22tWZjLQT6c77FkdHHlTxKfMjYqx2qymv8jOIKPEWQZ9Sy9Za8y4ZzCiksXSp88sPVT5atOq42cZNN1Kd7KauoKTUlHKmozhOGKqc7S5YuSaTT6TT0i47a8+91azU\/K\/A\/jrxp8MddKaIsbapod9BqtgsoJSaXT5\/OihdRhnilaMJLsKbkZipOd1fK4zhWFPiDJc4w8ZzeEzLC1qMlo4yp1qVW1RaNpKPLL3neN1a75DghhZ0JJ0X7vNzSbV\/du210lfl89Pis\/cjKD4aeO3+Lms+ONX+LVrf\/wBp+KvEWr3GuxaTHLEunyZMFnbWcCzRyeQIY0Z3aVmcEZIw7N+x5tl+aUuJaWcUsRQpZbQwWGjhaN4c1Wq4qWIq1ZSS5LSlKEY315btK8eXojzVsdLFVNIuztrZJRUVeyno1y63Xd3TUYd94N0LV\/BOryP4M1GW50lHYR+YPMmijDfu0l+VgGQEAsWYr36sa++4c4oy3BZbnNTEUm8yxHPKE6cZcsnPm1jL3XdWSSUtNGpK95fO59kOMx+KpV8PVfsI\/Ekm37uqXLeKVm7a776XcT6L8NW1hf67p2rfEC\/kltjKsk8FtHJIywA\/vNsUSB5pCRjHyqCcDOCX\/Bc+w+a57LF4nFyxDSdVYOjWlKUE\/e9nzTqOEEk3e7jJpaO6ajD3Mty50KVKm1Ju3vN3V11WsXezts42b3lofTnx5+PnwCvPg9qPgr4U2HirRPHVrpTxaXeXGlR6bZfbQv7uZbkXhaRS2GJdM565IG74bwq4Yzrh3xCwmb8X4PLsVw1UxkJYu9SnjK08K38PsIUpNNK6UY3tpaTvBx+qrzwf1VUYQl7SKtZxdk7a+8r37aPR73SZ+Xn7IM\/xD8Z\/txfsz+DPih4mfRodT+KugX0up+MNa\/s7w0bDQhc+IZ45r9pY7T7HqMelHTjAsga6a7WyAd51Vf8AUjMct4K4j8MOLoeH9ThzCLG8PZlg6OMeFo06WV4uvhZ06ONzOlOnUq0o4GpKGLl7SCa9inGLceaXmUX7OpS\/d2cpRVop3lFSvJcy5dGtN4tPZPm5ofol+37+3KfhH4d174J6N4v0zxx8YfGWqXmseOfF2mh30\/RtHutRvm0mGzWcmbTLubT47N7DS541vLSznF1c+XLLh\/8AIX6JH0D4eJPiHmHiZxjUxlbwh4UzfMcq4RqVJ4vC43xMxmAxKo4viKc8Wo46WSZrifrGNxGZVKyxGPqz9lQnKEfbx68biZTo1MLVqRqSxM3WxM+VRfK5t06MNWqcaceWKjFSShotz8VPEHhzxZrnwNv\/AI4zXunat8OY\/GZ8A65psa2mqeINC8U2WlR+JILnUraaITxaP4qjvS9jfKJFjvdOkjdT9nr\/AEQ8SMNS4U8Q8NwrThhsP\/a2S4fMuGaGGwUMtyehlmUv+yVl0HTnLmx+UUKkfZ1EqNOpRxF3TjyKcfaymdOOBq16WCwNWNGH1ScK9WPtOatHndVe0jKPvJJcsY8y5N3aaOT+HPxM0Xx78P8A4dfA\/wAdDXvBHwH8E3Xi\/wCIXizTrZZLHXPiZ8Ydasr4abrOrvGk8kOieGA+m2Gn+eriGztb6RcT3m+36aXBebZjV4i4myv6tV+rUMLhaeKxNWCweBoUKcYVaNGcnyVsQ7VasktVKrCm+bnko\/GTnZPDTvSwtCrUrV\/+XUqs224q2toxVlBNz0vZRbiflRrSW1iLjw\/plw160dy8ms6uFd21G\/MhLFGO1\/IhbIGWy7gvIVY4r63AUZ1a0MVXgoQdG2HpSfKoUmkm7dJTSuno1G1kr2PIoRlUqe0m7O0pQTuly3l9t+6m1LrGWj0atFSzoNPWJllCfMuGuCTkEsOGHy5G8nDccvyMZTd6deblTnDZWtDkXRa8t203aMdGlDTR3sdM6alGUnFXsk3q7q\/S3vb9Y7v1R6R4VD2dzb6lZah\/Zl9ZSJdWt9aT+RNZzQfMs+4E\/cbBJBGRwVNfC53Uk6VTDvDTxFKpD2dSjUpqaqqTWzVnGSV3B8z11TvGxzRsm5R+wtHpzRkr+9b3tLq\/L85XtFH+k9+z34Ct7\/8AZ6+F2q+LtOthrXi3wd4R8U35uoAZUbV9B028RWdgCA6StOxdXOZSMBS5r\/mT+kz4g47NPGfiPBZZVx1DLOGqtfJMLSmq9CNevh61b69io0asabd8W54WnUgvZVYYWNWlOUZxkf2bwrTjDK8A3KPtK2HoVKlmpxU5xjL2cekppapNtqTcXyte9+TOpWtu\/jvxjcSrCNnizxBJZywP5cc1p\/at59nVQpjjQxx4Qn51Z8EBn3Ff6DwtaouHsipw5veybLY14zjzShWWDoe1k3Lnk1Ob5tUuVaaJuJ9RWrUXmGM9vanOOLrclSLcHUjzuyT1V4\/Ddp3+K0nKxparqVtF5LSSFWdBGbeV1Hz7CE8sgxrL5hJCkKApbMRbJC8mEwtWfNGMU1F8\/tIRfwuS5ue\/M4citdJrpzbM6MTmahD2M6nxfF7RpQlFxs1e9pJ6W96Ovva3cI\/Jmq+Avh98Rdf8XeJ9N0CXULjSjBF4i1Gxup5IB9jiFobyaBJGjSQJbpGk0YKhEiLZ5Df6F+D9TO8q4RyzCYipKjRwVCsngsThozrwlXxNWvKrzLlcKXtK75VKe1l7t7H8d5\/i8Lm3EecY+PLDDV8bNUqanrKFBRw8WpJxtzxpcySv8WtrWOA1H4BatpdhN8QPhxcP4t0CygkuvEVjZ+VJqWjWA3PcXMkUDE3Ntbwo0k8qxrNBs84xMiOyfreW5vmUqzzjB05Tnk1eNbFqldXoKVp+0pq8nTqU3OMpq8VFczUEpSPlMbRo11WwiUvZ1Fam5tN3+ym72lON4uOsdne95Rj9M\/Bn4Z+H\/jN8MPid4OXxauk+NIINLbwlp98plt9cTVra\/jvRFhDLA9vJZ2cb7D85voxhiDuy8XPFPNMlzDhrNeE+FcdxdgcZL6hmeHylxWYYeFfleFxWGhUqUaNaEKuLlTrU5yTjH98moU6nJ974XeHebcVZZn2DwkqH1rLpYXH2xGJo0UqNWUsPUdq3I5xtTjUcoq1OMJOfJeB4l4M+HPj74ea\/q\/hDw\/pdvP4mtGe11q4uvKKRWdtKz21haSz7GaJ1KXsrpzMJbUDcIVV\/Kwqp16Us2z\/B47LcZj3pluJjTWJwUJqLcK1OlVq0nVm7X5KkockU1OcZKMo4iymrw5meIyN1cLia+BdP6xXweIjXoSnUpwrQhSr04qNRU4VI89nLknJqS54vm3PBfwkvPid8Zruy8f8AgifV20PTsXml22qnSlZ7tPNtpormOWJgwKZ2SKuzOCpJQv7mAnkuVUqclh8RUpYipNqHtOSV1H7E+W103rurLRK\/LH5rEVVj6y9rFXpU1D3Ictvd5uZ+my0lrq7cvLH6G+FHxT+Ef7L99rUXxn\/Zm1D4peF11OaK3EniOyu30ix8zEcT2eoL5GoSIhHztLCxGBvfJLfp3DOfZTQw8qeIwbxGFxM1ehWxlSlTS35JKMXGTW3NOMNb3ulJGFRwoR5lSnJxdozivfS22buunSV9HePvRl9f+Af2oP2DbT4ieEPi\/wDs867\/AMKstdYvE0v4o\/CzW420mLTIbaCW5sdVt0kaS1tYLa6BS5Gn3ElndQvvQI6Oz547B5Ph+JMuzLK6GMwFGpKU8VgqrdfB8sUpRrYbExVTmipO06UrttaxhzJHfg8dSqU5c81Z3TclacbbqSSXNfaLcXrZaWufDn7f\/wC2PqP7Xvxe0vwp8OJL68+FngwtpXgnT4UeJfE+tTSr\/a3jK7hyGaKeUC20cTx\/ubGBbnas1wyp351xZOtmGGxFOM6dLAqNPA0bWlCkrOrVlG944jF1Fff3KKpQlyyUuap4utiJ+ww8pPnspWulLRX3teMPnZ3b1cWfP\/jHRtF+GXgewbxPcRWOpQ+ULpnUySXd3d\/ctLeLG5lhU7SUwNyk7jnDcOf8RZ1xXmOCqY+derhI0\/Y4SkpyeFw0aEdW9XF16j0bvzW0VkmRUVHDOFCEY86V6tTe8ut3a6Wrv3\/vXUofGfxm8QaEPhx4s1Ei6hlvNKurfTQ0awqZ7iPZEjZIcqxYDgM3YKxYbe7LcFU+s4WFFXjGanWcrv3F8XLbmaa+7X4naUCXQnXly0lzPkcm9bKKinZR3fk2k11a1jLpf2SP2Mbf4yfs6+D\/AB2viubw7rsOtapc2tslpFcW7z6dfJ5C3auD+7d02yJnO1jjb81f09wh4U4HPMJheJ5Zni8Pjud\/V6PLCphqbw0703OMveblK8almvd0VrXl5WPqvD1aFJ02+XD07pzaWspapL3fS\/Mra6e9GP278WvHWoeOfBk\/7MPhi0CfGTxFYpoPiTRNJRU\/sTwPBEj+KfHaqnliDSE0dLl4ZPlY3sq2yCWRSE\/YMz4hwcMtlk+Z4nDYDMsRUp5ZiKM5pR5K0P3uKpX1eFqYaNSpGeijO8G1yymeXPDyqSVSHNLDJyr1J7csKbcpU5O6tO9lpGWm0VdHjfwc\/aJ\/YY+Avxxj1bxN8NvFXxg+A4+DX\/CA6loHg24udF1DV\/GNpcpeaDrN5ZXGraDBrFkLvSLi0+33N0qQG+\/tG2hvFskWX+TOJ8z4V4j4yxdVZDCpkOU4N5SvquIhg3jquFqVObHRqqDpydN1aceVR\/eU7OznGLl61GhGeCrzxinNYmdOtQhe9nFRcOZLSPNaSum+XdrVuP4w\/tK6x4y+KHjfxv8AFnQY7fw7Y6lq2p3+ifDjQbvU7218GeHb29d7HQNDuL2Wa7voNJtpIop7icm5v5o5ryQAybE+Yy2ngsv9nhY4anClVqSqTxClKTlVbnKMak5XnyJ3pQlOT5KShF3SkzldGrRpxcG3BKVoRTbvJuTvom7NpdLxVtbXP\/\/T\/M\/4laN4X8LeJ9TtfB+vTzrpV3usL9nTfK8R4cywCOAMxGWVQRtZkOdxr\/NTKc+\/tvCQrVsHUoQqucPZ1o+zlOEdPaOnJuUU94azeyVl7xzXVS6krRb2trr2TvFc13\/M+qetj6M\/Y\/m8OfEv4reG\/CvxU8QW\/huxnlubyfxHcOqhYbGzmu4bCSV2Cp9tu4Le0WSQnCTFSASXq8bw\/SxCWMoyVGGEk6mJhKF78jThUgrXd5ON9Fb4m1GLR3YCjSnXp0K0re1fI25aKLVmvsq9n05b3+zF3Of+Nfxx0D4W+P8AxD4S8EeHrHS7QX14i6qIXbUNZha5dbe9cyYwJYQnzKXXoVYAhG9jhzhqjxDP21XGPGqK+Hm5aWGqcnM6Eaa5o\/u5LltzKTSk3e6jHuxeHhhZVqdJwSor4+e8qi73cWtUtbbbqGkVPxbxR+0h4k8IaFa6lpfiBY7+6PmtarH8rmQ5WIbQCXAPzMSvJ9gK\/SuEPC6XEWZ1KNRToYOjLkc4pJci3lzXUt0+Rq3\/AG7do8qGIk43heF3dtXd7PRW95XdpX7XSfNJxcffPhr+1L8L\/iJ8LtZuPET+JtH+Lug6fJcWjyXklzoeqXEK7gIXt9v2XzVGRDd26p1WO4Zxhfo+JPBnJ8oxOHwtSWM+rYupClSxlN+0jeT5bSpVNYtN2+2pPVOF+WDqY2MVD2vtVUd1GS2btZKLct1dfE9nvC6cvmjT\/wBrHStS1Bv+Ejs77TbkNJC10JBf2mS+Gc7SksYIJwwibHU5xheXOPo35thaLrZHmGEzKCgqkcPVj9UxMlJXUfec6TflzXey5dyHWm5a3bd7O+17X06WV+tr6JRuub6V8A\/EX4WeNFstO8V6foXjTRnvI54WmctdabMGUxT28sMq3VtLHIoPyhdhXO7IOz8A4xyXxP8AD6hmGK4cxOZ8KZzTwdaMZuhGeCxnuP8AdYmlVjPD4qm02mpxkmpaSipOMalXXK7xU7apPmTXmndNWvrab221XP8AOP7RPwBuNN17VPF\/w6vdQ8QaNrGoyXTaXcyz3msWz3Thji5mnluL9SzDMkjvKd2ZHbGa\/c\/o+fSgwef5TlnCniPSwORcS4LCQw39p4eNPCZJjp0INJewjFUsvryjTlL2elOo4y9lGEvcjwqr7ScYe\/J1J8seVXk3LSMLRi1q7RSU5KTtZ6TZxXwZ+HvxZ+KVxb\/s++FJZ7RvG+pyeOPFlrLfLFp0Gg+AraaO0vNUeCR41jk1C7ntYJC5K+c\/7s79y+940cc8H18dk2cTxVHGZXlFFYb69hqfta08Xm2JhGrhcJGcPaKtChhlKUNP3nIpppHsUcDmEK6wSp1sPWqJTbqu3JCj+9lWlFbKMoxjFqLXvWUnzNHvtt8BfA2u\/Diw0vS73xF4l+KEHivxJH8TfH73iw\/DpNF0+UaZoHgH4dWOw3WrQ2IhfVfEviy6kghuLye10DSLc2tleXD+Bxl4uZJUo4DKMDha+V8OYTD06s8sXsqeOzGvKnTnS+tRoy9rTcZ88qznU5p1JX9nJx55eZXp1cfVqNzqVlCtUjLEOb9lX9n7sZx2c4cybvpFKKS5k1M+AP2mf2f7n4WeJ9M1m1tgPDHi+FptPvI4tlrBqtl5cWqWD7MLE4fZdxo33opy67grBvA4T40w2f0sbQoUquHrZdKPs8NVqzrV\/qVVfuZxq1ZynV5Je0jKUnKS9yMnd2lzY2hLDuNR2fOlbltrJXurq0Y20fw6+9bl1c\/mOTSbobrnyG8onbuCN5bgDkZ6EFcemAe332+3o46k2sNKqnUvtzXkr7Pl92zveztq9PdsubmjN3V22nZSadr3\/urV6XirKz2XNflHwwLbebGsZkjlRgpByVLIAyEkKN6kkcjC5U5GWDGJozrWcZWamm0+qi3aV9NO0fk3GyhHb2PK1y3cHd8yV77b79Oa789Wrch\/ptfs6eO9I+If7Ef7LvjTTGRw\/wCzf8Jb\/UJ2LOPtWkfDvQob+KZR5gjuEubKaKXhnLKd2QoKf8z301M1ynMPpH8TZZgsleV5tl2d5nledV6VaosPmlevjoUsrxVPDSq1MPRxCwUYPE1KFKl7Z1KXtZz9jCFL+reA8PU\/srLJ1ajdGpSwdWhGzVkoqdVKd4tpTc1Dm6x0veTl+TE\/h+71S0Pia7s4rG8u7qXUJLJizyRxXsss6xxIAuSwnEjRknDuyEDJDfodPMqOErf2VRrzxFGjRhhY11yxhKdCEKcpyeqVnT5FKPK+RJpys5n2mIlhs2i8VGPscSqrqSp8zlzRc5W5VblWsr2vNq7UYy15\/lD9pL4rWXw48E6rrLokuo6iZNB8OwFisrapdJLE8kbpu8uPSY5ZdQnnUJiSG2s12y3iMv8ASn0evCzF+IvGGEwvtPYZTkvss5zmunCzo0p+0weEVKd5VJZjWoqg4tShHCrFV3JOlCMvzTj7iRZLlFenJxlicXCeEwdN\/HGbg4VailG3I8PGo6rs\/j9klbnkofJPwL\/aB8U\/DbTPG2n+F9N0\/WF8e+GJdJkbU8u2nSTp5bX1ud4DTRxOymNlb94EIdX2mv7my3JqeDzbMMtxzeFjyyw9acKcZupQ5+a8HtTnUWkZtPlXNaKskfzU5VEv3NPnvqk31+zpZ7tX1nG1rpOziWPhV4y+JPgm51tfD\/iC70R9a027tdb2PGIL6xk8wvbyQzb4skSSqjLhwjuA6hmDfc5jw\/gcDlOJzHKsfKFN0fZVqNNpSq05K0oz095WumpR7pSlzNHJh8bia2IjhKuFld3lKWyVr7PXW9rP3L+duc6zw58UNZ+HWiSeLNP0q\/n1rVhLp2majL9pttNs4JleOea4Nu8Ini2DAtFZEuAFVysSur\/iGb5fiM2lSwmExs8ty3BRVWssNOVLFV+Re7SozXvQi4uUJP7KcnJS5oqPvxzDG5clWw9bE0J1fdVSlWnRlZzjLlcqTjdJpSSvZvXljZc3nWl\/FrxTpniy58QN4j1W5v7iQy3ji7eOORwP3ai3j2RQwRKixwxIiqkaIigjFellOX4vMpUaNRz9nBRhCUuepJRilFWqVJuctleUpSva\/wAMrQ4o4zF1ak67qVatSc3Kc6knKdSVt5ym5OUnbdy0trdpuPu\/wt+OfjC98XXWraVq6aTqGpqYJrgRRySTxqAqySLO0g8zIJRyx+9jDZJT7L+xp4+VPK9J\/V5LkqRtGUZN6pNJLXVOyi09Pet7ulGpUUnJRSqTjra7UW1ZdU7dW\/fSv0SudN8W9Qki8O6hBq+vtrepa\/dszz3Lo8gmuHDSPhTtVURSqKoVUVVCg4G683yLMcnwtWioyvGk3TSU1urttvmfxOzd1rve65XOEqlXkm9d3KT19eWy5bv1+G99T4Y8S+F7fRNL\/tOF5btrWRbq8WBZJEaB+q3Hl5wJDII0EhX5sAb85r2OHljsu4fVHF1XUqSTnS9u7zhJr3VTlKSdpN3S5Wmu1mzoo0PZ0qtaceanvFRu3fdN7NpK3NeSava7u4S91+H\/AMRb\/wAD+HLO80bSNPPizUmS8stUntTJPo+mPGEjjl3Ft0k65KIAnlqAeUKhvCzvMsLh69LL6TdTHYtqNeop3lRnW92bg\/eXNFS91W3snNJI0wVWrSi3CmvaTu1KWtqd7q70u3t9nZJ20UpNevvFvxX1abxH421eTVjbiMJZmKG3sofs42QJDbQKkMccW+RgNpZ3dndmkO6vvsXl+CyXC5BlOCoSpUcNg3i1OpVqVa1WvinarXrTq80qlSXLa7cVGPuwSXw9EqbqSeIrJTnJ3kk1FX1UUrXTTj9lO62bd1z\/ACJ+0H4h0vXNX8OfCXw\/ptx4k8U6hItxNYaY5MlvK8hhsbUQoytKdweeUJu2BE343Ps+34Xy3E4lqpRhVdSp7tGnGPtJ1Vf3rJWbc2tFpaz+OLaPZyuWGo1ZVMTyqSw7qQjvFLm3l2Wl20rX25+Vcv0T8Pvjv8cv2afCXw3+FMHhPQNP0TVLG+kt5dStb2w1KznLzXFzdX0DpmdwdxyNnCJjCsCv7Xl\/ifmvCmCpZNjOHfqtSnRlLCrEc9GVduck604aWvJa29\/ZaX9pP5zMMNRx2Nq1vbpppWcGnGMVH3Umm7Np35pKS0dlK9j4+1r48\/FzxL8ePi58atJ8dano0vh7wTH8N5fEvhu0\/spNS0WSRptU0SO5WV51mu7m5fTg9vP9plUm3jwkjhvzXjnPczzmng8XjOSeMxVVqlTheiqVJ88Y07wkpKmvaS5ueTunrpzQM8LQpYWniptydN+7FSvLnkreqbso6ap215tzz69+MWrD4WeHPBU\/gvwn4eu\/Dmoard3Pi\/T9PdPF2vX+svPcfYNbvJ55lNroluBb2NnbxQRwtLKzbn2uv5Jk3BODy\/izOc5xGb5rjaWb4TCf8J9bF1HlOFhhlTS+q0I8sac61RudXkV5bzlO\/KduIrzWBwdD2NOn7JTTnHepJ6ycviT5dIxV2ly2XLdOPync+OvEP9nXDaJrr22qv4lt9iZWeVLCG2uJbtwkiHEM07QxMeABux0UV+pww2CjiY0sThovAwwFStFwjy82InUhTornjBNOnTU6lrSu5J6OMDzYzpwoe0nU5n7Rpwu\/gsnqr30vbTlfVOT5uT\/\/1Pyv13wJ4rmINj4c1W9twFd5Le3aZsf7sbPL83H8Dd8452\/5p5ZQxFGs1iqc6EIy5lpzJ\/Z5U3o3fW7lHo0leUIy6c73jG9ku6eitd6JtNbO1nZJ20lFmiane+EtRttZvdDvmfThFJdabLbTwXM9nBMkjwmKXymCuV2dPm345BxXt18VUq1VSw8owdRSozW94TXLdWaSkvj66R5dPelGae95uUbJtNu6TWqT2eqS1i3e9mk3KUPAPjZ4\/wDFnxF+ISfETVLaG0025hXStM02GJoZLG1tUzGLtNpU3MwCs7MQVJ2cbX3fp\/CuRZZk2DweX4Cq3i8VKFfGVJyTU6lb41BpStGmm0lbfV811CPp0sR7eUa1enel7P2HJFfFrpJ+85avTXp9pc75fIodB8YeOtRdldobC1by4DcswC88sqHO7GWAc7eORgEB\/wClsvzLIuF8BShKUZYmpFTq+ys30esuaUV00Vru27V4+XonUSVo3dtbcqV7Nbbvrvpo3yqB9DeDP2a\/Hd7p95f6D4htbedrcwyx71RZ1bnyj+8yxJGBt3EZz82CG+Uz3xb4Yo18Phc0wU6lONVVKbd5TTjpzRjGFS6\/8B2vre8nSoxrXu+VpNbcyu29dXfTayU7aOzulPi9S\/Zf+PNmtxdQ+C5tYjj8yRn0vUdMu7iTnO4Wguo7vewORGsLyHp5a8hvewfjV4d4mUKMs6eCkuVWxeCxlCjFLp7d4eVGMFa\/NJ8sf5ny8wpYeononK10mlLT1vKDdul09LWvqcd4M+HHxw1bxBFpvgjwD8QLvxGl4bZLPR9B1b7al1HL5bRyoIIwgjf5ZWnKxL1kKgnb72ecVeH9XLn\/AG9nfDdbLMRQVS2MxuCr0q1GpDSVO85SlzxV4+zi5aWTleTObnh7WVD2kHXjvRTTqK\/WVG8mrf3laV7qp7sJS\/eX9k39iz9qmDVvBHjn9qHwtp1p8K9A17RNW1\/wzfeIJrLxL4q8PWV9bz6p4ckn0u3ubTT5NYsklsJL6C9nntlkJe1Yh2X+AONs5+jvLienhOC1SzHE1cbRq5rlGHqRoYWtToz9pKOHxEfbYzCTmk\/ZzrYWEU3dSduU9DC4OdKcMQoKm6VSNSD1j70NYyXK1rzJPWTlde9a8Uetar+xt8M9C8UfHDxZ8PfF2t\/Dm4+J0uo6f4Z0HwyCLHwR4I1TXZdQu\/BsN3JO+oahDJpDnRzqL3Ng6M73qWj5SFPBx3El8LRy\/wDs3C42nRzCWOoYjHYmdetg3SnVlh5Sbp2xVejTnSpKpOMZt0fatOUlGPpZtjK2Y16lVVfYe0pewlHDq0vYXi5wc+VO1RX5lBLlTsnGzjPk9X8CP4M0nStHsNGR9Msra30fSbXQ7Zls7eKFNsSNCdz+bK2+We5laeW4nd5JJC5BX4rCZXXrYvEV62LqYmvi69TE1cTiKjcpzbvaLfuwhCPLSp0oKEKVOKppSjHnlEqsFQhTp0mvZw9nGnBbR0XS93e95Lr70ovmSPlb9pX4Zyax8LdeufGAXStG0KH+27SS6y0+n6hF+7hmt4OG3Sq\/2edIyzzQuVGWVTX6NkOGxmEqwq5dBPGW5I20hWhb3sPUq+9zRmrqDa9yfLNN2fL4eKpYucb1qTjQT15ruzu7NJSts7u8Y8yutLtR\/I\/xhbixsodAt7YW7HyWkV02mUyASrJE3GY5QyFDjBToRv219jwy54nF4jNcXUcp03VgtWvY8jlCVOtB8tqkGpKWllLdJqJ5c5ct6dnCUHzSahpdaprX5+62tlrZHlup6JdWrPbSRPA7cg7d3lsPuuuXwVBY7jtxjI4yRX6TluZUMZTjVhUjOMdI67p6yhLqm9FrdrRpttyj00Kzd4z0b0tbRLS32Undq+9tbJK65f7Zf+CV3xuZP2JPgp4C8RaghsNX+Gdz4f08iUxtb39jruseGPIXdJtKzWkXms6g7pUYoULKrf4bfT18M51PE7GcbZXhqscTgOIefM4RU50MVhlT\/tTBYmpC\/s5V8JUqYjDxnySqexxUKUpuFK0v6j8M8X7TJ8FRrzhNYfB+0pq69pD2dT2cox2fLJqLUno3FtXcoRPqP4wP8Pvh94e1TxP4w1OHTfDqxQW9jaQPHHe6jdiMtb6ZpVvlXubq7VAfL3MfJilmmcW6u6fyt4b5bxZxzn+XcOcN4T6xm9erOeKxeJ51gcvwzqQhWzDMq6hUVDDYd1Lc0YSnUrTpYfDU6uJrU6VX6XO8xwGTYermmJxS+r8tlCk71p1Ps0acL0+epK210lZzlOMFUnL+d\/8AaEuNU+NOr+LbKS1l0m50ux1KfwzoUk7yWlrY2kh1Cy+wlvLRb7UoCbu8nSMC8mYxB3WGJG\/2j8EuHsN4YPIcBha6xVbE+yWdY2dONGtmuOnTcMTUmtZqhRivY4KhNz9jhqVJXlUlOc\/5e4pzmvxHjq+NrKdKCnKFCgpXp4ehzXgrNy5ZzdnXaUuecn7yhGHN4N+zB4O1L4narJ4X0w3h1W3CNmJ8G3Rn8mQTPwY0EhUHgddx3YYV\/QnHFXIOHswp55n2NoZfgatCpzVpNL27jHnjGMfdU58trWd917l4o+YjHFRjGnh6KnW54qEm1yqN7LmaUElaVnbmstHe\/NL3D4j+C7Twd4vuvBl14nM154Zt4L3XYrSRTPPNKgeHTlZDgmVcIw+X5GJJLbdvya4lyrPMjoYrIaNWpg80qVKdKu1dOnSnyyqpapK6fvO\/wu3M4tHtYDDVFWnPEzo89L3ZON3aTV7Kyhpe6ekfW7SmzxV45vb\/AES10CHShZabZW8c7r85laMKSSYwzxiTDPjn5Q+G3cMnjVsqw1O06Mfae0XsnNaLW2t9HaTTWr72sVXp03UlD2ntYJKTUdrpbdUktvtX6WTueK6jFY3dmdU8LS+fdyFzqVjK+Gh24w0arkucqdwG1Mc4Vl2t7GAo4rAQsqVJ8tlCpFKTatta611tq3d3Xu68vBLljOTpRsmrOL93l7L7V9b6Ja9VLmcI8lB4y1zw\/Jb3Njbnzon\/AHiq8kRYKeVyBkZ6DLkjPGSfl2pyxVCTxKl7CupKUXBKV3e6bUtG29WtbX0StzR0jV5UrxjeOjs\/+A7Wt\/NPRW6Xl2Wq\/FO98TW6T3dpdWptYjGkLy+YGaTALBufuKcIcZG7OVPC+pLiKjjKXsczvUrySh7ZRXs4w5lKTfK42c7e9\/dt7sbOMc3NynKctb6RXu8yvp\/du0ut7NNXS5T6v\/Y5\/a6+HPwI8Xmf4mfDTTPiD4Yv9L1G1vrXV4YZzHeT2rrYTxWV1EYrwQS4QRyTRbS7TGRSqssYvG0MJmeBzOODp5lhMPCq54KqpKg5TpqEKt1dOVO94pxsldOKvFx9OhmFOFKph6lOSg4RtOKi2nHW1pW+J6X2W6u3c8h1P4h2Ooy6nq6WVtbf2nqF9ewwWqokFrBdXEssVpDHGdqQW0UixRBVUbUwMDay\/EcHcJ4vi3jOjNqoksa61WKbjFznPmUYK1uWldqKklyxWvVS0p4mkotKMVOcml73vRitLpLR6NPZ3d\/h15uJ174yT+D\/AAdqE5t41jkW7uFueC21V+VAQGOScDg5ycBR\/D+\/8bZLSXGOHy+g3KGGyzBwqKPw01FzUm+yfvOyWt7atc8U5ylJQjFqHxOUeZuyelnyxu7Lry+87qLuzzT9gpLfxN+1R4Y8SeKI\/tGveKLjVbu2ZyJJNHs9Phza26GWN1jmuSfMYrhgqsFKs+W\/X\/DWhgsNnWH+stU6GDoSrU5NqMXVS3u3PWKT+GUWnr7uwZiqlPDuyviMXe6bSdGhSsoU1\/elrKfvK13FSldqX6Tf8FMtuk\/Czwf4r8M2VlqPjK+8ajwVpVsGiN5H\/aVhfRz3AP8ArWSzEQlnYZQZRfvnc35B4k+OPD\/GXik+AMswVaVDhPK8dn+bcQwpc2GpxwcqVB4L2sLxk61SvyK7jadNxjrGTOKhg5YLA1MRUk1KvGVNU7rmVtfayv7yUem3uyfw3Sj+SfwzsLDSLrw14N8QNANM8J+JP7Y8U22Vd9d8SI\/mRTXTABZrWG6d7gCQtlo4gMAtXwXGfFFfGcOY\/NciUp18VltanlDnFrlvSbhJUvdlz3s5Wb33WnNhBxnGnUUk4UouSinrfROfv2tZXaVpO+qirvmp\/tb2vh3Sby91bQ9GI0zW7u5utAQOY47rUtQjtbVJAFGZY1miu5WMY2s6spZVI3+T4IV80x\/COW0uJ8TWrZjGjiqeIqVfdrWjjcROnOTlryypypRhok4wjZWS5SpKbwmEcqclKtGo6SfxyTqNJ8qvy3jonzLy+JuHw\/ofgrVL2O\/uobGRLliZTJKjWpu4xtIi0pJOZo42Jxj5m++Qvyq37HmeZYPL1Sp1K3tMPZU3Vh+9jQaVr4pxsot2tf3UrW96zqS4Z4OrpKNOU4K7cGnzy2u4+7B6dEou1tpc75f\/1fzF8U\/tg+LPh\/4wPhzxR8LbLw\/ZW01vDeSXWrSXupWPnDeklxaW9ukKoQCRsuH+XneCdtfw7QyKOMwlWeBzKnVxUIz5KPseWl7SF1ySqKrNu\/XRNc91GaTkbV8TPDtr2Xw6N8ybV9U0oNrRKy9+\/NzJqNvd+rfCnjGz+I2jx6xc2PhnUdOuYBLaXdkJJd0bR7pAWZpJoXTpLGNpBGCCVLP+d4jF46hVnRzLLVSxFKfK03OEoWdlKnV97mjJWanH3Xpe90jN4qnW5VKnGce97O6fRv4bXtpLW+nKlyHx38W9H0DxCviHS\/A9p5\/iHQ7+O+1Dw49ttvZY5DvkutGlXjUIZEVmNsgF2uzbHC+35Psckx31Grg8bjas6ODk+WGJlUTpwne3s68+Xlpt3SjUn7r5tbWc49eEq0oXoqMpJpKMZr34O9tJat6PZJ2bV+ZJs+D28SeN59RGkeHR9me9v7fTrWONSJ5r28mS3iiBJ+QtNIE+7x1YnAK\/1XhY8M0MFHMM3q+0jQwNXG151X+5p4bD0nXq1Glq3GlGUmm3dKyvf3Zq4aTlJpWXbfVaWtZJXs9m7bPZntGs\/tBa38K7y0+H3hS7g16Pw28dv4l15prlZda1sBW1WGzlieJ0itroy2vmEMhMXkxRFIFd\/g8l8OcJxzRrcY8RLFZV\/bf+1ZNklDlorLsrlpl311zg5OdXDqnWeHh7NwlOVSpVlVnUhDJUHRlrP2lTebStGL\/ljtJqKSTbUPtP3Uo836d\/A3xNe\/Ejw3YeNpruf4Y+GNH0\/wC2eOdb8WXMsOiafZBRtkK6vKxlv7sLKLGzt5oXux++DrEUavw\/iHhiGRZvjMmoVVnFarWUMshgZPEV6km3+7cKacXFSac24OUZe43GcZSjw18bUxGIpYTKnS9pCUJYzETXtaNGkv8Al3pyRlXqPmSUZvlUW52Uve4y5\/b08K+GPjDGv7N\/xj8TeHru108af\/wlF\/oOn6L4b8R3cdxKEtIbPxCb+C\/McBSNbzUNN0v7am1bGNhAC5nHgfm2O4ZxEeM+G6GYZPisSq7y\/AY\/FVszy+EKcZRxleGXyoyowqVOd1aOExWI9jP38RTjCpNRxzKjXhWjjsC6kKvI6eJ9mlKU+W6p1HGUVztJuMr0pSUeVpys0e7p+2l8QLvQvizr3xr8X+PPEnxIsPhv4ztPhFaaRBaR+G9U8Y+MdGbwlYv4tsII4zb2\/hex1m\/8XeHb62WawOq6bab4raaKzuJfzvCeHuWZJKFDhmhgMDkWMp4LB4rA4fD0oTwvscdh8TVx+GxsP3vt6lClVwmKhVdStONW0eS82cmGz2pLmwuPg44hSboV17vOnBqMKyd0rtqcJ05RjJx5baxmea\/Bnw7YeEvAFj421rVNf8d+IY9CvYtbbVfGXinOj6l4gs3t7HxOBFfxzzaj4QupbbW7DTJpTYagbQ22pQPazyI3dxBWq4vHV8HHBU8Pg1V9lQnSw8KK5qbjKrOjKEEpVNJcspylCPN78Ksbwn9pgcKsupYXF43DzrwalOdOfNTjV9pF3TqNXtB8stFfSy5bx5v0v0fxX8LfCXw9MfivXdUXxHHbW13purifzLl7uGFGile1VgsiXUmHdYfKMTsJIiu0I385cecTca5BxDlkuHMrwubZNWxMaGZ5fUq+zf1WbkpTp1VTajiKCV6TklSqNWqaSc4W3l6VSdSfsKjbqUJUpX9nP7MeW\/vQ16SUusduWX5LftZfEC\/+LHxC8IeENN1+a70jU7yDWNes41+yxT6dphinKXybI1JkukSP5AqOedrknb\/R3B+c1KHDWc4uGEqctPDxpYJyUpyhiK917Ons7pO70fKo2SjFo8bMMfLE+xp1GrycZVGklJqDd72Vk5bX1vfmcYWankeLP2a9f+NFomoeDvDx\/t\/TI441lsITLHcQRnzI4blYQxicEARTqGCpmNowpTd8BgeMsw4Xx1WOPo4rGYTHOcsVSgrShOceT2kLu02op3jJR9pyrXmjE8yvh4YlKULqqvd5pNax6JvsrO3K097XSbj4v4w\/ZM+LU3hfxX4uu\/B93p8Hw8gsbLxDDfx\/ZLgzXSSzC4tUYYurcRx53ocHeMbidtetkHjVwjk3EOU8M4zM5xxfEeKxGIwMJU5NUI0vZwVHFKUlVoVJSmnbltaN2lDWLll2N+r1MXyNUMO6cKkpcqUnO\/Ly23irW0n7tra3TPqf4W\/tSaD8G\/2cvhv4dvNWitr3wjplyZ9Ks8T67NqJ1\/WtTTSbbTAUljmke4S5luZ2gtIvNhkkukUua+T8SvCzOfFXjTG4fL8M62X4nEPFVMzrOVPK6GHqYWhhlOrWUZQryp041XGhRdWrOUuVxhZyj+lZVncuHspy\/EwxGEqRx+Ep80KVSlXxEXSrVnVwtTCxmq1Gamk5znGEV7k4Tkppk2jftP8Aiv8Aar+IugeNvixqtw3hPSbC60vw94Ri1V\/sGhNDELmEw2qeTFLqkslor6nqskTXU5YRo32ZEiTbwy8GeEvCLOaHBOR5bCrjc2xyxGZ5zPBU\/rGa1JUa3JKviJSlUp4Ok244HBU60qGGV5q2JnWrz+U4g4nx2e4fF4\/F1fZxw8LYbCRqP2dJOa5koK0ZVHFvnqcvNOSspKKjCP0Z4G17wp8Wfjl4a0O4dLKxdbXTdWvkcK0ekJdpHcSmc5DT29pNcHzJG+4uSzKpVv0\/xUySjwnhuHs1y2pGGJw+a4WGJhTj7vJKrCUJtPRtLmg1Ze7NJt2975vhr22aYitRxEeWjXpVfZt832YJteWq0acm2t9WfHPxZ8YXn7Ev7Q3xd0P4W61ba3aXOqCy8La2VSaC60\/UHjulmIt5mR2iklyPLkx8o4GcL63EvCWW+MPC+U4LN5VJYXLcyrRxFfDydGpKFB3pOLs2o1aUeSXO5PWX2r8vWqk8BOtT5ZOXIowlezjpo7e+nJxu7t3f95pHmdh47bVNdi8T+IWvbzU9Vu7jV\/Eus3cj\/a9Z1a68vasUBK+RpWnRhILSBSWlffI7qgjRZqZPQyzLaPD\/AA7SpUcHgKNLB4ehSh7lDDUnblU9ZSrVHaVao3re1m5TlKcPGVJ+0qOcnK8tW3d33klfW8r+85736KUvrT4ZeJvAtnrN5F45lhtLPVNPlOn\/AGosC5MXmPsbBLmOE7sIG\/EFK+YzV5\/GjRw+AwrlTpStiKsKaUYpJ6tuVk56vmcnZLS0nKEemv7aMXNNtN7RajJfm3ZXTvzW5r9ZKPxN47lfw14p1TWfCV7MuhXOoXX2cK77DAZ5PL3puCgOu3KkDsSCQVb06arRo0G6koVZ04yaTtH2ijeSSXutSa91p3912kua0uJuaUZ6p6XS1XPpv8SaV27dV3TvFlp8Q7O6iCapaATA\/wCvhH3vUlcsc+vHHqcba7qOJdeUaOIglzvl9or2bfRq6s3sn7\/V87uyoVNfeWveMk7yvvrTdne61t3u7tHQxzxXDxyxmR7eXZOE2uAY9xG7oMqD3Dbc9SMAU8Xk0oK2ik00tnfX1W62b1b0Sg1ae1WjOm1zrkvtG\/Nfs9l2b+15+7ZnbXOg6RqPhxdR1CZYIvOdMhl3onBXcR0wRnkt94nI53ZZRKvRxby+php4mM9YpLWD62upXu7aqUvi05to0qUXGMpSUI9Iu+j85a20i1tNx6xV7R46PTYo7NptI8WWy2CyiK4+0TBo7NN215LgEghIlyzOOCOTuHyt9\/lM8w4ZzKGNwOFdOpL941KkrTXaEnqm9ekrK97XSlaw7lZ+0UXezs78iXxN2stHd3S7NWeh0niDwf4C+LvxN0LwH8MvE+s+Ivhr4U0DRo\/iF40kH2fSvFHiqeWK\/vtI8L2piWYW1m4SynvSfLm2XJRXjAeX9e4LynHcc8Q1MZmVPDYOeJlTdRLSt9Toqyj7+rc5SkldK\/8Az7a5ZnVVzFYHCT5KX7uL5IVZK9TESp2tyqzUaalGMn7zvH\/l47tQ7rxloOlfAP8Aak+Aus+HrtvDug3tnerclyDCsjInnMSQq7nBwS+\/knAIA2\/Z+L+S4fhvB5fUyeMsJz4avQcqcmmpU\/Z2lpZczjKWqSvbVytzHj5Rj6mNxOJWJlzWSm2\/eST5k0o9nK\/up2src2vMfNH7T\/xq1vx\/8XrtrDWtU1Dw14XN4+nH7W\/2WPUbqV91zEvRZ5gnDD58SKOdwSv5zyHJsBhMkx+YUsvw1DFZxVjhaladOHtsRQpz09tJxU5xbk5WbmvebfM05HTVbnOs\/aNxts7tWvqo30d+ttE1d814yj5Lf6n\/AGT4e1G0j1K4Xxtd3Svdobd2S1S5hSeV\/tLf6++WN4re2tokeVpfmljRAzt7tLI8FL2NXH0ofU6FLko048qdST3Sp6Llb3SlFKK1buoTzgpU18MZRXvTd3a+6jFJRTu1Zu1oq7WsYc\/n\/juz+Iei6P4T8U+IJdV1PTbmMQeHby+eS+stBliOI7dTMrW\/2yYCaRCVZI2eQIju2+roZXhZyxEaOCjhqC5Y1PZ01TjiKcnKUafPFqyjZKaioX5U30gTi6tf61RqtypuMYxoapunBWahGNuWEbu+m70ajeLl4XrfijW4NRsdZn1W9n1GKVXWZp3xFJG4IEMa7Y4lx0RVVCMgLwBX21DLcDicB9VhhaEMPVpuNSEYR5Zr7XOrXk9b8zlGTeqtyrmtVJvkrXlzrVuOvvX16u3azlbTRu95f\/\/W+M\/2vvhD8Mb3wtaQWusab4X8Z+FtGW5kkvrcTN4omTbssbyZ5FaPZkSQTFxLhmhVTu2t\/j\/9Gyrxy8bmvEGde3jwzmFar9WhXqyo1MO+f95Xp0pqN41Jc0HCUZyqzj7WMEowlV5nQpYKnzVqjVVK1RzbcGrtpNu9m1\/iWybjZOX55fDjWfGPw+1OO68KX9zaadeIv9qeHboyXWk3LuQ0v2bMkclqTtG2WLLYIDKwHzf1VmWJwedTlRp4L2y+GjjKjjRqJO65krVHy3d7Tn71r8sbLl8WrmVGElKCcWnrJOykut1q9Fa+zWy5k3A9i8c6\/qfifxHY+M\/B1jYeBNdFhHbapAL65v4r25t\/KkgvoLmO2hlt5Y7iITbJom2q8kfmurMU+c4d4TnkOCzXLOIc7fEuFzHFVMRhcOsJHDzwWGrOSeEqy9tVhOnCDUadSHsZ3ipqmppqHbh+IKMZU5yjUgoW9+KTTlZXcV8SbtzO3Mk43TS5nLDvND8OSeNNN+IckEdprJSHVNW0+23jSm8XPDi+1WxVZYdlq15nUooZUCpdTzgxCNYinsUMTny4YrcK1cXCvglOeDWJlBvF1uHoTSpYCpUnH93iKuHjHD16tNTl7OPJCq3KfP6NXi3CTjTp0cBOtiJunCVao3TptqUfeVKEpc8pPT37Wd2uaThyfO3wC8LQvq3i34k+I41vtI8FW8t7PcXMK3EUGo3ZnuRqc8T5DSiG3mWwVyTPqV1EsIaeFCn79x3nNWhhsn4awEpUsfnk40sLhqcnTnVo0I0qTw1Kad401KpTWJmm40cLGTqOMZT5ubiGGKxEcPl2CVVVcbVk61ammo08PT1nCpUT91VJS9+9nKMHHf3ZaPj747fEP4mltCgN\/p3gXTXkfQ\/B1grtapNJkS63rXkjGp+Ib5cCW+n3pZwJFYackFtERcVlHBmU5BQoVqs6NXNauuMzKryxnKT3w+G9pKLo4Si1y06afPO\/ta0pzk3D18vy+hluGpYahflT5qs7XnWqy5eepK129UnGPSMeRcySnS+a9X8LazYRG51HTtRs4ZNziW7s7iCFl+\/lWkjVGHOcbjnbn5eA\/wB1h8xwleXJh8Xhq042TVKvCpJW0taLk0\/Jq\/Zu1o9k6bgtIK7fxSi1\/mtdfs3Wyva0v6DYfgRf+Af2dv2Z\/hHLo15r\/wAWp\/2V9e\/an+JGtajqU0934Q0fxbquq+Lfhx4HSC4UmO1j+F2nl5tOV43W7uopY4gIV3fxDx1xJltHxC4hzKNTD4DKKWaZfk1WNKl7OljcVODp4rGSVP3fb05zw2IdX3ZPntLmc05\/P5vhIYyhVhGlCVSjhquNjV1hKnGD5YRUlFtqo4zT0SvLnt7rOh+Gf7SHhT4it4W8D\/tHarqUHgGxUeH18ReBdN0m21zStF+wWum215q2lwaRayeJnt7e3JuZP7RfUzH+\/hiu7ppYn8\/E0KmLlKVGrHDU6lO2HjWpqdOjVlvUioWumrVeaXM\/jTaT5TTBcbYjGYPB5fnE5YnD4VKnGalGnVpxjCNOMnFwUaslFOMpKbnPSShGanOfXfEXWPh5dXz6L4U8XW3ifRtN1a+0HQNdKyQDxFYabHHJbanbW1yILiJbiwaKaSK4hjlhl82GSLdGyV+H5pw7xBhvb18VhFOvRoyxeInS5nSUXWnTjOD1i1Nx51FNyipRTs3Jm04wrvEzwL+t4ahS9oqqd3TpS+Fy91NTi3yTVouLumrJ83nn7L\/wZ8OfHPx18QvF2oy21pCLp\/Cvhf7WyLENN0bal\/exO7ogM97uG4FPkQAKTuavY4o41reH\/DeS5dGHtMRXp08xzGPKm41a8V9XpT0l8NP3rPa9ne7kceWclbEyhVSfuLllL7a10d3pZO++j3UveZ+7H7JviH9iL9krRbrRviV8bPh8PEF\/eG6ure91W21HVLedlCfZpIbT7ZNbW8QTAWRYUj6MSzO7fnMeNuL+JcVUx74NzTG4H2cPq0svy6so2grXU5RhTq88tXKGvN8N0lGP2UaWVwjBSrUKVRLW8r3vZ3+GS3dvdt7ve14fK\/8AwU1\/aw8DHVvB93+zLD8PPit4XuNIv9X+I\/hpmjudK1rSrO4gFgn23Tpre\/0+\/jMlzKjxtKCmVmtZUwW0yDwqwHi9jczxnEGX8RcD51lEFR4ez6EI4LMsHWxcnLFXwmJj9WzLCKNKlenVip0pSl7HE0faTnO6tTCxwlShT+rY2jUlTnOjKdqbjFu04zdnGS6tQV0\/fUvhh+Hfxt8A2Hxk8cR\/EzwB4U1HQND16ys7jWPD15b20NjpOpLAkFy2hXMW1NQsGEfmAzx21ys+8tENyBf3nwmw+d+HvC2I4Vz7NcPndbK8dWhleeUPbQxWYYGU3Uis0wsnWeFxUKrnTXsa+JoyotNTg1KMfkcxpRjW9tTcqVCvK6g0v3eqvFTiocySWk3yPSypPefM+FfgR4x8JSXV5FbajBZwRNqNkd0gtJbi6QwC3UITE0zLOjMBIMYfqpL19tj+J8pq5rlOYUI4X6zTrXxNV017elTownKU+ZxhP2Ufegr8sbzstrTFldathsXW9nN0oYeVSVruEruKim03Ft3t9pdejifU\/h3wncfDXUILzUDLb3WpeFvEovrhn2\/63w5fPc4z8xaFNsgKNiM7DyTmvhsRncuN4YyvUg6mBwucZfToTaVpcmYYdtRv\/EUo83M5JX5XFpe7I7MBSWXOFR+7UWHxFSMFdP8AgS0jZylFrVtWXXRtM+JfAWleH\/iX488M6RrH2h9LWy1uTR555Gke8azufMtSzyBnkV1QqrM27YuQGzlf2qjhp4HKs0nTtTeIr0ajhTXLyRlBpqyslrr7qj2cXZnk0nze9Nu8mmtW2r6pbv7PTW2y5bSZ1HjzT7jwzqscU9kDZ2ZEskka5\/cxsoCAA9wB6\/d5C5Ur81Qpcto0o\/vZP3rJe95u3K97XVnbb3rSnLqgoqTjJtpSju912Uve372leLTaVnGXOx+IG8XyS+JLhbi3sdMs5tP0m3LsDLcOm0sFbBjTYmDtI3DjJwu71cylRwmC+qQVP21W0qqsk5t9Houa17bq2750pFynUXNq5brXVLtbdX1Wqavy2ktUY+g6i+v+G7qwn4ltr2e3O47jwSFIPOO3Uc8kbSXVPi87jDCYqhFq3PhoT5IxtZ205feVk13+Gyac7tHK2tn1bvG11fXa7\/BW73vaMfPSHhu5bRzskhdkyW5wucN1BPAz1PsDgqvA2vZxq9NG7Lq7XV+l27XSdtG78y5cWnGaV9Xt006X66JXt7r0srJqcvrn4WfFDwfoWkNaeLdFhv5rO3eMzvGkkbQDLBASQ0QJY7sNs9AM4rzKqzTMKz+q1pTq6KlTnLl0WkW9Gm02ryVn5OzUvVy2vCWIpLFyvQ0heeqSTsrq0lrp1916uyfNL5m8a\/tB2X\/CZ3Gg6Hojy+Fb15ftEmQLeKWR\/kjtkYNIwUNglRgKDj5mLL+nZXwpisNk9LG4vM1HOaKU401f2tt7yak0pXSSi1romlds6s6\/s+nVlHB1Yzp\/FJLZX0teyd3pzatL+WSXvcd4rv7PUL6Pwv4Xu59NtNTt4J\/El3KziHTrOT554QRtPmSAfxBj821fvkr9dgK+Z5hhqKzSFOVShJxjKEYqVb+Rylq7pXcvdbeiUpe8jjw9FqE4KrJUXZ1G7tRp292EW1L3pfDtJ7J2vY+rPhB8QPCPg6y07w54WtpzLZMI4Ft7Z5JLy6f71xdyhUDNLJ8+fl2AiNT8uU8mXEGcZPnNPMcmniI4vCVI03CMZ+yjFNWhUgvdlder0bXVx5cRjo4uEsLCguWzjFaPkWvvX5Xdu152ta9veskTftu+M7TxJoPwg12Utb69oV9cW2qQoGDRq8bKxBB5KnGeTkElUKja37ZxTxdg+N+D8ljVqRjneHrSp5jh+TklGU4PnbTm7Q5qcbLlv7yd3uedgMHWwOMq1KkZOlUoW9pFp68\/4NRk3s29rKycviXRbi51jXbfRtE0+71o3kzTXv2eIyzS3MzedBGWyNkcOxIpJZA0a5cnBxX5Vm1fBZVQwn1vEUMPQwajGMKskqcpfbs5NKVVuzsoxcbO3M9D18NhZYr2kYqp+5UXywV+duWl7ynJJSs7paKLTU0pc3tdx4W8SnRriwi0tLzxJLfohv44TLcaZ9tdYLuSGZsyyCKNpHuLn77N91QipXl4fN8JmWNw9OFR1KdWPJDlp1p0OVatqKpWst5Sbd4LVvVnVTpVoQfMuX2U020rOPM\/tXUdbc12kviXeMY\/tX4X\/Z3+G3xC\/ZjtfhlrB0jWI9R0eJpNS06SCebSNVS3T7JJDKmWhubORUeQcEybg3QrX9icMcI5BiuEY4DnweYSxdCTr43DShUlTrVLOKhOMpOE6EuVq7coy0d7Nx+fzGrVqV225R5G1BSVl5uzSTVtPildK8OW7gfzjftK\/s\/+NfgT4qu\/CfinTp3sWnlbRteijZrHVLQO\/kTxzgKiXBTb5sBG4Mflxg7vyXGcP5hwpjKuFx9Nzwzd8Ji4L9zWhumtkp8tuelJX6q6tI7MFiYSjyzdrJc0L3al531s+rs9dHex\/9f8rf20vjH4Z+LX7RfjnUfh5Etp8NPDeoy+GfBp5WTWbXR3a2u\/Es6uSwk1q+We4tEw3lacLKL5XEjN\/mz4bZHmOTcG5Ph8\/qSq5tiKbx2Mw+nssDLEa0sBDlfK3h6XLCtN6yrSq2VrM+f4ozGjjsyqQwmmFw81RpyjpGpKLtUru2suefNGCv7tKMbRUm5S+bbfWJWaO3i3Ss5WMA8Kzs2NuFIAGSCeWO7nkE1+lUqaipTUeVOL+GburLfXkvdJPaV3q7csonzcby5dNb6W1XM5Wvro9ldNT1stoyVXrrK9laQW8bnEQ2OVGC8mfnKj5s5bdjcSAMA7dqhfQWEdKkpT+OpOMpO97yaVk7vRRWml1dfCrtxmtKTlaPuxhHkWqinZ3k7atNyvZ82mm7XLLvLeLTzprwapqNtpU+rLcaXo+oahEp0+21gWkt5CmpyHalvbXUNrPbBmfcZJlkRwyqreHm8cdhpYGpg6X1i9eGJxdChP\/aoYKjXowlWoUteeUK1SF43\/AIcZ3TUZc\/s8P4aGLxU5VZqnDDRjJVeXmiq75nS5tVeMXHmlrHn5UlvPn+xP2nP2c\/hR4S\/Z38EfH34QXWhWnwZ+LfiE+Db3QtB1HzNRuPFXhPSvDHivU9H1ODzckad\/a9rbSCQ+fFdRXIeOFJke44PC\/MPErPuIpLimfPnuW4fiPL8gzHHrmhRlh6+Bo47MI4ZKMo0quGx+B9jXXuVfaypQmpUnA\/Wa0MDiKuGxuHcFRjgYqth6bX8bEzU1zdG4KjOOsYyjzXXMkoz+av2QfD3wxi+KNvp3iGGK50\/VLuG4sbW8SNZoVilTzLJ1kbExWM7gULK67sE7Tu+68ZcZxPiOFsTg8NWeCz3BYSdGdahOSo4ydTDuUcXheXkfK5KV4e5ODVpXsnHysWo0vZ1YNcjqNuLb0Tl1s\/VLS\/VcrU+b+rzw7+xf+zx+0L4MtfB0fhrw7NLqWlyhJLrTrR47OFbZnmvpcKHMNqoMsgDKSqFdxLB6\/wAMeC\/ET6SWF8c8PwzlGa5w6\/8AbU62YwlXqRwuFyPCYlVcdj6k3ZKjQwSlUk05SnKSgl7RqMfrqX9l18v9rypunS5rL3ZOS3TlzO7b0TaVlro3JT\/G\/wCGPxN8an9oC++OOsT6dd6dpF7pXwyvtPl+z3UeoeEPhdpY8D6Za6RFHFBatZpodi0VrZ+QlvM10fNLvJI9f6r5hi8kz3LcJUzLCV608W6GdfwqaclNUuSlXpyXLJz9nHXljK1O9pXbj8ZUxVDH\/wBo4jD4aOFpui8FQoQqOV44WE0pKUrLmrTbdo9bNytLlj0Gofsmfs5\/G\/wJb3HwU8YRaF8YdNtr698QaRqGp2+nW+pzFTPFHqfhvXLuO9tJZ5WkhS60iOKAu6k2kiKHb6TKqmKq0qFOl9VnQhh1BupKmn7kVGMadTarJxTi4SUZc3vRmpNxj+PUoxtHDzXssRHm51WtScdftRkm530SajG\/W58C+Kvhn8RPg8kUPjnw5qvhyO8vr2103W3tJpdB1E6dIbe5i0jXIvNsp3SUvHNHbXG+MYSTGXWvax1Gj7BYd1I01yaQqRhJNfbbVRRU4w0uruKvq0pR5vRhVxGDpSj7SVKdZqMnSm1+6WnLdcqabd3FRs7WaVolTw9datqNknhXwxeXlpbTtO621lKbGwEk77ppJRb+XIUld2kkiHMr8jc5Ct8JiHlDqV8bjcLl2YYmhyReJnhoVMTHkkqdCEITVWk5x5owiocrirLRLmJoYjF168cPh51J1K75Y8rcJ3tdzcru0YxTbcXFRUW7yunH2yw+Ct74Ov7vRraTQLu\/v4I31Ozls\/7Vljluogz2FxqLELbXERcSNBZp\/oczrFJcTXMDmLhWNxWJpP69jJ0lTlUhh50rfuacZP2UoKm4Q54wirylKXNKNRaw5oH29DDuEIQlXnVqunBTnK3KpKCUlGN4vR3UW4py+NpXvHivHfwj8cfDzXYdI8Ri98IXd5Bb3llBrmmK+m3FleRo8My6hE6t5U8UilLl0itjvBk8hC7r6OHxizDCSrUqlPFwpe5PEYKKc1KK+Kpgq\/JZySUnGliJN6+z5r3MMRgc0opezxFOXWEalFQUofEk37yc7Ne8pqN9XbXl9Gbxn4ssPAM3w9uRoWoRaOftdvNDaPp2vWcLRMVgu7O43LNp+ZPNtrzTrzUbSddjJdMgKL59HAy\/tPB4rC1ZYjC4yoownRkoxnib3eHq05ScqOIdpRjTqNxlO8VyzUIHFVzbE1sLUwOJp041MMrzU\/cqwglpNwfOpUop6VKdSrB21tyo8asvHni3SPClho58T3l3otnrk2tWWiXDiSytNSPyySJkGVUcDBtnkeFeXji3s7t9RHB5fnuc43\/hNpYaf1Klg8ZjI0\/Z4irQW1Nu7s4t7x5Zt353O0TXDcQ5lluTVcvo4u+Bxc+edGdOFT4ZxqL2VT46cJTinOMJcr5eVxd2jyPx1+0Rqmravr1jq9xdXd\/e+DfEXhvQIbKMiGDWfEEdvp0ly4QjyY7fTpL2VpMZDLHGCN42+theEaGAoYLDZTShTweGzHD4zGutK\/PDD+0qKKvZ1HKryKSU46au1nz9GSY+WZ4nGYvG80o0cBWoYSnGDtUr1Z06b1i5xhFU3KSb+Ti2nDwvTfEq+GH8Ia3oTz20mkTfY4yqh5oRExin2q+1WBJLYkHzLgsR81fe5dOtmGDzGjiVGnVjFzly6wu9YKO1\/d2dnvb3dQqU3SxE4RuoOUZwfV3jyuLV4pNO97uF+X3WrNnZ+MPiXr\/ik3CiWO4QxlVE9siTzRj7xPlOy8nOCvXp3Kphw5l+W43D\/wC0zrwxtOtNRqQlyJp6Rk42fvK0fud4vRTxxMsRTnGdG0opXcHaSbT1fMrO3K29Ha7t72vNwOk+K\/7UNjoFpJ9gWMNBiZxhrhyWeRRkhS3IH3nwcbgownFnOQY7L61XG3eJgnzJxj70Y9OaN57aOy2tdte7CThj4ysnBQlezv773STXwtPeXXTd63O\/+H2hXFla6ostzFdOdSn8xYiGaEhQyiVtwwXDAgY+m7O1vls9yPE5xPDYzDVEqioJcs5cvMlypva8byurpy0d3F8vJLOrXVOp7Plbi1zKeqs5a2T5op9ub3e9pXcY854i0W9Optcw2z7HfaSnUA87sFsfNz1+oxn5eajw1nFCh7OpQdW2q9m1L8IyT1738mlcr29Oajq1Nv4Xffy0btd33d12vzx+lv2Y\/wBnvwR8bvHVh4X+K\/xh0T4JfD8yQ3HifxZrcgS7XTEkQ3FnpFs+Vm1K6jLJB5m5I3+cxvgpWuWZBm2GzCjicTGlgKceZc9Vuooqybn7KFpWSs1BJ6\/FLSKNac6M5e9WjTSTUrzu1rze5o1fs1e2\/vc0YH0R8X9d\/wCCZ\/7PP7QGs6Z4C8O+IP2nPAfhzRI7TwHZCCPTdR1XxvcWEtndnxPqs32UvoOnXsUeoWSxWTXc0NzGDGdiSV9Ll+ExuJxOOqQqYivgI16lKhisXbCfWafsoNYr2K55woRrSmoJcsqkYXur3PRwNPDxlVryjKrL\/mHp1H+7Wl3UnZJt2+FXXLzPSUmj4FPwZ+Id34T1rxBq3gXV7ay8RXl7rfn6HYtfafpovp5Z9P0\/7XA0syW9jE6QokrrgJukJJD19lCll2DhSxVfiHLsIqNDngsTiY0\/btUleOs+XmnJaRktZOycrqMrxGKqv6vSUIRoqpOVRqStKTmrJJLRRTsk031d7Hu\/7Nb\/AA10LTbHS\/F+o6bZeKYNQmN59vdYJ38t\/wB3EWk2EAIu4\/cI6EMpda\/aPC6p4dZ1lNOWZVsvlmeIxLrTp160Iy5aUrU7wlsqjWm\/Mtm1qfM5rLFYXE1Pq6cYKCV4rS0le+nxSlo\/i0683uo+w9V8Mfsw6ho7\/tA\/F37Jq\/wh8GJ4ht\/DPgqx1OKLWvjB8R9Ms5fsvh+yhh3XFh4T064KPrWuspRARGizSCGGf4rxRo5AuJlQ4UoyjUxUXg8XWwKh9XjWSVlQkrJSpr+NiOXkhH93T56zUpe9kuFxlTBU6mJ5ZczcqUKj5qiTbcauI6Qopq8VeMpz0aimuXM\/ZQ\/ZK+HnxC8C23xGhkvvDTeIL6+vLvSrCCe1MCXNzLdJY281xtmNjbRSrbWy+Y+2GPBLOXdvr+HvBTJM7weAzDP8XXzD2ahKnhpwtCMopQc5c3Nec0uZu8opu3KviisVjquAqOhRa11nVjaPtHpd2Seqd0vei1faV7Q73xN8LtM8G\/tL\/B\/wj8KtBs7+PR\/DfivX\/G8+ozG5FvBLDBZ6ZJfRFXTzJpZrg2wlDbnXIzgbfs8w4awmR4zL8DwdkeX1cZhKFfEV\/rCio06U4qlS9o+RqzfO4pJX5bWlyI5cFiPb1K7x2IqU8PyRh7itzTcrtb9o8vwtrZWtznb+KNB8WeDrrUfEfgKxi8L+IZFZrzSIwzeG9eMZ3fNajbHb3TgECWJQ7ZwScBl+SnV4k4fzB5nl+TxybMqn+94OleWS5xBayi6UbRw2Kdv3dZQTvpPm+E9SWCwuKoN0sT7eMXzRUm1WpNbWe7i1ZLSKSs7e8j4V\/aP\/AGj\/AAj8WvhtrHw88T+BjD8VTdJokPh\/UIg0MF\/Lll1jTdSKh47NFia5YhlcKPLKqSRX2z4xyrivJp4GrgXHM8Q\/q8stxUVF0cStJuM\/ij7F683uS7b2j89LCVKVSHK48rfvVL\/Co6y5tXf3ebW8r9LyScf\/0PwA8SeB\/Fnw71a98O+ONF1jw1r9jK8VxputWk9pOro+JGTzVHnK7Kds6b426hnyQn8S8rxE4+ypQdJ2fNBx+F6K9+ZxUbPS91tqfB1KN3flSSdlaScXa0XyzSV7Nvtom+ZK8YwadcRw3ayM5LRI0iq4I3ShcRbVyclHYNnOflwc5Oz18JhZNLnWntOZytf3Eryi1ra6SWsne9o8tmw9naFR25nFW025rcvxOLXNFvnTvK2+lrnd6HfQxuJZ48gYb+P52wMAkOOSS3THqVfIFGYVakkoUpcr5tXukn1+1Zpt20utb81vd5fYyklaKafVu2l72urfE1FfDDsr3sew\/EDxdFoPwb8PaNpPh6U+KT4sPjjXdUvbSG7sLjQdX0uHR9L0p4bhZImhhtIpriSJlISW98zzEdUZfl8nyepjeJ8VneOzGFTKFho8PYfBUqs6eJp18PiFisXim6c4NSqVKijBrlfJQs4yi5xn91w\/R+pYFScVKeJqe2qJpNKklyUqbT7aytd257uWiUbvwS8K+N\/2i\/Bulfs\/6X4uTwv4e8C+MPEPxE0WGWJ7myk1\/wAbaVpek6hc3FqJAQ8tnoGiWs08b\/Jb2MQWN5Gld\/fzt\/6lZxmHFdOti62Kp4KhkuHw6qKFGnhqeIeOqTi3dKWLpyoVKl4T5p01dpQie7ltLnlisFd040a31mE1zXqKspciktE4whGMU\/dvfWMrXl5p8XPgD+0\/8DfF+m6ZffD3VrzU9OvRqnhvxp4Zjm1DTNRhtZA7y2cttHIY\/wB2QJ7O4\/eojE4KtlfYyvj3IeMsvxNTFY\/C8slTTweNjSoYrAV0rOPNflq0qrWko+7zaXi0pS6sXhnX5aH7tShD3KjlbnlG2zfLyuWt07NpWTdry\/oz\/wCCff7Stv40\/Yu\/aI+Pcni99O+I37Pfws+Imh+J\/AtzKltqNj4i1bwvfaP4R11bZ3juDZXV\/fhom8oql9ZS27StJES387cf+HGSZJjsw4myzC4bD4vMfquDwuJhG9W+bTWFqKFSMLzp8spe7zO65bxhy+9yYfESwOFx8ZRcZ\/V6ynGbdoqm+eUqelleXKnfvdcvNeX5m6TP\/wAIv4D8MpdyTQAaZbXLzTrMr3M93uaS4wfmlFxPuPmbWWRvnBAbDRUxWHpYtYHkn+5VDCwjGnN042hThGKnZQSbdtZQStZ2aZxYGjbB4aF7ydNTdpKLlzXm73s1dvo1pZa2bPE\/iR4svbTX9K8Qabc3Njdrp8f2fU7Cd7W7t7qxuJo8rJGfMJMTwgjcvy4z5keY2+34ZhGOFxFK0b08a6tm23KNWlTur25eXmjLaNna7jJpSPjOIKcJY2lX2boxi9ObWDl7y+FOyaTb66q3Koy+8vhB\/wAFBdEsPgw3wV\/aV+EPh\/4k\/CXQ4NRkl1+HUE0rxDb\/AGu8nvLnVnS7hksp9YkvbtzBcWM+m3c8pghBZyqt42f8NZhmuMhPC47HUsTiJxWGoUoqU4VamqjSTk4QpKEeeoptU7RbqPlTPIp16s6sqPs44qk27+05qcoxe9TnSkuVN8zuvislzaRPx9+JP7Q3h2w8ZahD8A4PEmh+HBrH27TL\/wAXmxk1pdNjufPtNJltrWS4txESq\/a7kTLcOiRwrjMjP91knAf1DBP\/AFkeDx1acWnTwdKdKn7TlcHXlNRhJ1Ypt01CPsoTcp++nGB62BoxwU5V7t1ZJKFRN3jTk7yinvzNLllLS9muVKTUf3m\/4JYT\/Df9pmw1DxN4wudNtvEnhO6gsfEGgTyqI7W6kTzbfVF8za0llqKK0ltI4KrJHNbkmSJ9\/wDPnihmOG4Azalg8fVdHKcfh6mIweOq+7SqRT5J0Zz9xc9BNc0XGLaaevMnL7jJqVPHwm4tSq02k4dbOzU3d26X0Tt\/Kz7p\/wCC3HwmsNG\/Zv8A2evjj4Dt7G4j8PeOtK+HfiKaMKx1LR9dtTpdiu8KeLO9tIXVnc4DMTnJSv0vw7oZVnHA2U55llSGJw2Lp5jhljaO1bE5fKTvb3VK0Kcqbb1lpZPlcZfW4jBLEYCvhpJxr4aVCrSShf3ailTlGTutLpPWyXL8ctFP8Y\/GXhG+Phyw8O6hZy6R8SvCFl5umLLtB1bRZEN1FZByuLq2ubOYfYyNyCWMJHIqzOH+VyfMcEs9qKVb\/hFzeoqdR8vLHC46H7uFeXM70msRHlqzhrTjUjUfMoJn5nm2AWJtGUpUsXRXNh68LN8s\/ipy95c8G1zWvKSd+W93GfzPp2k6Nr1obeC7bSbgXG2SzumxAszFlkW2u5QGhIYkm1vGKZ+VJ0AQP+g1o5jkeIxOIjReY05wUfbqLlily2h+9jD+PFJO9Syrx689\/d+RjOml9TxMlhZc\/K4uyoTknZ+ym3alO7tyS\/dy2i4s6H9if4f2MPx\/8f63448GxatonhbT7jTLBvEMZtoW1q7lhuIbqxMsckNwGt0UCUDyZYJ1kjlCgPX0WKryr5FlsqONoweLU61dU5SkpJpRUOaPLKEqc04uLWjjOM4xb54\/d5fl9Onhoww1W0G4tSi1ed1q7XWl7buVrqyVpOfAfFD4deHpfjZrKXSQeHfDl3rV7qmsQ6Qkepro8F9M84+yWtoZGdNucKqR43ABVyQsZXmzy3AZjDMMQqPtKCVKtVfuv3uW7lyptJ235m91ZL3ypze0nB03KULKTTg3Nc26bcFdpdVpbVy0UOS1iT4GaFdWtx4PXxhrzlbu21C\/12zt7OwDNGUhNpao7TAxyFXPmxxEBcZON6+jQg8HgufDY2lJwUK6lRd+dKcW2uSVS3NFapuN+racoy82WOkqmtGXI3yz5tJRcl9nWWzT3Tkkul\/e+PfHFm0NrJremq8UqSut7CNyELu+SdNpQhguCWHfH3c5r9Lp4mGMpQslNTpQnGS1TTWrs79bq1kld\/FaXNnCnCs20uWSetusWtJe6tVy2bV473vFt8vRfAT4q2XhnXZtJ8QxNf2Gvzwst5NO5ktrs\/u8y7+HDqwQHemcAHH8PxXFWX1aWEeOwdBznhYtzpUn7KTp7znBe8mlZycU01up3V46VcPOtGCv71Pm5JJ2una0W1tdtroru65rzcPsrxbDpn2qy+zxpGLlo8pswGR13K4deuc5HTjpjAdvC4Wz2ONmoym5RjNKXPvBro72e7a0UbNXPExFWWHmleS5YtuMr3Xne1nf4nZ7bcyvExfG3iKz+HfgS+1W3gSbWtUC6T4etynnTS6reIVieKM7SzW43TsRv2hMkNjFeviMbhc1zJ5bhZ89WEXUryjoqGH51z1JJ8yTafJC+rclZu946ZXTrZnjKV1L2VGftKr0jGVn7sVo\/ie9r6SblbRnGfCz4U6dpvh6HxL4o1rT9Q8a69eSxjT\/ALQlxd6Mt2jySyXBU7or6Y7WzuLoDggAIy\/NcT59icNXq5XluExNDC4ekp4jGOnNU6yg4qNClf44uLkqjS929k5SvKP3eITp0\/ZqUby\/iKL92EWvhV+VO+l7T+y9Y2UJfWf7PPwi+JHi3xXcaL4A+MWk\/DGztdS0bR9Wu\/FXiiDTvC8Wo67cLY6Itxp9\/LPY3D6neSJbJGYHl80ttMpVg\/x9bIsbmtGFXEUnVyvF1I1I1HNv2Uqk0lTq0teRc0k1Ud+SN7c0FKcPMWBdabgqsEqtRxUajs3JxvJRWr1Wvuu6s3rduXD\/ALWv7Lfxl+C\/jrWIvinY6Le6rB5dy+s6PDZNpOrJMd0V5pd9YKlpMLlQZVQeU56FWIKL9LgcvxeCw0cNgJRp+xXLCmpxlCShtySvyt6XUnUjo1orpy56mAxGGlu5p2ak5Xp1L82jbc2rJdXFJpWhooHkvwy8YfBw6zoKfGTwJrOo6RodzGUbwvqZs5Jk8zdJDc6XfSx2Uu9wrFVaNHkHmGHevmL6eW8aZhkOOoVK2Dp46GHanXwtVKNRxh8S9rKMuTk35teXZRd2o9eGx1SjGVGLScorm0W32be8rtJr+VLdvW5+0nwG\/ak+EnjnUz8PfCen6j4WhtEkPhux1pLOCS8so03iNRaSG3E8Ua48sO7vyeeHb+qfCbxxyLjjFR4dng6mTZrThUnhqFWVOdDFwg25Rw86e0oJpKnP3rbWSTn5FelUTlUb50\/ebs0+92n+iaW9ndOMfwMsYNb+IPx2+Lbqzt4j8Xx+DtHnkkZsaJ4OtktphAxXasM2rSXLbY8KxiycuMr+25dTp1MZmmO5daleGEhU6yjhIWlpaTS9q5r40ny9byUcleNCnGSa9pKddrbSTlCHW93FOXvJ20V5WtLc+PPxM8PfDPwFr\/irxBNCIdPs5ntoHZBNdXZX\/RoLZWO55nlKoiINxZlHIOE1zmpg6GX4mtjlCdKlTlJcyV3NL3FB2laTdlFJX6Wlf3SnWqUakJUnJTclGMV9u72aV7\/O1r32Uon4D\/E\/w18VfG\/h+++PfirQZdIsNW1hktxaxPBeWGkTwYtbibZ5bqsZ\/wBZcbgqvMY8qSxb+f8AM8szGny8Q1KH1OhmGIVOlyXhOlWhGSpt2aalXgnHmV7uKV58yR6kGv4c5c9afNUk1rF7Ll+y7KPq7aq3vRl\/\/9H5f+O37bvhDx54o+IHwU\/aG+CnhrxZoHhPxn4m0jwt8QPDlu2j+M9P0iPU7saTqME8jCaOX7C8F19iM0lnIzbJIHwjv\/EXDeLw3EmS5PxFgqlqGdZfhcyoKKnTtDF041nBp8rTptuEqc4uVOUXFtSjJz+OxuCxOExuKjhKlOvhHialShCpHkkqE250488JSipRpzSjLl67uzhH86\/F3w20Wzsr\/wAZ\/D3xDD4n+Hy65ZaZFc30lpY+J9Nub23uryGy1XQvNNwWCwEPf2qy2TFY90iPIka\/WuM4U4SlFRajKNou6lJ8tpN3nypxVrWTXTnSjyPljOjJtSg1yN05OKspfajrafvLl8uZN31idh8LvhzrPj7VrbR9GsLq\/aNft2o\/2fbS3L2WmwMPPu5FiicJ94JGXKK0zxjgsK\/N+MOKMs4bwTxmPx2FwLr1Vg8HLHYmnhqeIxtVXpYeFSq6aqSbjKVovmUIu12ehluAq4\/FUsLQjKrJ6z5It+zpxf7yrK0XZLZaq83b7TlD9IfCXw+8Ba9pk3gH4n2l3p1nqul23hyLxeNK+13Xh6yjnlSC7vNOhRbi5js4Z0Wf7FA9yyWcbRxMWdW\/OuG+JIYTE1quKcZYbGYuFeOJw1Z4nDYarOadWtUppyrKEtXKdJzcY6K3ww\/RMJk1PC1Zubq1KbhJKlypVlaLcYwu7NX03Uul2rSPjn9qf4DeKP2EPin4d034R\/GnRPiXD4u+Hy\/EDRvF\/gYjafD1pqF1Z3UV7HILiL7XbMhlntuLm2Fo32m3tnBRv6nySrw\/xNi5YLNvqGa4HE5fgV7alW9thata1SGHqU6sJRmpVKdP2bg5RlF6SbuqZ56TpZjCVGNWP1nD1oOnVi4TUsJNSaam3eShOe6bstG27Gz+xt8Rv2of2mPi3p3hrSfHuu6nplnNb3niS\/vtt1Da2kj7Y7aP5FEdxdlXRNoULGsshTgBvkPGqh4U+FvBeMznMckweGxEoVKWXUqM5Up1a0IpupK8m5U6V4yldyu2lqm3Dd4eni5LnjJtPSSk3zN7JJKKStvZ6bO17y+4P+CiHwL0z9nLVvBN38PBd6H46\/ajjHgr4meGPDqOlp4x8P8Ah6+0fxA8z6dbkh7+91m0063fy4We4bzARull3\/w\/4I+MtPxiqcQ5TWxEcRkHBFfB43DYrEVP+RbicVXrYeNGvXsl7OhQjiMTBVLuEYc8pUk4I4uJaNbD4bCYd39ri6qowSjedSnOMVKLbs56WilzNfDeStFHGa58d\/h7+098Cfh5qPh7S4fDnxb+GuiW3gDx\/wCFRarZ3qXOiFraO7ey+Rvs91DEs6Myhop2ngk2OhSv6A4vwFTKsxw9alFVctxlGFXB4uhaVCvTtzKcasVJN8rs1FvmS5lePw+dUbpU40kn+7vTjJqzcVeMYyW6mk0nBt7c6bTUT5Cfw\/e+IjNp01s\/2rS9RgnWGRSpMV2kiyoeSwQy2kIzgDLc5zXDlXEGHyypOOKqqnTxUOVSbslOn853ahN9L6XtKyjDxMfQ+swgknKdNttxVrxadk9Xpzq2q1emnNY6DwJ+yh8Xv2vvF2jfDH4TWU0+jWC3mr+J9akkh07QLCHSbqez1LXNe1y\/eDTLHQtOlUW9jPczkXU8hk06C9uJoYV+yr8Z4PhvD47OsVQjXqww8XQoKUXKlSqQoTjzRhKdVVqsasPaU48072pylQUZszy3JKtXESoW9laMJV6k1KMlaUtPe+yrT3erc5JK0ebwv9tv9jnwz+x\/4t8K+Eb\/AONfw+8feL9XjebX\/D3gDVb\/AMQ3\/g202Ry2Vzrxn0jSrNY9QLyi2SC8luz5XmfZRbsk8\/R4feI2beIuHzPGU+F82yjLcBW+r4bG5zl1bLMPmtTmlCqsunUqzq1I0rJqo8PGk02nVXLynfmmW4bAKnCGNp1Z8z5oRk51KcX7ylLSEdX7vJdSu1y2+I7v9ley+I\/wX17SPjT8JfGWm+LvDM8celeP9A0C5u7TU73wzPMpv7K\/0e9hiaS907DX1oAGuIpIyYFZXff8\/wCJ+Q5Rxtw\/mHDef5Uo4rkqV8orYpKdKhj4U5KnKNenK\/sKz5aNWycJRlepJcrYZfGvg5xxmDxCqwTtVp0041PZvWcGpbtL95b3tdYpWtH9Z\/2u\/wBvDT\/FP7J3hj9jvxlHPqFzrfxY8MeKvDnxA0ieHUEh8ISa9Bqc631usiywalpVvLOIokH+kKIYwyur7fO8FcszTh3w4wnDWJySOUzybGZtj6OGqVHP2jxka81RhJqXuOrNqPIuX2btqow5f0DLcyp4qhip06nt6jg6EZJpKfJ+9hGekkpRTcGuu7trGPY\/FTw18H9W8L+FtW8OfHC98T3ng+xtBp+teLfDtlpNwbeO1R2099URbK6vbBSD5MdxCzQtueJokbL+Dg8ujjsJVw2LhTw9aeNr8tGVGnQnTp1dXUjWU5yqQUnJKNVyb5bSpKznD4nFVFL3pc\/NzSk1y605X1StC\/LpbSMls3Zu0vzo+N\/gaTwl4l8G\/EPTtNubLw18TdPjvZrF4xBatfxTG2u7+xVvlNlqipFqEBwA0jvjbuKL+gcM4jEU8FVwOPqRq4vKakaf1qScljcDVjJ4Wq5e+3NeyqYeTavzUkrXlOZ8nxJg6NWNKqqXJUqUpudus6btzNKLb5uaN1yStzaW5Vy\/oP8AsT6R8PdUvfEGneKYtPuLu00m1u9Bt9WnEKxPc+bEfMiX5Lm3FxIgJ+ZrXbgrGsqsnxniDWxcc4ofU69XLcpxmCwjnWorlhPGRvTqu6VqU6kFT5mpQ5\/4jcpRnGX0Xh\/Upyy6th5uNatQq1J0qdR3lCnOfM7Rs+aHM5csW01pa9z8k\/2uNI0T4WfHPxb4J8Ca5F4nv9X8RHUfEt9p0qXUVnf3K7hoySwhowIDOWNqrYtQiRHB4b7rJ8BHOMjoTqunLD4ajCnBufP7aFJtSrSqy1qX5VzSavOUm1azPZxOHvUqRpyUqnP78YpLl1+HTRWvdr3bW2W8vQLnRfB1h8NNA8MeJ9JEerauylby3gT+0Yrq5GVkAVQzhY\/kI+Yk8kNkMnjwrVsHjsRisDV5qVP9xHDr+FKKVuV68uur5rR5d1d80Zc1XDRhSjTspTnsr8rTvr0srbXfNy8ydlb3vEPjX8M\/CPhS00nQ7U3Z1XxFaM0ENzEY32C3yHn3MCPOZMxghcE8h9xWvreBM7zWvWxLxHJLAYera6ld0lOWsVd6xg31a5U7e7bmjhDBOklf+Ik3NPtrttrs7qTurXUXeR+bV5pj6ff3tp\/q3tpWVDz5ihXynuGU4wcoVPUHB2fs9WkqkEopcs1dSb0fNHms73upLa7fM+yuZ8kr2jZXat6Lpvo907Wuumyl9xfC\/wAS3\/jjwloxvrsyalokh0uUsDvKwr\/o80pwuWMTYJ3PkAHcuDu\/n7iDDx4ZzvEywkHCli4wxNOCk4pylOSnClGzWrXeTW7tdHh5lgp1K8XB6yVn1vbTbpfRapb7uz5ta68f\/D3SfFdrr\/j9l1PS\/ChuLfwt4cgKyzXV86iK51e4tt4d2kZWhshjiEGQAGUsn0WV4TGYGnH6rgsRXzbNYwq5jXhZQwtJrmp0J1ZzSSirOpo25v4fd9\/6TLcNRynDqMYe1xNTVu+tO61fKk+XlTsndpO7s73Pn7xx8TPDOveLrO78ER3Xw3tNTune4utXvRc3VxNK+POttKg81rfBJKvO\/Xg5AK199SyCvUwNSriqU8ZCnT5p01GPKklrFVPeXLunyybb0967iehPB4mqk3F04SjzcrfO2papu9nHpdc3m+RxUz3TQfAfhBNOe\/t9RvPEHiC\/Ed1d654kMs\/2iaP5oXtrVy0ECwszeQ3zPEGPlhSzhvNyni6OS4unLC5dgnSwknBYWpDljF7NXUZOV4r3nL4mrNv4Y4VaUJU3Tp3pS15pbzXMvi+za6192ckkrX99ey+uJ\/2p\/G3ij4ZL8J\/H9lbatNpdlb6NoniK5k\/tGK90O2l8yHS9ThmjFyt1ZEZ07UIrh5Ag8lsrvZvjOOc6ji8xqcQ5JllHLY1qV8yy3D1V9XqVlK\/1zC01GnChKzl7Smko3bavdxjxOniYUpQnU9pFSbu9ZKK2Td1zSvZvWd\/Np8vxnrdpLplqg1fTjcW91ltMuoQI7i22yNjeylknhHAPm\/OMcZJYp8jhM7wmfqtRhOnPFYTmWIm\/dqOLVpKPWW91\/Py6KFrR5JXdpXV1q+rkunmntbprrFXfLpeCNcvdG1bS9e0jULq11vT7mOTT5VfAiKnb8yhsMWQnd+8wwPRsOF8bC5ljuGM8wma4Fxw9XLcVTxlHELSXNTleUWkvhnG8HC8dHa+twpQhVhKLcrvm5bu75VpbW8Wm1tbp7t7WP158PftD\/CP4IfArQn1jxbY3Go22jXGs39skqG\/v9Y1O6uLy7xAC0nmyXkroAUGdvoua\/wBN+G+Ncgr8I5XnMcww9WOJwUcZWVKfNKWJq81StTVOLlPm9vKpHk9mpadLpx4p0qkqipQhK\/u042WiioxSb1srLf3lq9U7JR\/KT4hftpeHPir41i1vx5Yarrmn6JcrceD\/AIa6Kj3C3d1vLxX+uvHmEPGuPLjlLBD843uRXysuKaWd1pY3M6ValgcJU5sJl1NOc8ROMvdrVtXG6V+WOnLa0eaep6mGyyrGrCMXCpiJ3j7Rt8lKLWrVuZNtu1+WTvvypOMu\/k+O\/wAc\/i3bpfS+DLH4ffBAWs\/h3XbTULZTc6rY6zBLpcdrbGRBHCVlmidJY1LJt3BhlTXBx9mGd8R8K4t4TBTyvLsFXy\/E05O\/tKlbDYujVpU0kqa9nNrlcKd+faT\/AJrq4Wjl8a0sRiPrGJqUakIQpvaUoylG9m\/tR1+FWdrLXn\/\/0vyr\/bZ+B3xF+FPivQPE3jTw5rWiS+O7DzppNatVt5L69s40X7WEVsRfabMQOIpSZt0Du8aAgv8A5yeDXFnBmdZFPK+Dc4oZrlmRYmpQpOhUdT6qqlR1KuGXMnLkpVJS9m7yg4ytGUrF8QZFiMqjhZ1Y1IxqxcOepZyvGPup6Qiv3d7Jq+jva\/ufHWim6mvII7cbwHYMig\/vJGCqiBFypy3PzJn65DV+zYmrH2U6julyLeyUYpzbk3tFOye3zjzOR8rKFrW1fNZJre7780rSfmr3u7u0YH9HP\/BPz42\/sq\/sj\/ATxt4n+I0Ufij42+Ib+O1j8I6KEv8AxLrtrBbJcafpEbMiWehaBaXTsby9vp0Se48x8XMqW8Kf5QfSq8MvHX6QnipwzkHBlOrlfhzk+CU1nuYc2DyTAY3EVZwx2P64jNM0r0qcKdHDYWnXlQpckX7CM69ef65wdj8m4Wy3EVsZGFbM8VKPPTjSjUr1IxipU6MJS9pGlShKXNNtx5p7ybinLT1z9vf4d+PNPgm8bfDTwX4W1XxDc6vY2mh2+kR38nh+GPM+k6hNqciw3V0JVKQ3t3+4g3vIVgt2iR3\/AH\/ww+ivhvDrIPqWG4j4kz\/N+SLxeb1M5zLA8lXVqWEyyjip5XSpRlKSdCvQxcp0\/wCJUnJOQ8VxfmGPc60aGXUKUJqMMNPCUKnMn1lV9nGo5x3k4zilZKCaXMfmp+0R43sPFni\/wXIPDOhHw\/4avF8ZQ+JNJ1S7s4ta+GesXdloXxD8PXtrctdNCYtG1FtUub21v91rBpN9L9kHkb0\/VPB6WcUln2ExeY1P7aweKxOR4zCVcPChUpZlg6lWeXY2NWlyU2quIoSipzwqUo16blNp8x4+IzeOZ4JVqmGhh8XlWLhVnUwkqmuH1p4iPsZyqTtKk07e1cG42UIyaZ+hFh+0r+zv\/wAE0Pi944+EWh\/sP+O\/Ces6XqGm30uryfEfTdRbxPo97pttdaN4gglvNKe1m0zVLGWO40y5sNTvLOaCQSRyu5k2njn4UZ54+8PYDDYrjPFZBjsPTVKpQx+EVZUU5\/7RT9jhKkYucnzOFVOcWvZzpylBpSyq53Sy\/G1KSwVKrGnyyoVKM5+zxFKpFVKdZP2bsqkbPdOErx+JTR8n\/tWf8FMPD3xu\/aX\/AGZPjrY\/DHxB4e0r4DjUtUk8EanrelX8mreIpNQF9aPaarbW\/kx2JW205LmS6sRNAyyiK2mzE9fB+C30TsP4UcH+IfC+VcVYfE4njb6sq2b1KGInPC06eExOHcvqtScZVpqeJq1Ix+sRU3yt8tpc3k5hm8s3xWBxUoqn9QqSrSo893NJpxcWldyvD4bRstE5Xl7L4N8VftAXfiX4\/wDiz9oDwv4T0j4d6x4smkn1Xw74bea58M3LToRNPqFjci3S5urhgJ7iWFLKNp8yRwoT8\/8AR+V8LYfhzhHL+EMXjK+d4HAU+Snise4UcVDqvqvK6nsqUG3GnSc52j7vOryhDzcdmk605VJU4JVLc\/s7QnK209ZRu9435U2ldxlvL9Jv2QP2RviV+3zqum\/EzX\/HFn8KPhxomr6ZoGqReD5p7W\/1\/R7XWbT\/AIWH4n10STL9ls7PRpn0vRNNmedb3WZoyoa3BMv5TnOb8M8J42rlCyyeYOUnmeZZlmtOnVhkmXwSjh\/qMuWNN1faSTlWvFpzjScJOT5dsow0sTT+uOtUpQdSpCH\/AC7cuWWvu81pKLVr35XyuyjZn27+3p+2vpn7Nek+JP2a\/wBh\/wCBN34ShtNP0\/QvEHxI0\/wzeXek2K2NtNBaXL6j9muYvGvi6ytLiSRdTvJJ9B0TULy6kt47u\/R\/snxPhfk+XcaY+pxBnfFWBhk+Kx9avgcmhmtKOLxVKnivcgqcq3tMFglKCjWq2hjMx5JVY\/VsHKlzetm2NxSlKlgsDiJzcYxniY0HNWStFurFP2krN2u+WDfuqV5Sl\/K348uNZ1rWJdX16\/1PVde1C+mudX1DWnuZtQu7uRT58txNcBp5ZNy7SXZtoRNgChEb+3oUsPTwlKlhFShhadJQpQw0YKnTgnFxVJxvGyTbutZPRqV3Kfx9WNR+0VRVOe6cnU+K60V72eySteKW+luWXX\/DbxR4v8B3x1zwrq15plxAUeWKI7rS+jT53gvLZsw3ETISn71WZFLeW+\/5k+bzHD4fFxVHEU6dWFSVoza\/e0ZvWDVnzRTs17vuyt71rcpz0Z1sPUVSlU5L8qfKm7t62kldu6el+XTVJN8p9zr4a0j4yaR4Y8feHo00bxHpF\/b65rfhQSKbO9VJs3v9lyHy3tvte2WS2Uo0HmE27LA5DV8FXzOvkVXEZdjJynhKlKph8NjHTk5Ye8ZKlzXV5xpOSbg5O0NY88YxhH7nKMTTw8FVdFUqWKnOpP2SfL7W3JUna1ldtSknrrzKUryZ\/RN+y3\/wTGv\/ANpvwho\/xG+KXgzxF8EvAsdpbXmnDVra2l8W+LbXyVltrnSNDndXgsLhljlF\/qsUEU8JP2WK5RtzfnPCnBnHlbF5pjs1zXBrh\/2derh8T7CVTHYqrOU\/ZQweEaguRxTf1irN0UopqpNpc6xdXAKlP9zNYjmly+8rNX+PXVuy0376JLm47\/go\/wDsd6r8PPhv4X1zUPEtp4qGq3Gsab4fnTRrzQ7vRrPw\/bWn9hWl9Yf2jfaMLie2jYzTaBBpttNMpmu7MTuTX3WGwlbA4nKo4qvGUM7wNbCWUHh6iq5fU56LqQlz01J061afLSlOOlS\/LzWh8hmsKksFSxUnGpChiLVFGHvqnWVruV7ScZRhZqMbO176OP4tSeJ9TtdB0rXNPN1Y6poPl2l5dWU8ttPHDJItk0TGKRWSVZ5Yju3fOjEFFwTXRgMLDMo4rLMYoV6dFSfLiaalaMp8qTbg+aHu+7bkcZN2vzJw+NVavluKjisNUqUqkX8dKo\/5\/dT2tdt8yfMna1tZo8nufCXg1E\/4TfTri\/bxFZ6\/Bqt7bXckt2NSW5uA19JJI4aRZ42dp5Wm3K6b5jKwR0X08PluKy+E8DShFYCvS9lFQdlhko3Xs\/einTsrJW93q1eEz7Th3OlUxDjVk5VKrlOalrKUneTtvzO70vLXpe8Yz+iL3UfD\/iL4oeDZwLTxDDZaXb3z2GnXcLLbXUsHzQxSq3ky3VtHsYnO2NpfLYq6lq\/J+I8ux+UYXGYv+0Pq2HpNqrzqSi+bvO1rP4PhlrqlG95fV06scfjYVaUHFRdoxcXF8y+J299Jaq1+b1je0vlD9tX4gf298TdE0y00ifSY\/CujQxwJdXkVxqF\/9sfMst1LaB0tlg8jy4YixkCFpGlO9Y1+\/wDB69bIsXmDm68cxrOkuWE1Rpwo6NpzhS551edNuC5YpJXlbnn0Y5f7TGFOLnW5fgjHpLS87KVrW\/5+NtaqUbTUvjX4gaPFJPpniO1CPBq0CSSRqMokmdksTHgZSQMfur97Jf5q\/e8vrOvg\/Zyup0l7J66rkXuu7jLSUbbtc1rK17x8TFUqmHlKE4qPK7pRst7O6vayS2vJrW65bKJ3\/wANru90cx2ejXcMVt4lcWV6xthLdafdPEY47m3OVRWIPlh2VlzszyFdfzzP8PhJ46GPzLByrYjKIzrYNe1SpYhN6QnHVT5WlKMeXdayltLPBVoxqxlOnGro2lKXM4zilZ6aPu9Frs3rze4+BP2fL\/xDNqlh4M8H3XiLxXcs1vb6hcq97L9sn+VHmup1IhXe27EaE7RhFQBdvwOc+IkaNWjiM3zGllOV0p+1rQpOKqTpwu3FJOPNJ\/C+VJS1UpSblze5g6dfHV+XkUU3duMeVJqz96Tk3J+vKlZaSvJn2b8Ov+CGmvxeGZvH3xd8SX0utzRNqTaRYkwWsEsh8\/Esz5nlWJmwFDIMAZK7cN8bnX0vPreMjlnCmUwp5fCSw8cVivfrVY\/A5KEfdjzJXbcZr\/FZOP3uHwGHhFKpK\/u2UVayvZO0mru2iSfJ5Nbx+dfin8N73w9r2m+D\/AQk1eLwpHeLr0tiBcxWCWULSNHfXKgrG6py0btu+ZSQMlV\/avDP+xuJsnzPH8V1IZXVzGMf7Pxc\/wB1VlUqT92VKnaMqsHLR+4tNE+VXPnMyy2NOtWdKnzxcV7u1ubVNSezsk7pteunLj\/A\/wAAeOf2hNE8XeI\/h14Wv9a07wMSutyxxlMXKH5obEnH2iUY3eWmegAZcgV8dn2RZ5lGN+pxpPMMPXnUhTnhvflPD83LGtODStFrpK99XzXcoz+Xnh63LVqJr2dObgrtXnZXko6d7\/5yvHlq6p4Yv0sXstRtLq3ndpLd0vIpIpbJycywtHImUfK8D724ZJVwdv5PmmCzPhrNvaYnA4rBRfJVpRrUZ0Y11dOHvyjyz5btb7WacknI8yUIzi1Tlfnck9bNW3utWne32Z287Ny8Fv8ASZ9D1OVl88WaMqxOWYAuOoDFg2MY3EFOeBkbhX19LHQzfL4ylGE8TLmnVSipSvKzXNBJXd0+ROTXV3vyx5481OcpSTfPU5Uk\/ddr6bXTUUtk7btttIl1j4U6\/wDG6XR9A8NXdva+I5Z47eEzzZWbTs5mzK2xTJCpaZM4ZV3Aclg\/6Z4M4\/F1uIaXCcIuVLMZSnh5VL040sRF3cVG3wNWaik+r1SR30qqheU3yU7av4rOOvM78nM91vZvVt2jz\/o58G\/2TfBfwVewmOm6Rq13FoscWqajeQLd3V9rMpDXUkfneb5cKH5UYEH5SQAhC1\/fuScHYfKqtOrUVKvL2KVb2i5\/3t72je8bRVkm1zet3zcmJzVzp1KVHnp3lFQatFyjZXnUlZNOW9kpaa3SUYz9A+Jllpmu+E9W8NvDFbWVzalIlgjSJbWaFxLbyxIIgqtHKiSAjd0ySMnd9FmuV4fMsrxOW1IKFHEUpR9xRj7OUfepzitrwmlJadHHSx5HO5ycpScpO75m25cye\/NeyWkk1pbfSylL\/9P+hrxr\/wAG9P7FnxJkM3xF+Kv7YnjyUNI8Uni\/48xeITbyStueW1XVPBVyltIcEFoQhKsykFSqN+P5L4F+G3Da5eHshw+RQdlOGU0MFgI1Uo8qVX6vg4Sq2jbWbk09btlYqpXxqti8Tia6TbSq1p1Em+qjOUop6vVR2bT5rtx5fw\/\/AMG1n\/BOfw3qVlqunah+0O9xY3MN3Cl58TPD9zbSTQSebD58LeAdsqJJtPlnarbQsm5Rhfbxfhjw3jcNWwtaeZqlXhOlP2WLhCfJNck1Gf1e8eaPX3pJaxldXOKODoxlGS5vcmpxTeiad19hO1+nN6SX2fQtO\/4N9P2BdMaeSCb44SXF1dyXk91P8QdFkuHmk+9lh4LRVTsqIgCjgAAms\/8AiFfCyjRpx\/tGNPD0oUaVOOKpqMIQVo\/8uFJv+829em53VJuo+aSSdraJaW6pO+t9d99dbIpaz\/wb1fsEa7eW1\/fan8fhcWjBoDB8SNEjVRggoUPgdldHB2urJh14Ocnbth\/DLhvDKpGm8x5aqcZqWLpyTT\/7lk09dLN2I+y4XbUu7d16btWv0t262Mu8\/wCDdT9gC+0600qXVv2hRY2K6rDaQR\/EvQlEFnrUV1BqenKf+EFP+g3MN5dRPbtvHlzyJuKYFeNS8FOCaOb4\/O6MM0o4\/M44ZY2pTxtNQq1MIoKjiOT6rpiEqVLmqKS53G71c3JUUqDxDhviYclVS1UlytN7XU31ez3srOMvpr4hf8Egf2SPir4T8J+EviC3xQ8Uw+Dvh1pXwu0vXdT8X6bN4om8MaFYwWOim\/1r\/hGVmudS0o263VleJHAsV1LcSeS0M8kFeDjPo8cF4zOaWef2vxlhsXRxSxUKWGz6nDB6ylKeGlhp5fVhPC1FJwnSlJtwtGNSHKmaxqNYJ4CUYTo2pqMpxTrU1SUlFU6qfNBNS1ivddk7J35vjqf\/AINov+CclyHWbUf2i33Etvb4oaAZAT3Dt8PyR6nGeRyDli\/3FPwz4bpSUqbzGLVr2xUFzWVve\/c2lpe993r7rSZ58MDRpyTg6kWtNJKz2391N\/8AgX37j4f+Dab\/AIJzQRtFHqH7RAR1Kkf8LP0HgewHw\/xnnjIbHvwy4Yvws4XxsUqzzLRxalDFwUvcd0+Z4du1\/Tmvd81+SWNXKsNVblKVVPX4Zx669YXt967pXPoXwL\/wQ+\/Y1+G2k6ZovgzWfjno1hpawiOK3+ImmKt3LFszc6jEvhIW97dTMitPNLb7nIAGFC7Pi89+jb4ZcTUcVh89wmaZjRxkXCrTxGMoTSi3dKk\/qXNS5JWnT5GnTmueLU7TPQowjQpU6ML8tKPLBvWS1vzdFdttvlUVd36tT+x7D9iX4Q2GkW2irfeMLm2tYlhWa9vvD1xdzxqu0i4n\/wCEYTeZF+WQqkZIzjGSW\/mz\/imN9GyGZVs1wuK8UMvxVac5Xy7jiWDjS5nflpezyv2ijF7RlUltqndOP0NDibNsNRjRo1qUYxtq6FKUrLZNuK0S02u1omrzPkH4y\/8ABD39gv46G6m8c+EPF6X91lv7V8P69pOh6nbTYI+0W93Z+HCwk65jmWW2fcQ9u44r+juB\/o5cI8BYejhcp4m4\/wAdQou0aed8QYTMYunonSmv7Iw\/PBpP3pfvVf3a8G0zzsbj6mYKSxdHDVXUVpVFS5Ki00lGUHFqS0trGOmqldxl896Z\/wAG1\/8AwTo0kSra3v7QjJMGVln+JmhSKAVZTtz4BBXIPXkgjIxkV95iPDDhvFVadarLMuelbl5MXCMZWlzx54rDtScXdJtR0b0fNyx8N5dh20\/3l009JJJ22urJPfv5andeE\/8Ag3z\/AGDfBl9pt\/ompfHpJNNsZtPiiuPiRo01tPazyebItzCPBUYlPmYZWDrsK8AcbuHNPB7hDN6NahjHmjjXqRqt08ZSjOE4x5f3cnhXypxumne9+lrHpwqyp4ZYWKXs4yUot3c01fad+t7O6d1\/La8v2F0T4Z6BoHhfwv4SsrnWJNP8J+H9J8Nadc3d8k2pXGn6Np0GmWrahdC2jS5upLa3Rri4WGLzJi7iNd3y+m\/DXhv2GFw0Vj6ccJh6eGpzhiYqpVpU6SpL27dK1RuCXM0oJy1UYOS5uWdGM7czk7LlXvNWSVrfdZdNNu0vKPj5+yX8Iv2kPDOi+FviNaa6NP8AD179s0ifw\/qselX1q0lt9luIhMbK4imt7qIRvPHPbybpoYpVaJ1315Wf+DfB\/EX9kvGPNsPPJJueX1MBjoYacL04wqQnfD1YVIVfZ051FKHNKcFaSjKcJt0qcqdSjKPPSqw5JQk21ZKyts+Zb817t66NI\/PnUP8Agg\/+w5qFtqdq9x8arePVtRg1S8+yePdIiZriB5ZFSPPg9444Hlk82SMREs6REFNpR9sP4RcJ4edSpB5o5VYqM3PGUm+VbJNYZbPXeXXRW5jyKmQYCrFRm67S5VpUim1Hv7mt1pLe60XeLPD3\/BBz9hzwzdz3+nXXxra8m02802Oe78faNObRb6MwS3dov\/CGRxpfJbvLBBcSLMIFld44mmCSJ24jwz4axOG+qVXmDpXUrLEwu2rpXk8Nqle\/L7qbSb2sa5dkuDyvE\/W8L7ZV1TnTjOdRP2fPZSnBKEbVOVOCnvCMnypNxZHqf\/BBj9hvUb3TdWhvPjbo2u6ZDPBHruhePNB03ULhLkSCRrtI\/A7adLLhz++jsYpnP7yWR5Gd2+exfgVwJmFGeGx9PNcbhZzp1HhsRjoSo81KXNFJLDKSi3ZuDlKKtZJXkpeyqklKM4vkqRTTnBcsql\/tTtaPOlpzR5W1rO8nc8i1D\/g2w\/4J4avfXOpatrf7SWp6heS+dd3V78VNEmmuWHTzZP8AhAkYqOgQMiAYGNp2V9JhfDbhnA0KWEwdHE4bC0IqFGjRqUYU6aX8sFQjrb7Tbb6p297qpY6tRT5I07v4pSi3OXrLmvpfpy+e1zU1L\/g3B\/4J2anpNrosjfHe3s7MN5X2T4kaLHKWdgzO7yeCJlZiRn7ijnkf3urC8BZJhZ15wqZhOVdxclVxNOUYOKaXs0sPS5U1vq728nI5a85YmU51m5ymuVt9IraK8lf8Fq9o5+mf8G2X\/BO3SLiK5stS\/aISSJomXd8TdBZS0Th0LL\/wgWMqRxtIyOD6LhjfDjhzMKfs8SsdKN27xxEE9VZq\/sFdeT9enJHmhQhTso3spcyTtbe7Xw6K+6Sj66I+xfg1\/wAEkf2S\/gZfHUfBsPxEurprgXDP4h8T6ZqYMvyjdiHw3ZdlHbjqG\/hr8l4q+il4Y8YKMc1xPFlOEbWhgc5w2Hjp0alltV2d9e9tbHrUcyr4f+DCjDS2lN93r8b11727RVj2X4xfsI\/CT40eDtT8E634o+KfhXSNVtmtLq48BeLNO8PaosEilJUt9Qk8P30luZIyUZ40WRQxMbK5Dr5HDf0NfBvhnMcPmWGpcS5hUw1T2lPD5tm+GxeEco25faUIZZh\/aJNc3LKTi3umnc6JZ5jpWvKmkuymv\/br\/irbrb3vmDwt\/wAES\/2I\/BXw41z4Z+HtO+JlppniGwu9P1HX5PGdnd+LWS+V1ubmPWbjw9KDeyeY0jXM1pO7yfO\/zc1+iY3wI4NzHNqGb4rHcSyr4WpTqUMNTzSjTwEVS+CksLDAxiqMUuT2cZwtHRNWUpRUzjGVIcj9lZqzkoNSt6uUvPa3k1vHqfgB\/wAEgP2S\/wBmf4Y6r8KvhVP8UtM0PW76XUNS1fUPFuj6h4muZ5RtO7Uz4Ujh2gZKD7GrKWOGGFK\/bUuAuH6eb4TOZU8VWr4OChSw9avfBy5XdSqUoU6VSb0t\/FUGtHGzsebVqTrUfYN8kb707Rl68zvq7b8if3RUOa8W\/wDBFT9jHxrY3Flro+KzvczC4l1C28Y6RDqRmDbzJ9rPhSRiztkyF0bcSc7cru9\/jLIsm47yarkef5XgZ4WcYKnXwuHp4fG4Z037ksNiX7R05Rsre5KPdS3PKoZXQw1T2tOpiHJ7qda8Zf4lytvfq\/S1jxrVP+DeL9gDWIvJvLr48GM9fL+I2iI3PXJ\/4Qgjv0x1A5ONrfkGA+j1wFlsnLDVM\/Tk03z5lRmnbo\/9i2t6fL3UdsqMJb33vo7f\/JbfK\/dWSizw1\/wbwfsDeEta0vXtF1b9oOC\/0i6iu7Qv8S9DeIyxfwyqPAqM0TrlXQOm4FhuXI3fQ5V4QcKZLm2CzrL6ucUsfgMRHE4eo8bTcY1IO9pR+qrmhNXhOPu80HZuV4ol4eDjytyabd17vVWt2aXb8XtH6Cu\/+COn7I95nzr34uc9dnjXS14OeMHws3HXHf1JxX7f\/rBj97UL3v8Aw5f\/ACf\/ALb9+xzf2Zhv+nmv9\/8A4e33\/fa5yt\/\/AMEQ\/wBjHUUdLi++M4VwQ3l+O9IXOR7+ESP5e\/XFD4hzB30w+u9qT1T3+3poun6c0ksrwy61en27bfevw++5\/9T+\/igAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAP\/9X+\/igAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAP\/9b+\/igAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAP\/9f+\/igAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAP\/9D+\/igAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAP\/9H+\/igAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAP\/9L+\/igAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAP\/9P+\/igAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAP\/9k=&quot;,&#xd;
    &quot;extension&quot; : &quot;.jpeg&quot;&#xd;
  },&#xd;
  &quot;last_name&quot; : &quot;Duoc Invite&quot;,&#xd;
  &quot;address2&quot; : &quot;Nha Trang&quot;,&#xd;
  &quot;first_name&quot; : &quot;Khach&quot;,&#xd;
  &quot;work_phone&quot; : &quot;123456789&quot;,&#xd;
  &quot;postal&quot; : &quot;6996&quot;,&#xd;
  &quot;dob&quot; : &quot;2000-12-12&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mobile-responses/v1/gateways/userProfile?user_id=${USER_ID}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="update time section when upload report" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;move_too_fast&quot; : {&#xd;
    &quot;time&quot; : &quot;0&quot;,&#xd;
    &quot;step&quot; : &quot;Inspection Preparation&quot;&#xd;
  },&#xd;
  &quot;inspector_id&quot; : &quot;${USER_ID}&quot;,&#xd;
  &quot;time_summary&quot; : {&#xd;
    &quot;excess_time&quot; : &quot;0&quot;,&#xd;
    &quot;start_time&quot; : &quot;1505878632000&quot;,&#xd;
    &quot;step&quot; : &quot;Inspection Preparation&quot;,&#xd;
    &quot;end_time&quot; : &quot;1506410419000&quot;,&#xd;
    &quot;total_time&quot; : &quot;100&quot;&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mobile-responses/v1/1254/gateways/monitoring?inspection_id=${INSPECTION_ID}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">get inspection_id from API &quot;update assignment&quot; first</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="update monitoring logs" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;date&quot; : &quot;1506408427425&quot;,&#xd;
  &quot;inspector_id&quot; : &quot;${USER_ID}&quot;,&#xd;
  &quot;message&quot; : &quot;Generate inspection data for 21_17_Boot,Boot_DUPRO_Factory Org 1_Copy4 to start the inspection. iPhone model: Simulator - 74.62 GB free storage - 223.47 GB total storage. App version: 1.1.2, Build version: 1. iOS version: 10.3&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mobile-responses/v1/1254/gateways/monitoring/logs?inspection_id=${INSPECTION_ID}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">get inspection_id from API &quot;update assignment&quot; first</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change password (NOT WORKED)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;old_password&quot;: &quot;be8941a749efb2cf6a7b5b632fdf74b58be17b9d3049b833dfa9e52414f1ce787b380cea0e960d8035f971faf29bdc97188d42726e14ff76a63be42ca30352f3&quot;,&#xd;
  &quot;password&quot;: &quot;3c9909afec25354d551dae21590bb26e38d53f2173b8d3dc3eee4c047e7ab1c1eb8b85103e3be7ba613b31bb5c9c36214dc9f14a42fd7a2fdb84856bca5c44c2&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/changePassword</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">encode = SHA512</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Workflow" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post (create new) - special attention points - 1st" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;description&quot; : &quot;Quality 1&quot;,&#xd;
    &quot;group&quot; : &quot;quality&quot;,&#xd;
    &quot;pictures&quot; : [&#xd;
      &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/99782c18-9db4-11e7-b68f-0242ac110017\/5_0_0_1506417539.jpg&quot;,&#xd;
      &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/99782c18-9db4-11e7-b68f-0242ac110017\/5_0_1_1506417539.jpg&quot;&#xd;
    ]&#xd;
  }&#xd;
]  </stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/special_attention_point?inspection_id=${INSPECTION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get inspection_id from API &quot;update assignment&quot; first</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract special point id" enabled="true">
              <stringProp name="VAR">ATTENTION_ID</stringProp>
              <stringProp name="JSONPATH">$.data[0].attentionId</stringProp>
              <stringProp name="DEFAULT">NOT_MATCH</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract pictures" enabled="true">
              <stringProp name="VAR">PICTURES</stringProp>
              <stringProp name="JSONPATH">$.data[0].pictures</stringProp>
              <stringProp name="DEFAULT">NOT_MATCH</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract group" enabled="true">
              <stringProp name="VAR">GROUP</stringProp>
              <stringProp name="JSONPATH">$.data[0].group</stringProp>
              <stringProp name="DEFAULT">NOT_MATCH</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract description" enabled="true">
              <stringProp name="VAR">DESCRIPTION</stringProp>
              <stringProp name="JSONPATH">$.data[0].description</stringProp>
              <stringProp name="DEFAULT">NOT_MATCH</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="put (edit) - special attention points - 2nd" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
      &quot;attentionId&quot;: &quot;${SPECIAL_POINT_ID}&quot;,&#xd;
      &quot;group&quot;: &quot;quality&quot;,&#xd;
      &quot;description&quot;: &quot;Quality 1&quot;,&#xd;
      &quot;organizationId&quot;: &quot;${ORG_ID}&quot;,&#xd;
      &quot;inspectionId&quot;: &quot;${INSPECTION_ID}&quot;,&#xd;
      &quot;pictures&quot;: [&#xd;
        &quot;https://s3.amazonaws.com/inspectorio-files-upload-staging/organization_1254/images/99782c18-9db4-11e7-b68f-0242ac110017/5_0_0_1506417539.jpg&quot;,&#xd;
        &quot;https://s3.amazonaws.com/inspectorio-files-upload-staging/organization_1254/images/99782c18-9db4-11e7-b68f-0242ac110017/5_0_1_1506417539.jpg&quot;&#xd;
      ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/special_attention_point?inspection_id=${INSPECTION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get inspection_id from API &quot;update assignment&quot; first</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="delete - special attention points - 3rd (NOT RUN)" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;description&quot;: &quot;${DESCRIPTION}&quot;,&#xd;
	&quot;attentionId&quot;: &quot;${ATTENTION_ID}&quot;,&#xd;
	&quot;pictures&quot;: ${PICTURES},&#xd;
	&quot;group&quot;: &quot;${GROUP}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/special_attention_point?inspection_id=${INSPECTION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get inspection_id from API &quot;update assignment&quot; first</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post Sample Selection - OK" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;totalInspectionQuantity&quot;: &quot;52241&quot;,&#xd;
	&quot;sampleSelection&quot;: &quot;125&quot;,&#xd;
	&quot;sampleSize&quot;: &quot;125&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_selected_sample?inspection_id=${INSPECTION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get inspection_id from API &quot;update assignment&quot; first</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post aql standard of workmanship - OK" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;availableQuantity&quot;: &quot;51960&quot;,&#xd;
	&quot;maxAllowed&quot;: {&#xd;
		&quot;major&quot;: &quot;6&quot;,&#xd;
		&quot;critical&quot;: &quot;0&quot;,&#xd;
		&quot;minor&quot;: &quot;6&quot;&#xd;
	},&#xd;
	&quot;minimumSampleSize&quot;: &quot;8&quot;,&#xd;
	&quot;determineValue&quot;: &quot;8&quot;,&#xd;
	&quot;determineType&quot;: &quot;-&quot;,&#xd;
	&quot;totalItems&quot;: &quot;2&quot;,&#xd;
	&quot;aql&quot;: {&#xd;
		&quot;major&quot;: &quot;2.5&quot;,&#xd;
		&quot;minor&quot;: &quot;2.5&quot;,&#xd;
		&quot;critical&quot;: &quot;0.065&quot;&#xd;
	},&#xd;
	&quot;packingType&quot;: &quot;Mix of Solid and Assortment Pack&quot;,&#xd;
	&quot;maximumSampleSize&quot;: &quot;125&quot;,&#xd;
	&quot;noOfDefectiveUnits&quot;: &quot;3&quot;,&#xd;
	&quot;defectFound&quot;: {&#xd;
		&quot;major&quot;: &quot;0&quot;,&#xd;
		&quot;minor&quot;: &quot;0&quot;,&#xd;
		&quot;critical&quot;: &quot;3&quot;&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_standard?inspection_id=${INSPECTION_ID}&amp;group_name=workmanship</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get inspection_id from API &quot;update assignment&quot; first</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post aql standard of Packaging - OK" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;availableQuantity&quot;: &quot;51960&quot;,&#xd;
	&quot;maxAllowed&quot;: {},&#xd;
	&quot;minimumSampleSize&quot;: &quot;8&quot;,&#xd;
	&quot;determineValue&quot;: &quot;8&quot;,&#xd;
	&quot;determineType&quot;: &quot;-&quot;,&#xd;
	&quot;totalItems&quot;: &quot;2&quot;,&#xd;
	&quot;aql&quot;: {&#xd;
		&quot;major&quot;: &quot;2.5&quot;,&#xd;
		&quot;minor&quot;: &quot;2.5&quot;,&#xd;
		&quot;critical&quot;: &quot;0.065&quot;&#xd;
	},&#xd;
	&quot;packingType&quot;: &quot;Mix of Solid and Assortment Pack&quot;,&#xd;
	&quot;maximumSampleSize&quot;: &quot;50&quot;,&#xd;
	&quot;noOfDefectiveUnits&quot;: &quot;2&quot;,&#xd;
	&quot;defectFound&quot;: {&#xd;
		&quot;major&quot;: &quot;0&quot;,&#xd;
		&quot;minor&quot;: &quot;0&quot;,&#xd;
		&quot;critical&quot;: &quot;2&quot;&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_standard?inspection_id=${INSPECTION_ID}&amp;group_name=packaging</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get inspection_id from API &quot;update assignment&quot; first</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post aql standard of Measurement - OK" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;availableQuantity&quot;: &quot;51960&quot;,&#xd;
	&quot;maxAllowed&quot;: {&#xd;
		&quot;major&quot;: &quot;3&quot;,&#xd;
		&quot;minor&quot;: &quot;0&quot;,&#xd;
		&quot;critical&quot;: &quot;0&quot;&#xd;
	},&#xd;
	&quot;minimumSampleSize&quot;: &quot;20&quot;,&#xd;
	&quot;determineValue&quot;: &quot;20&quot;,&#xd;
	&quot;determineType&quot;: &quot;-&quot;,&#xd;
	&quot;totalItems&quot;: &quot;2&quot;,&#xd;
	&quot;aql&quot;: {&#xd;
		&quot;major&quot;: &quot;2.5&quot;,&#xd;
		&quot;minor&quot;: &quot;2.5&quot;,&#xd;
		&quot;critical&quot;: &quot;0.065&quot;&#xd;
	},&#xd;
	&quot;packingType&quot;: &quot;Mix of Solid and Assortment Pack&quot;,&#xd;
	&quot;maximumSampleSize&quot;: &quot;80&quot;,&#xd;
	&quot;noOfDefectiveUnits&quot;: &quot;0&quot;,&#xd;
	&quot;defectFound&quot;: {&#xd;
		&quot;major&quot;: &quot;0&quot;,&#xd;
		&quot;minor&quot;: &quot;0&quot;,&#xd;
		&quot;critical&quot;: &quot;0&quot;&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_standard?inspection_id=${INSPECTION_ID}&amp;group_name=measurement</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get inspection_id from API &quot;update assignment&quot; first</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post info of Measurement - OK" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
	&quot;itemId&quot;: &quot;1457__534397__12M__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;16&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;C16.R-WAIST RIGID\/ELASTIC RELAXED&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;16&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;12M&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14571&quot;,&#xd;
	&quot;tolerance&quot;: &quot;1&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__12M__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;16&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;D16.R-LOW HIP\/SEAT, FROM CB&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;16&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;12M&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14572&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.75&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__12M__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;8.75&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;X01.R-INSEAM LNGTH&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;8.75&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;12M&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14573&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.375&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__18M__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;16.5&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;C16.R-WAIST RIGID\/ELASTIC RELAXED&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;16.5&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;16.5&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;18M&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14571&quot;,&#xd;
	&quot;tolerance&quot;: &quot;1&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__18M__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;17&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;D16.R-LOW HIP\/SEAT, FROM CB&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;17&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;17&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;18M&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14572&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.75&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__18M__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;10.25&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;X01.R-INSEAM LNGTH&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;10.25&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;10.25&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;18M&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14573&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.375&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__2T__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;17&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;C16.R-WAIST RIGID\/ELASTIC RELAXED&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;17&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;17&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE C&quot;,&#xd;
		&quot;value&quot;: &quot;17&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;2T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14571&quot;,&#xd;
	&quot;tolerance&quot;: &quot;1&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__2T__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;18&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;D16.R-LOW HIP\/SEAT, FROM CB&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;18&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;18&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE C&quot;,&#xd;
		&quot;value&quot;: &quot;18&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;2T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14572&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.75&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__2T__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;12.25&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;X01.R-INSEAM LNGTH&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;12.25&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;12.25&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE C&quot;,&#xd;
		&quot;value&quot;: &quot;12.25&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;2T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14573&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.375&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__3T__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;17.5&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;C16.R-WAIST RIGID\/ELASTIC RELAXED&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;17.5&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;17.5&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE C&quot;,&#xd;
		&quot;value&quot;: &quot;17.5&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;3T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14571&quot;,&#xd;
	&quot;tolerance&quot;: &quot;1&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__3T__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;19&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;D16.R-LOW HIP\/SEAT, FROM CB&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;19&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;19&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE C&quot;,&#xd;
		&quot;value&quot;: &quot;19&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;3T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14572&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.75&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__3T__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;14&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;X01.R-INSEAM LNGTH&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;14&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;14&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE C&quot;,&#xd;
		&quot;value&quot;: &quot;14&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;3T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14573&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.375&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__4T__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;18&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;C16.R-WAIST RIGID\/ELASTIC RELAXED&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;18&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;18&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE C&quot;,&#xd;
		&quot;value&quot;: &quot;18&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;4T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14571&quot;,&#xd;
	&quot;tolerance&quot;: &quot;1&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__4T__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;20&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;D16.R-LOW HIP\/SEAT, FROM CB&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;20&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;20&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE C&quot;,&#xd;
		&quot;value&quot;: &quot;20&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;4T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14572&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.75&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__4T__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;16.375&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;X01.R-INSEAM LNGTH&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;16.375&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;16.375&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE C&quot;,&#xd;
		&quot;value&quot;: &quot;16.375&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;4T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14573&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.375&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__5T__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;18.5&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;C16.R-WAIST RIGID\/ELASTIC RELAXED&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;18.5&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;18.5&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE C&quot;,&#xd;
		&quot;value&quot;: &quot;18.5&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;5T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14571&quot;,&#xd;
	&quot;tolerance&quot;: &quot;1&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__5T__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;21&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;D16.R-LOW HIP\/SEAT, FROM CB&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;21&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;21&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE C&quot;,&#xd;
		&quot;value&quot;: &quot;21&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;5T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14572&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.75&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__534397__5T__EBONY POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;18.625&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;X01.R-INSEAM LNGTH&quot;,&#xd;
	&quot;styleName&quot;: &quot;534397&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;18.625&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;18.625&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE C&quot;,&#xd;
		&quot;value&quot;: &quot;18.625&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;5T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14573&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.375&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__535620__12M__MOXIEP POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;16&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;C16.R-WAIST RIGID\/ELASTIC RELAXED&quot;,&#xd;
	&quot;styleName&quot;: &quot;535620&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;16&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;12M&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14571&quot;,&#xd;
	&quot;tolerance&quot;: &quot;1&quot;,&#xd;
	&quot;color&quot;: &quot;MOXIEP POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__535620__12M__MOXIEP POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;16&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;D16.R-LOW HIP\/SEAT, FROM CB&quot;,&#xd;
	&quot;styleName&quot;: &quot;535620&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;16&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;12M&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14572&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.75&quot;,&#xd;
	&quot;color&quot;: &quot;MOXIEP POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__535620__12M__MOXIEP POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;8.75&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;X01.R-INSEAM LNGTH&quot;,&#xd;
	&quot;styleName&quot;: &quot;535620&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;8.75&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;12M&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14573&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.375&quot;,&#xd;
	&quot;color&quot;: &quot;MOXIEP POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__535620__18M__MOXIEP POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;16.5&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;C16.R-WAIST RIGID\/ELASTIC RELAXED&quot;,&#xd;
	&quot;styleName&quot;: &quot;535620&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;16.5&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;18M&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14571&quot;,&#xd;
	&quot;tolerance&quot;: &quot;1&quot;,&#xd;
	&quot;color&quot;: &quot;MOXIEP POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__535620__18M__MOXIEP POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;17&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;D16.R-LOW HIP\/SEAT, FROM CB&quot;,&#xd;
	&quot;styleName&quot;: &quot;535620&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;17&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;18M&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14572&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.75&quot;,&#xd;
	&quot;color&quot;: &quot;MOXIEP POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__535620__18M__MOXIEP POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;10.25&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;X01.R-INSEAM LNGTH&quot;,&#xd;
	&quot;styleName&quot;: &quot;535620&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;10.25&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;18M&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14573&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.375&quot;,&#xd;
	&quot;color&quot;: &quot;MOXIEP POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__535620__2T__MOXIEP POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;17&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;C16.R-WAIST RIGID\/ELASTIC RELAXED&quot;,&#xd;
	&quot;styleName&quot;: &quot;535620&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;17&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;2T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14571&quot;,&#xd;
	&quot;tolerance&quot;: &quot;1&quot;,&#xd;
	&quot;color&quot;: &quot;MOXIEP POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__535620__2T__MOXIEP POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;18&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;D16.R-LOW HIP\/SEAT, FROM CB&quot;,&#xd;
	&quot;styleName&quot;: &quot;535620&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;18&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;2T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14572&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.75&quot;,&#xd;
	&quot;color&quot;: &quot;MOXIEP POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__535620__2T__MOXIEP POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;12.25&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;X01.R-INSEAM LNGTH&quot;,&#xd;
	&quot;styleName&quot;: &quot;535620&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;12.25&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;2T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14573&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.375&quot;,&#xd;
	&quot;color&quot;: &quot;MOXIEP POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__535620__3T__MOXIEP POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;17.5&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;C16.R-WAIST RIGID\/ELASTIC RELAXED&quot;,&#xd;
	&quot;styleName&quot;: &quot;535620&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;17.5&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;17.5&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;3T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14571&quot;,&#xd;
	&quot;tolerance&quot;: &quot;1&quot;,&#xd;
	&quot;color&quot;: &quot;MOXIEP POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__535620__3T__MOXIEP POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;19&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;D16.R-LOW HIP\/SEAT, FROM CB&quot;,&#xd;
	&quot;styleName&quot;: &quot;535620&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;19&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;19&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;3T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14572&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.75&quot;,&#xd;
	&quot;color&quot;: &quot;MOXIEP POLKA&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;1457__535620__3T__MOXIEP POLKA&quot;,&#xd;
	&quot;caption&quot;: &quot;&quot;,&#xd;
	&quot;standard&quot;: &quot;14&quot;,&#xd;
	&quot;measurementDescription&quot;: &quot;X01.R-INSEAM LNGTH&quot;,&#xd;
	&quot;styleName&quot;: &quot;535620&quot;,&#xd;
	&quot;inspectionId&quot;: &quot;1457&quot;,&#xd;
	&quot;samples&quot;: [{&#xd;
		&quot;name&quot;: &quot;SAMPLE A&quot;,&#xd;
		&quot;value&quot;: &quot;14&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;SAMPLE B&quot;,&#xd;
		&quot;value&quot;: &quot;14&quot;&#xd;
	}],&#xd;
	&quot;size&quot;: &quot;3T&quot;,&#xd;
	&quot;dimensionId&quot;: &quot;14573&quot;,&#xd;
	&quot;tolerance&quot;: &quot;0.375&quot;,&#xd;
	&quot;color&quot;: &quot;MOXIEP POLKA&quot;&#xd;
}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/measurements?inspection_id=${INSPECTION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get inspection_id from API &quot;update assignment&quot; first</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post checklist info - OK" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;itemId&quot; : &quot;${ITEM_ID_PRODUCT_OVERVIEW_1}&quot;,&#xd;
    &quot;label&quot; : &quot;Outernal&quot;,&#xd;
    &quot;groupId&quot; : &quot;${GROUP_ID_PRODUCT_OVERVIEW_1}&quot;,&#xd;
    &quot;status&quot; : &quot;n\/a&quot;,&#xd;
    &quot;organizationId&quot; : &quot;${ORG_ID}&quot;,&#xd;
    &quot;file&quot; : {&#xd;
      &quot;fileType&quot; : &quot;jpg&quot;,&#xd;
      &quot;description&quot; : &quot;-&quot;,&#xd;
       &quot;source&quot; : [&#xd;
      &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/4737a25a-a4c9-11e7-ab27-0242ac110004\/31_0_0_1506657373.jpg&quot;&#xd;
      ]&#xd;
    },&#xd;
    &quot;style&quot; : &quot;${STYLE_1}&quot;&#xd;
  },&#xd;
  {&#xd;
    &quot;itemId&quot; : &quot;${ITEM_ID_PRODUCT_OVERVIEW_1}&quot;,&#xd;
    &quot;label&quot; : &quot;Outernal&quot;,&#xd;
    &quot;groupId&quot; : &quot;${GROUP_ID_PRODUCT_OVERVIEW_1}&quot;,&#xd;
    &quot;status&quot; : &quot;n\/a&quot;,&#xd;
    &quot;organizationId&quot; : &quot;${ORG_ID}&quot;,&#xd;
    &quot;file&quot; : {&#xd;
      &quot;fileType&quot; : &quot;jpg&quot;,&#xd;
      &quot;description&quot; : &quot;-&quot;,&#xd;
      &quot;source&quot; : [&#xd;
      &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/4737a25a-a4c9-11e7-ab27-0242ac110004\/31_0_0_1506657373.jpg&quot;&#xd;
      ]&#xd;
    },&#xd;
    &quot;style&quot; : &quot;${STYLE_2}&quot;&#xd;
  }&#xd;
]  </stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_photo?inspection_id=${INSPECTION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get item_id = question_id from itemId of API &quot;get assignment details&quot; first </stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post defects of workmanship - defectId returning after posting new defects - OK" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
	&quot;defectCode&quot;: &quot;PKG010&quot;,&#xd;
	&quot;defectId&quot;: &quot;3aac9080-a8da-11e7-a6bb-0242ac11000b&quot;,&#xd;
	&quot;description&quot;: &quot;Incorrect Instruction or Assembling Direction, such as missing instructions or incorrect \/ inappropriate Country of Sale language (i.e.: U.S. - English; Canada - English and French) that would not allow the product to operate or perform as intended.&quot;,&#xd;
	&quot;size&quot;: &quot;18M&quot;,&#xd;
	&quot;countedForAQL&quot;: &quot;1&quot;,&#xd;
	&quot;photos&quot;: [{&#xd;
		&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/Inspections_S_0_1507103952.jpg&quot;&#xd;
	}],&#xd;
	&quot;style&quot;: &quot;534397&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;,&#xd;
	&quot;defectName&quot;: &quot;Incorrect Instruction or Assembling Direction, such as missing instructions or incorrect \/ inappropriate Country of Sale language (i.e.: U.S. - English; Canada - English and French) that would not allow the product to operate or perform as intended.&quot;,&#xd;
	&quot;totalDefects&quot;: &quot;1&quot;,&#xd;
	&quot;id&quot;: &quot;31013305&quot;,&#xd;
	&quot;defectCategory&quot;: &quot;Safety and Regulatory&quot;,&#xd;
	&quot;clarification&quot;: &quot;Critical&quot;&#xd;
}, {&#xd;
	&quot;defectCode&quot;: &quot;PKG010&quot;,&#xd;
	&quot;defectId&quot;: &quot;3aac9238-a8da-11e7-a6bb-0242ac11000b&quot;,&#xd;
	&quot;description&quot;: &quot;Incorrect Instruction or Assembling Direction, such as missing instructions or incorrect \/ inappropriate Country of Sale language (i.e.: U.S. - English; Canada - English and French) that would not allow the product to operate or perform as intended.&quot;,&#xd;
	&quot;size&quot;: &quot;2T&quot;,&#xd;
	&quot;countedForAQL&quot;: &quot;1&quot;,&#xd;
	&quot;photos&quot;: [{&#xd;
		&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/Inspections_S_0_1507103966.jpg&quot;&#xd;
	}],&#xd;
	&quot;style&quot;: &quot;535620&quot;,&#xd;
	&quot;color&quot;: &quot;MOXIEP POLKA&quot;,&#xd;
	&quot;defectName&quot;: &quot;Incorrect Instruction or Assembling Direction, such as missing instructions or incorrect \/ inappropriate Country of Sale language (i.e.: U.S. - English; Canada - English and French) that would not allow the product to operate or perform as intended.&quot;,&#xd;
	&quot;totalDefects&quot;: &quot;1&quot;,&#xd;
	&quot;id&quot;: &quot;31012978&quot;,&#xd;
	&quot;defectCategory&quot;: &quot;Safety and Regulatory&quot;,&#xd;
	&quot;clarification&quot;: &quot;Critical&quot;&#xd;
}, {&#xd;
	&quot;defectCode&quot;: &quot;CON004&quot;,&#xd;
	&quot;defectId&quot;: &quot;3aac931e-a8da-11e7-a6bb-0242ac11000b&quot;,&#xd;
	&quot;description&quot;: &quot;Major Construction defects.\nTextile defects include skipped, broken, crooked, or wavy stitches, run off, needle holes, open seams, raw edges, puckering, pleated (along seams), excessive fullness or ease, mismatched stripe \/ plaid (at side seam or pieced  seam), misalignments (at cuff, armpit, center back collar, sleeve head,  unpaired sleeve length, uneven collar points, etc.), and misalignment \/ not symmetrical finished product, and top stitching repairs not follow Yellow seal sample.\nNon-textile defects include open seams, insecure joints,  joint area gaps, peel off,  instability, uneven sanding \/ polishing, rough edges, and misalignment \/ not symmetrical finished product.  &quot;,&#xd;
	&quot;size&quot;: &quot;3T&quot;,&#xd;
	&quot;countedForAQL&quot;: &quot;1&quot;,&#xd;
	&quot;photos&quot;: [{&#xd;
		&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/Inspections_S_0_1507103979.jpg&quot;&#xd;
	}],&#xd;
	&quot;style&quot;: &quot;535620&quot;,&#xd;
	&quot;color&quot;: &quot;MOXIEP POLKA&quot;,&#xd;
	&quot;defectName&quot;: &quot;Major Construction defects.\nTextile defects include skipped, broken, crooked, or wavy stitches, run off, needle holes, open seams, raw edges, puckering, pleated (along seams), excessive fullness or ease, mismatched stripe \/ plaid (at side seam or pieced  seam), misalignments (at cuff, armpit, center back collar, sleeve head,  unpaired sleeve length, uneven collar points, etc.), and misalignment \/ not symmetrical finished product, and top stitching repairs not follow Yellow seal sample.\nNon-textile defects include open seams, insecure joints,  joint area gaps, peel off,  instability, uneven sanding \/ polishing, rough edges, and misalignment \/ not symmetrical finished product.  &quot;,&#xd;
	&quot;totalDefects&quot;: &quot;1&quot;,&#xd;
	&quot;id&quot;: &quot;31012979&quot;,&#xd;
	&quot;defectCategory&quot;: &quot;Construction&quot;,&#xd;
	&quot;clarification&quot;: &quot;Critical&quot;&#xd;
}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_defect?inspection_id=${INSPECTION_ID}&amp;group_name=workmanship</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get item_id = question_id from itemId of API &quot;get assignment details&quot; first </stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post defects of packaging - defectId returning after posting new defects - OK" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
	&quot;defectCode&quot;: &quot;PKG010&quot;,&#xd;
	&quot;defectId&quot;: &quot;3940856c-a8da-11e7-b55b-0242ac11000b&quot;,&#xd;
	&quot;description&quot;: &quot;Incorrect Instruction or Assembling Direction, such as missing instructions or incorrect \/ inappropriate Country of Sale language (i.e.: U.S. - English; Canada - English and French) that would not allow the product to operate or perform as intended.&quot;,&#xd;
	&quot;size&quot;: &quot;12M&quot;,&#xd;
	&quot;countedForAQL&quot;: &quot;1&quot;,&#xd;
	&quot;photos&quot;: [{&#xd;
		&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/Inspections_S_0_1507103932.jpg&quot;&#xd;
	}],&#xd;
	&quot;style&quot;: &quot;534397&quot;,&#xd;
	&quot;color&quot;: &quot;EBONY POLKA&quot;,&#xd;
	&quot;defectName&quot;: &quot;Incorrect Instruction or Assembling Direction, such as missing instructions or incorrect \/ inappropriate Country of Sale language (i.e.: U.S. - English; Canada - English and French) that would not allow the product to operate or perform as intended.&quot;,&#xd;
	&quot;totalDefects&quot;: &quot;1&quot;,&#xd;
	&quot;id&quot;: &quot;31013304&quot;,&#xd;
	&quot;defectCategory&quot;: &quot;Packaging&quot;,&#xd;
	&quot;clarification&quot;: &quot;Critical&quot;&#xd;
}, {&#xd;
	&quot;defectCode&quot;: &quot;P002&quot;,&#xd;
	&quot;defectName&quot;: &quot;Missing Product Identification Incorrect Instruction or Assembling Direction, such as missing instructions or incorrect\/inappropriate Country of Sale language (i.e. US - English; Canada - English and French) that would not allow the product to operate or perform as intended.  &quot;,&#xd;
	&quot;totalDefects&quot;: &quot;1&quot;,&#xd;
	&quot;id&quot;: &quot;31012278&quot;,&#xd;
	&quot;defectId&quot;: &quot;39408706-a8da-11e7-b55b-0242ac11000b&quot;,&#xd;
	&quot;description&quot;: &quot;Missing Product Identification Incorrect Instruction or Assembling Direction, such as missing instructions or incorrect\/inappropriate Country of Sale language (i.e. US - English; Canada - English and French) that would not allow the product to operate or perform as intended.  &quot;,&#xd;
	&quot;defectCategory&quot;: &quot;Packaging Inspection - Master Carton\/Inner Carton\/Package (color) Box&quot;,&#xd;
	&quot;clarification&quot;: &quot;Critical&quot;,&#xd;
	&quot;countedForAQL&quot;: &quot;1&quot;,&#xd;
	&quot;photos&quot;: [{&#xd;
		&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/Inspections_S_0_1507103942.jpg&quot;&#xd;
	}],&#xd;
	&quot;style&quot;: &quot;534397&quot;&#xd;
}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_defect?inspection_id=${INSPECTION_ID}&amp;group_name=packaging</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">if item has no defectId =&gt; add new defect; if item had defectId =&gt; edit defect</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="delete defect of packaging - workmanship" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;defectCode&quot; : &quot;P021&quot;,&#xd;
    &quot;defectId&quot; : &quot;bd632178-a417-11e7-bb9f-0242ac110004&quot;,&#xd;
    &quot;description&quot; : &quot;Illegible or incorrect printing on price tags, labels, packaging slips or missing DPCI\/Article label  &quot;,&#xd;
    &quot;size&quot; : &quot;5T&quot;,&#xd;
    &quot;countedForAQL&quot; : &quot;1&quot;,&#xd;
    &quot;photos&quot; : [&#xd;
      {&#xd;
        &quot;source&quot; : &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/99782c18-9db4-11e7-b68f-0242ac110017\/Inspections_S_0_1506580729.jpg&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;style&quot; : &quot;534397a&quot;,&#xd;
    &quot;color&quot; : &quot;EBONY POLKA&quot;,&#xd;
    &quot;defectName&quot; : &quot;Illegible or incorrect printing on price tags, labels, packaging slips or missing DPCI\/Article label  &quot;,&#xd;
    &quot;totalDefects&quot; : &quot;1&quot;,&#xd;
    &quot;id&quot; : &quot;31013309&quot;,&#xd;
    &quot;defectCategory&quot; : &quot;Packaging Inspection - Packaging&quot;,&#xd;
    &quot;clarification&quot; : &quot;Critical&quot;&#xd;
  }&#xd;
] </stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_defect?inspection_id=${INSPECTION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">if item has no defectId =&gt; add new defect; if item had defectId =&gt; edit defect</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="upload files" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;folder&quot; : &quot;test-folder&quot;,&#xd;
  &quot;files&quot; : [&#xd;
	  {&#xd;
      &quot;content&quot; : &quot;\/9j\/4AAQSkZJRgABAQAAAAAAAAD\/4QCMRXhpZgAATU0AKgAAAAgABQESAAMAAAABAAEAAAEaAAUAAAABAAAASgEbAAUAAAABAAAAUgEoAAMAAAABAAIAAIdpAAQAAAABAAAAWgAAAAAAAAAAAAAAAQAAAAAAAAABAAOgAQADAAAAAQABAACgAgAEAAAAAQAAAyCgAwAEAAAAAQAAAhYAAAAA\/+0AOFBob3Rvc2hvcCAzLjAAOEJJTQQEAAAAAAAAOEJJTQQlAAAAAAAQ1B2M2Y8AsgTpgAmY7PhCfv\/AABEIAhYDIAMBIgACEQEDEQH\/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv\/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8\/T19vf4+fr\/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv\/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8\/T19vf4+fr\/2wBDAAMDAwMDAwUDAwUHBQUFBwkHBwcHCQwJCQkJCQwODAwMDAwMDg4ODg4ODg4REREREREUFBQUFBYWFhYWFhYWFhb\/2wBDAQMEBAYFBgoFBQoXEA0QFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxf\/3QAEADL\/2gAMAwEAAhEDEQA\/APA0birKmqScVZXNfVkFjNKKjBp1ADwakFRipBTQEgp4FMFTLVAKFqQCgCngVQCgVKopgFTKKBEqVejqmgq0hxVjLyKKsLEDVRWNW0bpVjLCxCrCRiq6tVhTVAWY0WtCJFrPSr0RxTGjTijU1ejiFUInrUhamMuQx4rSiGKpxGr6YqQLKGrK1AgFWVFADxUgz2pgFTKM0mMcuasJUQwKnVlqQJQKlUUilcVIClSBInFWUeq64qyqikwLCnNTBVNVRx0qQMagdyx5amniEGo48mryLUtjIRCBTtmKthBS7Ki4FPYacENW\/LpdlFwKwSnbKsbaMClcCtspuyrRWk207gVClNKVc2imlaLgUSlJsq7so2CncViqEqQIKlIpKAGbRRtFKSKaTQMQhahcCnlqiJzQhFdhUJFWiDULLWiEVytNwKlIphFMRHSHJp9NJ4oAiZagcVZJqMgVQFBhVdkJrTKioGAqkwMxkNQlK0WFV2WrQFEpULirzJVZ1pgZ7iqrpmtFgKqsQKoDOeI1UeMCtGRxVGQ5pklB1qq9XnFU3NUIqNxUDGp3BqpIQoJJxTJK1xNFBG00rBUQFiT0AHevnLx34+m1MLpejsRblv3r8Kz89gf4R+tafxI8bRzyjSdOkLQof37LxuI7Z7gV4hOYXZpCH+Y7vn5J\/L+VfJ5jj3JujS26vubxjbcu3dwrHELbcn7obkceuMflWSHLs27AHtxUsjxwRfu4wHfgew9TWZJKzFY1yztxwOlfORiaonacP8p6ZxitbAt7fLNtOOSeKrWtslu4MvLjr3\/yah1K7jLYc5Pp1xTdm7IUnYy72FbpCUlwR\/e6e5rDeKCQCFHyF6t6\/Snz3TElM8fTAqsjHGScAeldEU0ZFkWkW35VySPXnH9KhTfCfMAG0cDNQNcTzuIoQdvQD\/GtRbWAK32l\/lVc4HUn0zT2+IZRiZz88mNxz07VZhhW1RnPzSMM\/SoI2iLDaNuO1acKPcttUbieT6AU5NFWvoRW6lF81vvN+o9BRO0zMBI\/AHCjoKnnlUERp24z0GfYVU2gp+lYre7EiIPtXCD29zVVlAZcDB7\/AP16naaOFtxbbjoPeojOhG9VH1NbK62H5CS2sBXcv3nPfqB\/KqMlmYWAyCDWgEZ8kuBgdT2q1bW1t5sYu2LbiAB0zmmpW1bJMaWARxhgR19efyqvskHzMCAfWvVLmHSNKijOoxx5HKRqPmI9ckc\/jXn91J9qnZySqMSVQHoPepp1eboaTjymdDjfgjOf0phZsFA2BnpV5ooTlF6gZP0qAxCRTsU8d\/8ACtr9SD\/\/0PBUSrISpliqwsdfV2JKmylC4q95VNMWadhFYCpAKl8qniM0wIgKkANSBDTxGaqwDBUq04RGpViNMBFFSqKVY6lWM1QCqKsKKaqGrCoaoByCrSZqJEq0qmqQEiAmrsUZNQRoa0oFPFUMkjgNWVhYdKtwxlq0o7QsKoqxlIpFaETYq6LA+lOFk69qLgSRPWlExNZ6QMvar0asKANGMmrK5qnGWFXFLEVIEgJpwdqTYxp6xNQA4MalXNIsRqZUINJgSLnFWUQ1Ggq0hxUMCRIzVtUNRxsKsqc1DGJsNSpHk09eanUCobHYekQFWBgcVDTlJqALa471KMVAlTjAqBhmkLH0pd4FLuBoAhLGo9\/NTMM1CUpiHg5p4GaiAxUysBQwE20bakyDRikMixTSKlIqMigRERUZFT4pCtUK5UINN2mrRWmFKYiDaKYQB0qYqaaUoAqkmozzVhkqMrVoCEio2WpyKjIqgK5FREVZK1GRTQFcrTDxUxBqIqaoCFjUDGrDLURFNAVzzTCtTHiomJpgQsBVZxVhjVds1YFORRVGRRWg4qo4qkBnutU3WtBxVRxTJM919apuK0XU1VdKoRnPXk\/xL8THSLJdLtObi5B3EdUj9fqegrrfGXie38OWLBWBupB+6U\/zP0r5g1LUZbyVp7gmSZ+STzXiZjjFBOjDd\/gawh9pnIzyyMzGUEEngUjCJIywy0h49f8A9VSzSB5CE5A+8fSq8U7w3Aa3cDA5bHQegz\/OvkJbaGibZTkg81wJjtHYdCfw9KsW6RgK9pnByGkYf+g0ojErbgNz9PU470u\/yUZX+4OFAP58ms99BSdijqUvk7IQ\/wAvJbHeuRuJzJIdmcnt9a2Ly+jBOEXJyBurLhmQNvZAVHULx+VbRVkRzXIkhZlDzdOuKYpkuZhbRLgdD7D3rTCx3ZBjiMagYxu3c+taJiMMf7qJYywCkjr7mnzdwKKwRWwbYPujk1llhO+3sOTitC6ZQDEvTAGKx5CkI8yE\/M3AFVHUaLsMIQk\/kDWqsZRSikDPU9PwqlZ7hHuk+8BnHpmnF5JMoQSR0A9TUyu9BtlEq8020NgDj6Ul1OIECo2ccZpyW0yM5lwqk8DvUMumzSYK\/NmrVr6iuYp3zOW7datLBcSDC\/KPStBNNltnDM64Iqd1G7LSZUDAOMZxWnNpdBbqYgglzlzjH51qWtzEJg0qNK4wEJPCn1PrU6LGTkuqKPXrVW6FuJ1W2y4PU571m3zaCW4l1JcX1zJLcytITwGY\/wAvQVCY\/KUpHznqe9Mle5jYeYMZHAp8ckxjJbOT\/KqWiKvfUkSby1EfCjue\/wCNRPcMzFYjkdj0qlJ83JBqIKxOFHWrSEz\/0fKPsxHaneWVrt5NHx2qk+kP6V9hYfKzldtPVAa2ZNNkQ9Kg+yuD0osTYoiLPSpBAfStOO3PTFakGntJ0FOw7HNiD2qVbYntXYpokhGQtSf2Q6\/w07D5TkVtW9KmW0PpXTtYiIbnHFLDBDKoeJgwJxwaNNg5TnFtDU62R9K6VbLvip1tD6VdhWOXazZULAdBTLO2mlDNIMAV2S2ZPBFW49OJGAOKdgsckLQipUtj6V2A0v2qdNJ9qoLHLw2jHtWxb2DHBxXRQaYq9q047VUHSi40jHt7AjGRWrHbBe1W1AHGKkyKQyEIB2qURKe1OB56VKopiuNFspqUWg7CnDNW48mpYFdbX2qylt7VoRoSOlXEi9RUOQzOW2PpUotWrWSL2q9FalugqXIDnPsj04WreldnHppI5FSnTkXqKj2gWOKFuw7U4QsK61rJPSomtE9KOcVjnFQjrVheK1jar2pv2SjmQWKAY1KrGrf2bFJ5KildAMDmpA1KEWpAgqQEDmnhyaQRml2EUCHA1KpqHBFOGaQFkEU7C1CtP5qR3FIWoiOeKU0ooEOUU\/NNzSbqAHU0ilBzUgGRQBBim4qxtFJtFAEGKaanOKiYimgITURp7GoiaoBCKiIqXmm4poCHbR5dTYNGDTuBAYhUZjFWipphU07gUmSoWStEpVdlAppgZ7JUDJV5qiZRVpgUGSq7oRWiUqJkFVcDJYGoGBrUdRVR1FWmBnOCarOlX3FU3B7VSApPHVV0Aq62RUDAHrVEmc4rn9b1a10Wxkvbo8KOF7sewFbOr6nY6RZtd3TDA+6o+8x9AK+YfF2vXviC53TtsjT7idFUfh1NcGKxaorlXxFxjfc5jxHrVxrN819dEea3AHZV7ACuGupQzGJeT3z61t3JjiDSP945x6n+grj7u+kYsEZQFGTjv7V8hK8ndm0tVZCTxCQbVYYXqc8fpVLykdhbRnABySxxn6+lVZL5kjzICzk8AU7SLeW+uy86lEjyzMfQ1hKLSbZCVtDRDiEGQHEQPHq56cewrH1CSWRgJPlyCcdcD3rbu7qMFooI9zAbQ+BhfQAfTrWejwwNslj86RhkLjAB9+awi7a2Je5zRsZZipdgu48HpxV22tLNpzFnzUHVxwP\/ANQq\/cRrKGVlC7stycYPpgccUiR+VDnaNmPlLDBJ9cdcfWrcm0CsIDFGSsShV5GVzg1nSSnesceeOOTmrWRIevC8\/jVI3CmcW64Gep60IbK0seSQvU9TVSK3hiYEjfI\/IHpW7KkDI2yRVAGSp6ms2HeJGnIChRgZHJzWiloFrblz7M8kW1doGfmb0PpUrDy1McA6csc1NtRIBuPOM4+vesxmBPyn8Ow96hajtccZ5d251A7AY\/Uk81fsrixVWku5CdoJVAOGx\/n6VniTbgbMjuTzUdz5Sxu6j5v9mhxvoNaPYDcwSqyGFdzNw3JwPYVTlmjTIx81V4pfLGSMAfnSyTxMRtXd65rZQsIZ5ccr7pDgDk1LArA7kAwfaoY5IVJYrmnPeZJboB2AqrMT2JZLfemAVDdSfSo8bjsLHCjJLZANCPLPMsFvlmbt\/npVu\/tjbOIJDvdlyFXoPqaXkJJ2uZ6GNgcUBVz79hTBGYVAcYJ7ClV3ZgqjBqg5mf\/S3xap6VL9kjI5WrAIqUGvsDpM5tLhfgioT4fgboK3QamVhTuI5oeGlJ44rctNDhhHPNaStUwbNFwGLawKMMB+FRtbwHhVq0FB70jIcHFAHhvxTu9V021jk04Yhc7XZOoPoRXgEVxqyAz2960RLZOH6N9K7D4ka5r0eqva3svlRK3KbiFQ+mCBnjnrivGbnVjJci3jLNI3QowGRnjg4xmvisZWc6ztcuMox+JHpB8ZeKYlCfbSwQcNkHnOea6LSPjHPZ4j1ZUuCQclflINeV2zTSsbeWPKAHpxgjtnkE\/zqnJpMTz+bn5eMg43fp2qaeJqQd1NlOEX8J9w+Fde0fxPAkmnzK0h5MefmH4elegwab0yK\/O6xvdV8OX0d5pDsDGd2Q2CPz4r6T8IftA2ktt5Wv27CWMAO8fPtnB\/pX0GHzGMlaroyJU3HU+loNKhJw38q0E0a3PSuI0P4h+FNdkX+zr9Gdxny2O1h+B713cd+uMrXpxqKavB3M7j10WLsKsjQkYcDFOh1Lnmujs76J8BgKJOSEcfNoDp0FZE9i8PBWvZ4xBMvasu+0gTqQoqY1u4mjydIQT0q6lqnetq50a4t2J2nFZ5jdOoro5r7EglpGauxWcNVVY5xVyNjSYGpDZw461dW1gHQ1mJIe1Wo5CaxdxmnFBCDWlH5aDgCseMk1cUtis2gNLz8cCmmQtVIMRUgfFRygTMlVnUVNuJqBwTTQEJApKdimmqAYwzURWp9ppQlMTK4SnAVPspNh7Ci5IwClINO2sKXB70gIitAWpcUuKdwGgYp3NOApcUgI8UlSU0j2oAbmkp2zNLsoAQcU7finCPNIYjQA3fSF6d5Jo8mmBAxNRENVvysUxkoAqbDSFCKtBDSMlMCpilC5p5Wl3BaYC7QKaSvao2eo94oAmJFRFwKiZ81ETTsA95OKpM5NTMRUJxVpAVySaAKkOM0wnFUAxsCq7EVK+TUJjc9qYFd6rspNX\/ACGJpxgCjmquBhyxsOaoSAmt+aLPSs54lHLGtEwMd16k1wfiHxba6bE0ViyzTkcYOVX39z7VR8b+LTGzaZpb8LxJID1P90H+deN3Mzz+5A5xXk4nFtPkp\/eUodyHV9Umv52mvZHkcjkZ7enoPpXI3UiyD\/ZHYDOK07ryVyTkn06c1ytzdSSP5UIwucZ7DFeFKLepfQxNUgmuPkdlRPr835Vg\/Z7CH92CHfvnt\/8AXrXukudxICn1OQBiskW4BMUYMksn90fy9vespaLcG+xUaOW4Jjs1wAcZ4HT1PtWosiWVp5I6Dq56sx6\/hWTdahDpq\/ZoyC7HDY6DHUfhXOatrJnfCtuVRgCuNxlN26DtZam5JdqOdwx\/npVIXcs8oSEDLcAVypvJduCRk9\/SnCaROjkk+9HsmRypnSozNIfNBcjqD+tFxKXIjBGWP3R2rLtbj+BTin2WJboyM2AvA+vvUcuuoLQtSMAWhjGOMZqqFRCUj\/Op7qRIF2DLyPxkdPwpvEG1WGXP6U1sK4xHjjLrEAAF+Zn9+p9B7VNDGFUNlZNxDc9MdqJYluIgsm1UY5Pqag3hJdijg8AH06Ub7FWuJeTuzYTkHnjgVny3KxrlW+Y9cVWuy5uikf3e9UAGJ55reMdBt9EXZb2YqXD5Hp\/THpVX7RLMVU0xwuKQBQMjrWiRNyeRlLEMckcVBuUc5603p71EzgnjvVhclL8YzxUZfdwelQE0oJxQK5fsr17KYzRbTkY5FOa7mmlM5JYnqaqgk4yM1qW\/lRhnZ1TAOARnP096zdlrYryIS6E7mOQe5qPz0XPl8E96heRWPzj9ahZwwxjH0qiWf\/\/T6VGzU4PFZkc9XklBr7A6CwrVYQ1XVlNWUCmqAnWphkVCMjpTgzUATh8U8S1CDmnYoA8j8a\/CXR\/GFw1288kUjt+8wxORjGBkkAgdOPyr4bFs2natcaZfFzJZyyJCzDn5TjBJ4xX6fOyRo0jkBVGWJ7AV8Ja3Hp1x4r1O7gKzI1w7ROvIYOScr1HQ14OZUqcI89tTNpXMqKKZ4FlP7s7RuJOGGenHIqJLJ1nV0kLMFB2Dgbe\/HGfWr0tw4ZktkLsWA3bd3JHcE8Gqc1hqRKXQTdg5YL7dOvevlYJN32NYJS1ZTuSEm82Y+XG44IOVP5DisvYYT+7m4lOMYOR7n2xWjqLTyrI06G3ITfGNvXHUEnis2Se3RYDOyIrjazAEZYDggjI6H2reLa0Ku9rlm11GaynF1A7BOGDq3KsK+5vhR40Hizw+HnfdPbN5chJ6nsfxr89vMk8ll8whhll2MCGAOMFfXFfUX7MOieL7S7uLy4gcaNcwlo524WRg2Bs9xznivZy1uNSy2ISumfZdupPXit+0TpWakZWtCFmWvppGR1Fs2MYNdHaHcME1xcErcVuW1wwxXJOI7nVvp8c6YxmuevfDW8lkFbFpeN0JrfguFbGaw5pR2A8rfw1cqeENRHQ7iP7ykV7hGYWGNoprWUcx+4KPrT6oR4oulSelTDTpU6ivaU0y1XrGKJNLs2H3MUfWgPII7Vx1FWxA2OlejPotsfuiqUulInSn7dMDiPIb0p62pNdV\/Z4zyKvW2lI7AMKHVSA40WZ7UGyb0r1GLQrbbzSvoETfdrH6zEVzydrQjqKjNt7V6qfDaMfmIFPHh21Qc80\/rMQueS\/Z27Cj7O\/pXqkmiW6j5VrLm0sJ90VarpgeffZ3Hal8ojqK6ma0ZT0qi0Df3a1U7hYwygHUU3YprZNq56rURtHPQVXMKxl+TnpTxatWito4p\/2dyeaOYLGcLU077Ka2UtTimPbkUucLGR9mxSG3PtWi0LdhULQPT5hFL7MfWlFv6mrPkPSi3encCEW4HejygKsmFwKiMUhpXAh2qOKaVHap\/JI5NGwelFwKu3NNMWat+Ueq1E0cpppgQGPFV5AFFXPLcdaqyKe4q0BnsarO2KuyD2qk6knpVoCuXpm+pvIdulSCykPar0AqFqbk1ojT37046e45ougMkk1Ec1sfYmzjFL\/Z7nnFHMgMgRlqsJZlhk1oJYyKelaUdqcc1LlYdjD+yInJqJgi8Ba6B4COAKga3GORS5gsc7I2B8q1Qk3vxg11RsVam\/YAOnFXzJBY417eUgk8AV5n478Qx6NZCztnIurhcg9NqHqc+tdN4z8cWOjSS6Xp+ZbxTtYkfJGf6n2r5w1y6uNSuPOv5WkkxgH0A9qwq4hJcsSku5zU12J5TGTu\/wAazb2YxRna4zjhPSrzohJWMbQDk+prHu2VXOVxk8L1\/OvJla9i2zCuPOl\/1zFVPQL1NZ1x5KALGp569\/zrZeLkuzZH8\/pWFdrM2fKACjgLWUtRN2Ma7kPzR+orAmvPs0chT5XAwTnv2H9TXSy2xw08zYVRxgd+w9681v2ZmYgk5J3fWuOS5vdKVtzKkcScvk85571VusTKGUgEckdPwFTSAjvz1qElI4yWPPvQ7LURnqFDYfPtU0kiscgY7cccVXEih\/mGR7VCXP3eAKGiUyeOQo+Qee9aFpM0Tgdic5NYm7nir8DOyLEBls8H2qJILmu1x5kgK43ggVbDgykuQT\/Ss82U+7cFwTzkn8qkEM4mB6nbg1zNLowui1NMHYSIcqAMfWq16WHKYJx\/OiO3uI2LnARe\/wBKral8+0q2enH9aqKV7Iq41A\/2dVXBJPJqOXT5lYFVzkZrSs+I9igZI6+gqw0iQksx3MRgZP8ASnzWehJhDTrhsllx6VE1oy\/KRznGO5roZL1owuQB6CqpuRI5cABvX601OXVC1Odkhl\/u4xVIseldLdyReSxz7YFYKxhmxmtYyvuSyBULdKmETdAOa04rYbAWYKDV63WzSXbM4Ckct6fTFJysBkrbyKAW4z60jRPK5x0FbHlwO7Op3IDxmpWEQHz8\/Tildl2MmHT\/ADASW4HbvWbLtVj5Y4rqLm2gSzWVXDA5wmcEnviqCiGTG9QgXsaIyuKx\/9S0hNXEJqFIHBxir8dtI3QV9ijcejmraSGmLaSdhVhLSX0pgSrITU6sTTFtpR2q0kEgHSgYLmp1BPapEgb0qysJAJI6DP5UXEcp4q1i28O+H7vV7pgoijIQHo0hHyL0PU18OxxS3kn2ieNY\/NbeV4BJPpgfkK9A+JfxBtvFurQ22ku7WtvgGI\/xPklsqpPIxwe1ccY\/MAmuCUA7qMDPbmvj8yxSqT5Fsi4JdSgs6WZYxRsiL1BGRn2B\/lSNd3LsY7Ah3AxuGcLu5OcYAwKsXJhYCTeQq5GWztA49P61nx3FoFMaEMqsGBQZ4BHLEfyrxmtNipptWsTPcOpe3uF85ifvAkgHp3J\/pXKXGl2l\/G72L4cPuKMejfj2xxWnqOoKiCOKQyOjbehA5J5AH3sjqTxXIR+JLczfOCpD427RwoGOnAOD06cVdKMlqjJaO0ird2N1aMwYN5pcZBzgjGMj\/Gv0H\/Z21+0v\/B1volpH5T2ZYSqWLN5jMSSN2ThvvegzXxLY6xZ3q\/Zrtg6NwNwAx7j0\/CvT\/Avi+++HeojUrbZPbSECVOhIHo3Xp26V6uExXsZ3n1NOSy02P0litGYDiryWTZA2\/WvMfAXx08B+KpY7Keb7BcuBhbnEYb6Nnb+tfRFmun3OXiZXDY5BzkHpX0KxEZK8HcycbHLw2Qz0rVhsvSupj0+24AGKvxWEB6VEqpJz1vYN1rXitXTpW7Dp6DpV1bEDpXNKqJsoWqYxuFbUajHpTY7cKeatqiiuWUrktiKgp5hVuopwAHSpRzWTYimbMHoaZ\/Zw+taarUopc7HcyBYDuoqzHaInOMVfoxUubYiIIBTqdgUYqbgJimkA1JSYpXArNEDVV7UNWnimkValYDn5dPU9qoPYKD92t241TSbY4ubuCIg4IeRQc\/iaZb32mX2fsdzDNt67HVsfXBrVVWPU5x7Mf3arNYj0rp7i80qBilxcwRkdQ0iqf1NctqnjfwTpEv2e+1S3EuA3lo3mNg9Dhc1sqw1d6IabM+lN+yEdq5LU\/jF4CsAPJnkuiTg+UnA+pbFc1efHTw9EwjtbOV5G7M6j+Waft0Xyy7Hqn2c9xTTAvevJ\/wDhciXCl4NPCooyWeTg+wwtcrq3xokv1NnYxfYdvMk+c47bRkcEmkq6aui1Sl2Pf2tlPaojbKO1fMS+M9SbEiXtyScHJduf1q8nxA8WKvNwqJgkGRhn+VJYm\/Qr2LPos249KZ9n9q8Ih8d+I2Xc1xkHuACP5U5vHOvSsBJMQP8AYwP5VX1qOwvZPqz3UW7HtTxZ7u1eBv4i1GU7vtMnP+2f8aqSarqmR5NyT6jJz\/OmsRfoP2XmfQzWI71Xa0ReSQB9a+dzqmo5zNNIf+BGpU1Kdv8AloxHuTiqdZoPZeZ7xIbOP780Yx6sKy7jVNJhODOpP+z838q8dNxKeQxNMe5kI+lQ8RLog9mj1B\/EemqcKrsPXAH9aoy+I7FjxE3PTkV5p9rYqd3AHXFVpLoDnJOaarVHsPkj2O6ufFMEZOIOnq\/+Aqi3jfSoWxcQSJnHI5H54rg5pN7bsZz15ognMbbgv4EZ\/SuuEptXbH7OJ6RD448PE4Jb9DW3H4p0Vl3KWx\/u15ss1vKu3ykx3AAFQrZ2KsZYiYz0K5x+nSspVpLcbpR6HqY8TaQejEfVaRvEmlf3z\/3ya8rlneIcZAHcjNVmv7hjtQr6jPGfakqs2T7OJ7FDrmlTvsWUBv8Aa4\/nWwjg9OleDm4vBIAGXafUd6sDVb2IAiQgjsrYrRVX1QnSXRnvGwdcVGxQcV4WPEuqH5jPcJjsTx\/WtS18X6nGAJpBLj+8oz+YxV+0XUn2TPVywzUT49a8wl8YalkuGiVew21Zg8anywlzCHk9UOAfwxVqtETpyO7dvSvEPilrusW93baZZM0MZQy71OCx6dR0ArqtQ8WalBbSXcdmqxxruO8mvBdX1i+1i5e5v5txOSAeg9gPSnOqraCUWtzCuC8zvc3MjSSscszHJJ7nJrAus7fLUruPQ9cfiKvXVw4TLZwKx90hDSoMO3Az2B61xSTerBsxpi38J+rdPyrPkjMY8wgE9s1sXElvb8SEs\/p1rnrmdpC03QDpms2myV5GXcTIwK7cbeDiufnu2VdiDgdz+tXbiRS+XJx1OKyJpDICMHB6YqGgt3MTWb+YymCL\/VIOh7k9a4e4lUZZlySc8dK6nVYniBcqRk4zXHXBJJNY8qtoU32MuSU5OABkVSbdJyec1eaJmYY71bigzz0AOPqawlJIkzY7YsD2qP7A8r7EyT710UVgygyScc4Aq\/FEscmwDnHNczqW2MpS6I5eLRTnLtW\/ZwJaLuwN2OtPubu3hByfu9vWs65vvMAx8vUisryluUo\/zEz3JdiRUHmYw3qcnHoKows5ZnchQRVoHZuK5fbwpPAz3quWxVrFq4fZGY88jt7mqSwTz4WGPcF+8emPxqrKXkmjZuQxIODzXRTzrbR+Ug2RKOMHr7n1pvTRAkVEX7LEwdlyT0zWHeRyySLKzgAe+cflRcXDSkNycdBio97NwV5\/u1rCNtSuhZW1WdfMkkYkc7scD8KdDp67S0rs2ORt4496rrOYlKqozWhYhLgkSlxxkEDPNKV0KS0Kcukys3noy+XwcDqPw6mqi6cVOd1dIpQZ+bcV\/ugD86ob2mJZCCaFJ2MrmFcRyiQxhuF6VWcOgBJzmuk8gFvMdQT05psltA+cKSfXtVqQcxhQ3MkRyADjt2q99rnusRrzgfQVSntXik8tfmYngCpBaSgbmxnuAeap23KL0duUXfO4APQ56\/SpmS2X\/VDf61BHEY4VI6+nXj\/ClJnbkY4654rHW4an\/9Xzzwj8abVStp40tTyf+Pq2X\/0KP+qn8K+mNAu\/DfiK1+16DeRXkYHPlsCy\/wC8v3l\/ECvzeju4nH7xT\/OtrSr+90q9j1DQ71rW5T7rxuUf6ds\/SvWhi5LSZ22ufpSulwn+GrEeiRyH5eK+avB\/7RWp2ISx8c2P2mPp9rtlCyfVk4Vv+AkfQ19GaD4x8LeJ4luPDeoR3JIyYwdsq\/7yHDD8q7oVlP4WJqxux6DbRrzyfekTSbdmwAK1FnZlwwpYZAH3AVXMySK30GBm+bpWD8QtPvdE8IahrugXS2txYW7zAuiurbcHB3AkE9Bj1ru4rlFGTXwZ8ZfiTq\/iLXr\/AMN2l5J\/YtvL5KxAgpNIn3mOACVDdNxxxXJiK7px5mTZv3UfP1srT3811FGYZZ2Mk0oPJdjuIBOOv5VHqt5drKEt41kjJAdc5JP0P4fSrMhmkdvN3bF5CgY4HXGOuKwb\/U7CDdEhfIwTtGBx0GD39a+Xs5S5pI6krEcmrWlyzW0gkglLEBee3Q9h3xXHvfK9wxhYrIr7XjPQ\/Uj+ddrbapol7bJbamGbaSPM2jcGPTp0\/Sq8\/h+ymtHfR5lmYdSV2ucHnI6ZHYjrVppO0kKV2crPPbancMkkgMgAG5Rkg+hHB\/KuL8sfaXLNtYEg4HTHauyHhuzmuD9onaGXgq4HyfiOCPz4rOfTpT5qbcOrHc3Xp16dfXNbxcVojler1KMcn2VwGkyW5A613dp4iaO3hUgNjIZT\/T868ye2ulUb\/nGflJ64p3m3ePKXBUDJ78GonFSRUajWx61HfW0spEabI9oywIBViegyQP1r6N\/Z++Ms+i+KrLQtQuJJ9NupFg8uQlvKkc4Rx14B4IFfD9reXKMZWUyRuMMDnGDxXf8AgDSvEXiLxZZ2XhWyuL2\/SVHTysnZtYEF26Kox1JFOhCUJ+6VCfNOzW5+98AyoJ71oxKKxdP3pbRrKcuFG7645\/WtqImvZkYPc0YmxxVwN71RjOetWAR2rnkSWgakBqoGJqdSaiwrFkCpBmoVb2rntZ8Z+F\/D4P8AbGowW567WcF+P9kZP6Vm\/MR1QNPBrwXV\/wBoPwNYKy2DTX0g4UIm1Sf95v8ACvKdZ\/aH8T36NDpNpDYo2QHOZJMe2eAR9K55VoR3ZtGjN9D7SyPyrktc8e+DPDRK65q9rasOqNIC4\/4CuT+lfnt4j+IvinXRt1HU7iRVONgcgH2wuM155LJDft5rK+4\/eLZ7fWuf6zHsbLD92foJqH7SPwm08gHUZZs5wYoHIOP97bWDH+1Z8Knfy5GvYznABgByOx4Y4r4AuPD8sqie3d+vORuyD2xVSTS43YGYNvAx6dv1\/Gm8VT7jdBLqfo4P2l\/hpIu61e6m7fLEByOo5Ycisu5\/ai8DwfMtpdkYJ52AnHXABJNfnxHZvG2bdkUAHjJH49MUSRyFQZJVbaeQR0+lZfWLvRh7KCPty8\/a10vdjTtGcj+9NMF\/QKa8x8bftT+NLvTntvD8NtYvJ8pdMtIAeOC2QD+H6181z6bLKDJDIFUjB\/Dv\/wDWrJOgXV1cxu8yRxqQSTkcA5\/l0raFW+rYckdki3P4116xnd9TlbfIxbeDjnvyec+tUH8fTiJoftLhW5LK5yxNXNT0pLgTR7VkRgRyy7sHvj1rmtI8FXcbB7qIEdVyCT+nSupSp2vIuo5LRGhH4m1a5iUTSyTbjwWbcR6YzWxpFtqN7c4M8kasMsQckn071s6f4QuJv3sihVAPAyACepzxXbafZQaXEoiJ2t1c9\/b1rN14rSCJSG6dp0FiMsWJ7knJ\/E89+1b9pYrLOZYY8u3JLZJP1z0\/Cqaz8bIULls7VTBYn6YwPrXRW0hhhMbnLtjIz8wGOnHp696y5pPVmyTe5qpYRLGG1BmkyPljXgD9cmq5soUAkgtSNpwA7YwPpzVBr941VljkVT94lix49gOB+VV7q+ufLElshkK8gA4BUnnJwf8AGtI8xpexqMGnBWeJSqnAIY9PU5wKdE1upZSOnZh\/jXLyXj3kpVklTb0DsNhIPXA5x9asxSTsVY\/vCOpX6c9T+ldShoTdGw+o3O9VtwUQc88n6f4VqW9xI6DIJyeuf5A1z+8k\/Lg+p9PSr1uJShw\/Qnp2IrdwjKKViGjoI5TkhgMGpkfc+VfbjtiqELNLH8ww46jvTizKOmOw9a5uVxfKzBuxrvevEg4z7kcfpTYb+ItsmIGe4HFUJLryI13puDHB9vc1JsBdWTGMZGAOv1rpilb3jVPQutcKrjaN27upqZZsocq2PUiqAChtrEDPapEWRM7G3rj1pWXQWgS7I23B2cdhjpVCZWZt+Dj1PSrw8oqWAw57E4qKVQBu5yOfUf8A1q1hvYm5TWNTgbhz3qRo1jJCnOKmgA5aYbR2HXNTyWqS48vk+nSupTUXZhcqpIwGU4z2xWjFKWUbwGFVfKMY2+h9KfhkwxOfpUVLSd4hcu7A33Gx6g1VltIzyRTlYt0PT1qyj7h81c9mib3MZ0aM5QZH5\/pT8JnIGOOa1JIwV3D8qijs5ZyDEGwTjOOKtO5RlujkjySSPTFT2+m3UsmXYRrj5i3J\/Kt9xDYIY4uoGXfuTVJJWcKG6sdx+nYV1Qpae8CLUOiaZFB5sxZh1I\/vfUVPDEkymUhYLdegUAZxUUpaTbFnA6mquqXfl2vlJxu4\/Ct0rbD3OK8Y627oLG1OxJPvKvVgOma8xdQrhpRtU+vX6mug1ucPdNIfYCuXmulJAI4\/z61zTbuc03roU7ieEjcOfcVkXUjYLJ1q9OyNyeMf57VhTbCThsMfWs3Yz31MW48skMcsecknqay32yyeX1x29K1XiDHcWyc9B0\/Gqc4Mf3AMms5Md+xh3NvEW+bp6CsyXy4k\/d8ZrYuFfJz16VjXKYBLHAXrXPJit1ZzuoYkUr1B4A9a46e2USE9gMnNdZcsXc4HHWuZuPNLORj5jiudlRRkrCC+77o7U52WHDjqOg\/qamBjX\/WdBz+VZE1wI5Sc5J5PfjtXM1dmhpS3yiRIyMDAPrgmmPIzM+D14yKyIWkvbxUYDDH+Vad1Mih2PBHCj2\/Cs3G2hj6GbPbv5vzk5HY\/pRawEh2bt6+ta+m6fc3I8yQbEPTP9K1obe0s3MduGdyfmJ7fQdKHK2g+a25x6afdXExHJXgEngVvvpR4ZGHGAFFactysRwvzMc574\/H\/AArHkvJ42+6PrzWblKTM3J3KVyrW5IKYPY1FKJJgCW+U49zUcs09zjzOgNaVrADEGVehP+c1peyHHcpT3Foh2BMvjknjBqlNJatyoII9+tWL6yePNwFOD94n1rO2KFy3f9K2ja2hs7lhrpCnl+WAPXvV+3uljQCLB9T06\/Tmsd2UrgAe3rSCMDDkkjIyBSlG6JZrS3EEyGMjJHGF4X69etV3iaBQyFtp7etPRoWAWNcH2q1JCwTcBz\/d9Ky20M2yrC8hc7kOMce30qsZ2VmwSFPTtUreYw8vcceg\/wAaSS1kVCFwN3HXpVLzEkIqu2XDc989aGeRTnYOO\/ep0tjEAm7cQPXFSCCbOWA\/KncTKoMrHcRtHqacv7xsEZHp61beBicvnntngflUbROBhcKPbihsSP\/W+C4bh1by2z65FbccgkAYcZ\/CsiNI5PlXLH+VTf6TEThePrxXU9djqR0EV7c22PLdlx2PIrbsvEc9tNHcwjypkOVliO1gfUEYI\/OuOS6fZ+8AIz9MVoKQwBBpWNFJns1t8XfHbYVNZnbb2YjP6jmu60L49eLtPlUamItQi\/iDqI3x7MnH5g18zpI6kEda0reW438nfn+Ejn86tVJR1uNK59meIvjxo9x4Tnn0Ytb6kdqCG4XJUNwzKV4bA6Zx6kV8ZG8lu0kaQnduxkHAOO\/bvVyeeJ4AHXzFZsc5wKr27wqrMGkI74+UMf1IHtXmYiu6srvoNQsyO10yBC11fybpTnB35wp\/LFVb7T9Jj2Syl25BKq3zZz8p2nOevOac+raLbw+TcMY0PO3BI3enUHj0rBuWtrqdWtpvLkl+bcQSnsp9M9vSohFvW5Whna1plxbxsLZC4OQBjaV74b+lc5bDUNJJuIZSp6c8hvp7A10FnrYt5nSQb8Eqw3HaSOOM1dub3TLxQnnJDtbMkbgnGeODj354\/GtLu1pGdk3dHNy3N1eyh7k7GPzBkIxjp3rrLe4tlURGNXK4zxz0xnn681RFlZi3K2yjKjLbTkAjv6fhmsmSSa4ixATDKgPTuPT\/AArK6aRl8L1NPUdFUsHhGVbBTawCkjjuDz61kXVrbxReZGvz7Sjr6N2960NI1ZGkGm6gvygHBI6Y579a150sb213LiMyKQzhuCPUe444qufldmaNL7Jxml3ot5pPMt9mcKVC5A\/PkV+qn7KviHwtq3hM21klhBqMREUsUMax3TxwgDfJgZbOeuTjByc1+ZEWl3UdhNevNvMQUEYycHgfNnt9K+tP2TIfEA8dfadJFu1uqKLpWbJdWP30ABO7kg9hz+HRh6lqnu9RwjdNH6nxWiYDKcqeQR3rQiiC1y2p+MfD3h6Hfr19BakZ+Xdk4HsOf0rzLWf2i\/AenROdMM2oSLwAi7Uz7sef0rtnVUfiZzcrex9Aqo9KjurizsITc300cES9WkYKB+Jr4O1r9pzxZqe+PRhb2MR4DRgO4z05Yn+VeJ+IPGWu+IJPtOt3k1wTnHmuxGf93oK4pYlbRVzVUW9z778QfHz4e6EZIobl7+VM\/Lbrlcj\/AGzgV4R4h\/an8QTxiPw9psVvubCuT5r4+h2qK+UBcT7yXJYsflQA4ArobCPzFBkTJOOCBx3\/AM9K5amImbRorqdprHxX8feIJmi1DUL35QMpFmOMhug+TgmsGAPPMZJWkaaXAIZixHtz39atkSQxgzfu41GB6\/gK5TU9fuId8EKfZ4scvj5z9fSuK86rsjpUVHY6t5bHTSrzyork4GDuOR1z6VDLeT3EZ2HaoGBnjGK8sOpbnT7NMznkcAKWJ+oxx9K0oNT8mTGoyGFnHHOBjHr1\/Sm6NlcnmvsdNNe28TrDPMmXUvhgTkD36cVYaWWYrMgV14wMkHHfHb+hrCab7UYhCFLo2cMdw745PWrpnktkQTHe\/HGBgn3znHPvWb9RtmzBLLEC4zGccqRk4\/D+lVn1SwuPODyKpi5YsQCPfrx+NZlvNcKkkd9KHZskBOmM8KBnr64xWXd6TpN\/G04UpKclS4wSAPu89j6VDpxl8RLjdaGhJqGn+cI47lGK8EKw4PvWXeeINNt7gW7MztwGEYLbfriq0eiJeRpZXVvH5R4BAAKfkOQa6W18M6ZbgKeF6EyEdP1PA4rZUqUPiZHs0ZY1fR2WP97vbrtUFmI\/DJB9utdRBYWmr2bNdIXhkA+Tb1A9R17flU9tZ2dtzaKJCpyMqABj3q60rw4RCTn7235R+f8AgKd4rSBSjFbGI+n2EDq1rbRR+WQd4UbjgjuRn9a2DLIZmMIOOzHnqO2RSP8A6QPLkXCZ5Oeme5rTjtbONClqzMFAwRyMd+lEp3SZnJ3KSahdw7gB5n8OCRjjqOn680kHn3pcqvkIBl5XcEfgPT64qKIqJfNlCojH5WPfuOuKusV2GWK4IjIJOzGAD+VdMUorzLVluzbsTY6eu4nLABGdiDk\/gTgVs+at2u62IywBVxggj8f6Vxli2nRRvPO7sv8AEr9AR2JGc5x0p8N7bXCM8YjtixCBpSRu2nI2gdueOK2UbvQrnSOlf7O0jxz3IZxjKRfeH1\/+sKJrlLeIksYlPR+GxjrxXLXk0gIEc4JDEkoT3\/vdKzWYySHbIwwOMZwxxXXClczc76RR20U9tMFkjcAIcr5gIJz35x+FWDMFYOQQx55G39a53S5kjYG9kySMBcEA5\/wqwfOkYpb4QMxyZCfwIHPBrqkktCZTsbq3AY+YQCw5OMHBxVqGcryy8jknqcH6VzruUZVaURsDgHOc+2PStSO+SLJG6UnHfpjuO1aQ7BzdzZS5V5d0J3LnHPf29fzFaSTpKnTDeg54\/KuVguFR9yxZV2zkDd\/IVqiQKysw4PIw2OP89aqcFITd1qbx8uUbHAI9DzzUqPFbodmAD+ANYL38aDYp2nBx7Gs7+13iYZYOp44Of07VnGlJrQzU7HVeaJXYsAoB74P6irClX+dGDD2rm4dQSfau7\/gIxuq3DIiSGN1Kk9wTj\/AGtHSdrml09UbxkVmCsuSKcGUkY\/L0rNMDKMliT6k9qjt9N1LUr4W9ikkvHVTx+J6VMYXZnc1GiR2yvIHvSLGCTsP5V0+i\/D68WXzdVkIXtGjZYn+Qrr5bS10hlgtLYI7dWPzHH1P9K1UOiYWPMo4Z5yBEDIf9kZrQGkXpB3Jt9iwrrrzVFgheOEBccZAAye9UrIF0Ekh4rdU7LUdzNg8NyZVriYJ7IMn\/AArZ\/wCEc0yMjzHdie2Rx9SBV15Vjwi+m4n+QrLkuyzSPnphRT5Exmj9n0O0x5cAdhzlyT+mawp7ppd9y3A+6ijgAewqNpHkJQdWOKJlBZYh91ev4VoopCOcvScrCerHc30p1qm9yx6dPyqOUmaeSX3wK14bfyYAx64rUbK7nGSOp4rndWmVElnf7kCE\/U9h+ddDIec9lGa4LxRceXY+V3mbJ+gpIeyueb3JmmPmsevJJ9axZkfGc\/nV2eVm+XPWsmZW3HB596w5TIryMWQp6HjHrWRcRxqDnJIrTlDr85I9azLmYN8oz\/hWLIexjSStE2QOh471RJbLM\/LnvWi8PO4n3rOmJI2rn3PrWEzMzLggDr0rDvGUARA8dSfetyRVxknOeACcc\/jWFcqoH3csecmuZgjn5iVjfP8AEfpXNzxLs9x3rorx1CbD\/n1rBuArnBHGegrFrqarRHNXazfcIP1+tZjRGMMzcnpXTNNGQ7XAwueMe1c5e3IkkJUfL0rO7eliWS6dKHusEDOMLW1bW6Xl0EKAqG7VkWFuAxlB+YKSv1NdpbNDpcKhmDXEi5b2HoK5qjV9CH3LM0X2ZQW6oPlUdhWG7zoMuoRM8AdWP0pt3qasTsfe5\/Ssb7LMjNLPJ7nJyOfTvmsku5DTuWnm3ksy7STjC+v1NVbsKgXy8kY\/XvSO7vKHZVRFGABz+NRtM\/Vfvd+Ooq1oDWpitd5nK5Lc9vWuhF+lvbqpGMDJzz+FZCRLJeLt4z2AxVm8Q5KAcDn8q0aTsilZakrahDcrj14py2Uc8JLNs9C3Qn8KxVTEgVQcnp61trftJDHCAu2P0HT1PNaxtFFrzMl7dxyh3c9e1RCQb9jc88gdK6KYQzxJa2ce5idzHODk+vpUH2KQS\/6qNMHnBzxQ5KOlwZSggaHLE5ByTjtVxAG+UlsY\/wA5q+8OFIXCKD+FMMizShM4J9OM\/U1z819RaFUQIrhsjjtUryKoIi2hupPUimTtiQKilu3HU\/8A1qbtjTJXaD\/dxkk0b6skczxxHc33mGc1AZpWOUYc846mnsoDlJzgnHyjsKdtgRcbth\/2RzVJ2LULkA87b5jHIH5UwOGb1UdewpzmUgRpyB2NQiHLEy8ADJqhWP\/X+EFlnjywdM55HQ\/pTPtzxNuLZ3cEdeaqEy52spGTjpV1IoBnecOvXjFdCOkQyxynKrt5w3HFbVv5aphGLCsaK3RmMcTbt\/VTxz9a3rLTJ1lAVvlPXtg0pziupcVcvIi8Fu\/cVYea1t4MCVTMTkKeR9MjvT1A2GMbd65BI9u1Z93ZxXz\/AGlmVPLyqHON2Oo2e36158qzb5ehq2okE2t25YQ7kDqDgEkkY9hxWEdZuVSRy6yKwOOMdOgz+lawstCMm+SAsI\/4ydoY+2OcfWtew0mycNvg8sN935vl9R1qXaCvIrV+Rx0NzZ6hIvnttDoQFOSCTx19qvb3tLaRCpKpEQvOQc9OK7ay8K6NHcPK0m4D7sZxjn8fX0rVexsvs5hlhUYyoIQggexNJV4bRDldjxSFnxIptslQMn+ID2H8uaz5bfzV822UBHGcnnL55GfpXomuabYWZFxZh2jYYZCxUhvce\/sa42Se4SXybhRAHAKgHIx0wK6YPnVzB6bkaawmkw\/ZpIElWU\/ODkhhjGfYj2qw+o\/aZo7i0QJ8uMYx+f09azbu3ZtRS0f92OWVi27k9CPY0lyt5p10URQ\/OCrdOnBz6VEqUSHqrM3FhS8ZUuCIZ0BIJOQRjocfz\/SqUlpMsB82PyXxtG05A+mSayTfNdDz1WNHz8+DgEDuPSumstRjuYxBMS4GGUZ43Y9fesotwdpbGcXZ8o23uZ7J1yxB4ycfoV9DXo\/gC9vNF8Qy6vpeoSWqyxMHit3ZfmJzjsMDrXnK3bJdr9rj+4CjA\/NwfU8c1q2t5Y2d+qQBo7dSHLDJ9z2zyOKmatL3Dri1ue86j4gvLgNPLO8srEHcwLlv5VkRaox5eMDcdzY+Uk+pHNUUtA4BJ+8MgODwT+FbUOjW5UNOwGMHoce2Qeah8qRtZkVpPFd7ZFiHPRVJbjPXGBXUw2qyNh8AgZyRjFU7VI7bEVqWyRjccDn0B9PpmoL2\/vIGAtFUuOWUEMTjsM+p71hJ3dkU9NTeFrY2oDM8aZ7scn9elQvfwWkjqkrMTn5m4GfQetY1vcpO73N5GFO4FVYg4YZ+YA5H5VzNzq1o1yVkmMxJKiNT82T35pxhzOxPPoa2peJHkkaOWRUJ4XO7I7GsV\/ELIgiglDsvLYXG7HJ4Jxg1UutTimQkW6Avx83zbcY+uazhpum326dJntlyTIuBlsehyMCuqKijncm3ozde+ugm+K087f0A\/wBrkjGBxVqa5Cqry2ZiiQYRsZJA4PXB\/EfmazIvEC6fb\/2bp8IMRLbH4LE+x\/8A11lWdyrvHHcBVdxjIztKH0wev4VU76ztoPmtsdnHf3LyxG2tx5B+YsxA6d\/WppLzU5bnzFhjmi3Z2kjLH2zjNcw9lHazGRL0+UgycLgDI75P\/wBari3FjazrM9x9oZTuQYHy9RwQcCuS3WK\/MwUurZ1Ect+rIECxhAMJu5x1PfINWPN1LzBttvMPB8xpAFX36cmuXivtIuCWuBiQkk7GJYZB69CKmS8t7cDyZzKp425CE\/U1LizX2vS53FvdspZDKpUYVgnT8fpmriz2IO5mCSEfxfLn0xmuCS4Wa7MjXSxKoA+cdh23DIIx3PIrEmmke+dN8nJx1JHPIx9OlY+zu27j5rs9jW4nwcEJvGFGRnH1NXktxEAWkRpNuPMHb1\/WuM0qztTbByZEKYyMnJPbkjI461jX+q2kt09pDNKskZ3BmbbEcdRx0H1q6VO+xpzK1z1W3tbFg0m\/zWGQGHTd7+uKsBvITasxznDHAH4cCvMUv7yKyaO9lEBVSR5Rz1GRjsags9YtW8wieSbYq\/ueBk5xxySTnmnGlKT3M3LWx1OuX2kzXAhuMzeUOUB\/M8c8VPbvbX0u4Stst40VFIVkUdsJ0z2Brkp5dKurlrq+t2wy5VTlXYjkg469KuQ6tabWh0\/jZg4QfIPx68eldzhyxSW5c09Etzc1S8tLO182GMSFcYUkKAScdBx+dYaTR3wU3cuJ15BJ+Uei+n5VRl1GxSRlYJ0wOM8+w\/rWqkbx2xlBTc+fkPBIIyD0rvoLS73J5BI7jyC2cs49On\/16u2+rTRReUIcoPmPGSPz5xmsqH7WH2uo54yx4P0rU+3WQiH2hBvXgMQcf\/Xr0VbdlWHzFrxBLEh2jhsjI\/DvU0Op30G7aOGXapOQFyeuOmfrT0vVaIBUycde2KR9QKJiMgHsCO\/rVb6ESj1J991KA8o3bQec5\/zirFo10x2xEjPGcdfyrNEctw2ZHyxPRDzzWrtniyjAkjgYJHFaXJsbAubiNVDNwg6qMfn3NL9uux8jHrzk8nH19ax47tEbZIpJHpVxJCwHr+vpVpIWhpQ3EqI7KV+jck5PBGat29pgtkAkc\/j3rMjUlflU\/XtWzE+ACwIx1Ga0vbYaiPSMLICvDYq2006xbt4Hse5qDfayDDM0ZyOcdKuz+TGihfmyPvetTuVYsaXBf61exWCsdrtz6Kvc\/hX0DA9to1ktjYqFVBjjqT6n3rz3wXZx21q+olcFhhfpXVwbrm4UHnnJpvUg6qK4lihRFP72Xv6DvVTXNSSzsi3VsYXP86VGzKz\/AN0bRXBeJ70zz+UDwOKUY3YGf5zz+XH1LnP5mutUCPZEOijJrnNEgMtz5h+7GP1reduXf8K0kNDZZuHkNZiEmJM\/xMWNTXBxBjuaZtICj0WmkDJbNMs0p7dKjuT5cMknc8CtKCPy7cD1rN1DosX4mgDLtYNzKPxrWusKAg7UllFjL0lxyxzTAxrptsR968v8Uyl5xGDwi4\/OvTb3sK8m1xt9w7U0EnocTKMGs+Q8etadwPTtVcRA8nkVnJ2MzKbJTGMe4rLlUA5\/Ietb1yc5UDj3rFnGH9hXJITiY91nAA+tY11uMRYHHPSt6UqzMSPYCsa5UbDnmsGQkYLoG5PWs64IYnPatmVEU5HJrBuX+U47mueWrKtcwLkbiS3QVkSLtViCMdPc1tXSgRjJxxWBcSSJyenWs5K5exgXkQI8tByewrA+zyzSCGMbmPAFblxIy5wevWtqys4LVTNgNKByT2yO1YTlyIyeuxn2NgLVC9z95Rj2xUWoyxzjdn94R29BWzOkjws6RlgOc9vpWRBp13LcrP5J2kNnI44rjUrtybBJo56IyiUsgHpVsQ3Vx+8ySDnH\/wBatxNFuGkEfl\/M+CCvTBrprTRIbLIJ3sv3c\/yxVOa3BI4cWt3bKzOjMq85I\/KoAjyRlyMc847CvSpboIpinReeEUYOR7nNYjzwqzRxiJG6FVGcD156\/WoVRPoKVk7HBQ214LkskbZ4IPtW1cWU9xCI449s\/U57j37CugguDN8hA+THI69elBeWWUAL5nzYyOv49v6VrKbCStsczbWTxxpcFyp2lWH1yDz6VHJCSw8vCrjJzXYSaRHdWzXPmMJA2NmMLjuS2azhYQxjIAYn7245Ue1ZqrFkXtuZkUcdunmRNl8c575\/pSC5UgFsA46jpVi6tGuJGclDtHJU7enQAVmooJUY+U88c8VaSepomnsWHeZxsUFlB7jI\/OpVkCgGOACQcFvw7DpSMEi48wjqcYJwah2ksGUkZPJOR+tFkF+xWaWQuFk3Hnp2H41q29iu9DKRtJxuHHNVWRYSJkkVVzkZPOR7VQeXzHySzkn1oeukSmrbmjd2+nKP9FmZpiTzj5fzqvb6ZGyCWd2c55OcZ+lVlSNmz0PfnipZzArBt7OOmAMf1NFmtLku7WhZNzHCxEEQAHA7mqc0yyqXEZDnjpxQqiRx5aBcepx\/OpzDbgF5pSeM7Ex\/OjREW6H\/0Ph57Jm5RifZqcuno58x2K46g\/41srHnlm4\/Km3E0Vou9m57DNYuo46I7eUfbadEqBsYGM5A64qVL6F5xCRycKAfU8ZxiqQmuyoeTCocHI5wtKqSWwb5hLOcgFl4XHP6cc1zyab95l2tuT3shiuTtiLcYOTjJPbrWekE8qfPMIU93LYGewA61zVze6kLtkkcnYCzvggN3ODiory+u3ZYbdHLgA7cYODV2090fOj02ytdJgtWG7fGeWDgetav2jS34jG98dm9Onp0rzOe21dYUmUgRMuHLY3DoccZB+oqn52p2aefErvGBywHH+RWUqcp9blua2aPSri1ea5F0sqLkjKkY46ZznmsG68UnTLhbK5Ckkc7Tjvj1Pp3riH8QPLG5yZCi5556e1Z8V22rwSwuirKxUiQDDCs40XvPYycv5TfvNcS71RFgkxFIuT6g9Me9T3WmXMs6PencBjDAYJHQ+1cBI01i2wLvCvjnI5HRsHkGvT9I1m2lgjiunJRx8y8foc5H5V0ybgly7Ex956nO3mmQxpFfQ4KxP16HnsfXmmtcK2orOqK7NgsJD8ucEZA4HTrW5qcaRyC3tJFME\/yrgZOeepH864uF5\/MNwHYrHnCNjaexU4HX69a1Urx1E9HoT3MUN0u2LFu38RVeBn2GaxrSe4tplVVDYOAx4\/D8K6LyjLaJeW8bKhzGY1Of3jN8vBxxz1rI15nikhR4wnybWAGPmBwc8nJ96rluZzXU6mLUo7+yjtLhP3m\/wCVlILHj6Z+ozzU1pod8rvLI7MjEcopPAzx7VxOmXJ\/tCAXb4RZAGLZIAJ5Jxz0rtU1hViC282BnBjBIxz98ZHIP5iuWSlT+Ejmtqzu9NhuPmu90koGfkJJwegHqK6WA6m0a3N6jnzOAi5OB9P51xmia3Z20gBkAlXduJbOR7j69DXc2mrJcrs84sDlhnPPqOeMCueVRvc6IyW0mVZJNXdTGpZYlBIckg4HXdinaPKXy9orli4VppVJyGHQA8gCmXuqXKpsChh0WNOQc8DJqrbm7Ehjl80RI2Cq9WZeTyOOp5rRfCUpMn1C31e+nW2inUfMQAoPbrgAVat9DtYEZZJDGxyA4wrY75H\/ANepLJbo6iLzmO0wzRE5ycHDeucVpXVuJrcliH3nkZw2M9c1mqrXupmS0V1uc3c2um28IFm+5lPOG+Y49veuYubtfKkCQ7JOu7HHB9O1dpeWjvB5MWIwwBG0ncSOR1B\/OucGnRzzg3kpQqAW4wo9jx1xjpXo0LSVmbp6WObgt765ha52sIwCCuMrz3w3+RVEw6n9o2wyssgGSBhVXjt6celdsl3oUUciXU03lKxx5RHzD0IOW+g4rTs7vwy9632OGQGQjbuQgcjnr\/ia6OW+jG4pnAyNqFvGIr24aRSRmMA8j3z1qnJdW0nyR3LQljgqMYHvu9PpXoniaw8OW0UVzIDbDGCdxOWPXbk8k+1cdp9rZ3bLJYWskkYYLuxgY9zn88VLio9dDGStoTadYG5tzHZSlyxLE7dpbHUqTg9a37bQ722YTRt85UkrJlh+I4wa9A0tbO1tPLCDONpYryf\/AK1Y1z+6m+QuzJkjB4P59MV5sqylJqJnJx6oybKwtWTz9UnWQRnkAsoA4IVhwCOuO9aA8V6dp5+z6bGZZCx5OSFOec9T9KYk9jNKJ7qPajA4ZjjJHBzzjI9TXH6wlrZztPZSEbdr5QbuOueO30qXGM5e9cV09UeowauxtH1G6laKF5MEL95iucD0xn6VyF9e2kkzrbFjvXLggE4brwOBx7\/jU2lvBN4bitrvc8m98AEgkn+JgeB1qjDBcyOYHjWNUIG9sYYdOD3FddOKinY6ErRSMGa9urhjJO7iRRsX+EKB2\/KnaVcy2l4sjqZFJ2ksScAnnjvW7qfhw29v\/os\/mMu6R2J67v4QDXBedqpjwU2r1yF5wPeu2E09ImGkX5nq83iK5vUeMEyqrZJVcHB47DNNivtQtdxDOWyI2AHGAOhGOMd+c1pfDqCVtEluJo9wEhU8ckcHjPoa6+U4EZtx5O4ljhdwOemc05Q0tY7OVySdzjrd0JDMI2lBK4kxtGenXGfWr1pqLGQecw3KuPoAMdDWdeWFxc32UUq2MMzDB9OmSOOgxW1ZeFZXQrLJh9456deOo+lXTaMle+hqLP5kZkZ1kbA4GAfwHHb0rSsLG7vyFAVAAxAkUgbe31JqrZeFXbdbRLLJIxOZAD8oHp9a349J8QLbQqiupgLBpJGzu5446mupJ2NLa6ozGgv4ZPs4jDrt3Ejg4+laulWEMrkyoN+0E98Z9feuoa01GWZZp0R2Me1tuQM47g9B+dOtNOlsphOgRUPOM7jk+pIqlexfKrnMT2Ae7U242+SAxPY5\/wDrVuX8QlQSx8Fh26gmt+Oa3kVmmRc8jcBwf8PwqqqQ+cGwCB2\/\/XWqIsjJs9IXiWQ5zyc9c1p\/YIFXJAx2Na8UtpK2zBwRx\/8AqqSe1tihg3DDep9fSnGd9hcqRkxrG9g8UZJc5C+30qjYi4iQvgsfc1vQ6etkmxSCD09c1DdOtvbCKPLO3fHStl2Ia6mX9qJ3bl+ardqs926QNzuYAVXitefm6muv8N2Xm6lHkcLzWisZ3fU9PghW00+K2TsBWxp8exWlPaqEo3SKvpWwi+Xa4HeoYgMnlW7SH0zXml6xmuMnuc13+pv5dnt9a4iKLzrpU65NVDuB1GlW\/wBmsN5+8\/NNl+5j1rUmAjhEY6AYrNcZkVancZUuFyVT6VMqbpNv0pGG6YVdtk3SFqoCwy4AX0rBuB5k5roZflUmsWOPe+aEK5YjTZHiqMoyTWq4wtZ0gwpNO4HNag20O3oDXkmoks7E16jrD7Ldz68V5ddjLGrWw5HMSoSTUSKpQqRx7VoTLznoBWe4+XI4NYT1JRmTwgZ2mseZQTwc4ralVtpJrFm6HFc0iZNmVKNvPGKxrg5JHFbM5VclyOnSsSaRBnJHNYNEoypWJb6ViXCqMs34VqyOCTzxXO3km5vlPFZcupexkao0fmYXkAVz728tw2ADj1x2HXFbE6lztA5PFSDTHji+0XLbYx0XPLY7D61jVkqcQ33MPTtH+2u1y\/yQRFQWIzuOen411dxDpkN1FDJtCsOWBDHj1wcCsiW+V2EKkxQAHEfU+mCf1OaktkuXkxbqqyE\/LkhRn1J\/lXh1qjm7t6EbG5JKIFDxKUjb5QGI5HqBjnFSSXTwbrexkS7dW+dUPT6nGPaufubaZWNuZldxzJsOefr9O1T\/AGeRdoOcKpC44C+ucYzXLy6JphZPVEz6rqMQA2RIO4ZfWmC4mmYugHToT2+vFDvbup3c84O7PUd\/zqCe9jtYNjYOSMkDhff14rdWeyJdkV7m3R0diCkg6HqR+HXH0rElt52i\/ctvVjg7RtPTqfarF1eyN8xBGcYfOCVPXt6Gq098QoaIlWU8gAED8uBxXUk9jFyu7mWjygMsZO5OPXJHX3q\/BqscULecf3xAKAAYJ9D0pRqmwEqikew6HHUHioY4PtkZQoUIHXoCv8qcldWYnPXQ1V1WSa2kt70tvzmPywMJ0GMdutZcd1j\/AEdI8egLA8+pposobdQjYBOc56\/WoobB5n2QEdSR2BH496hU4pM0S5kRC3mi3GSfBPqf6VKYY4IA6tjnB4Bzn071Yeza3kK3J8w8d8lfb61GbYPGZSo2Hhcnk9uK0v3KtoUBdRRH7uSePcD8Kgk8+5Y7M7Rz1\/pW4LQ2iZuICoyAMjnmo0ktnf8AeYK5+XbwB9aakt0ZpMxooghzJn5eozyakM\/ymCJREepbHataWMSHEa4QMfmbG4j6dqzJ2RHMiKdwOF9KakmbJoiMYcBnlG1cdflOKlj2IzJB8wxnPpT4LWW5QXFyRtkP5VsQWelwfvJcvjGIwP8APHrSlNLc1SZzfmS\/ebge3X8aNwjxM\/O7kHAxXVTWpnDwQ7AXXKEcAj0xjt9axZ4BZkwiMSnHzFG3KD7+lTGopEtH\/9H5L8mGGP8AvZHeufvHQK8jqGQAkr\/Fxzx7VA9\/czMAXxj5sDj86z7q7hRiYss3GfbNec7tnc5X2Ftrh5pImYD97n5XPyhQOgXqScYpyzvJMDMvPIyPlGF5Gc9PwOTVa0P2h2d2+bIAHAOfrW5JDAlqzyJuI+XCnrjvVpJO7JSe5ZkMDwxSiIFMYfIDtznG0A457+1SWV99huWEgRTtKtlhliOg5zgADHXFYaRzX7jyiluYz97+IDpjHuKt2emXdp56ldzyK2HfBzn+Hn+lS4XTNdX0NiZ7e7VxLIVyAnDK3vwO57VmabE83n6dBLskKSOrS8KF9enOO3vXNXo1jJ0ySHajMWRiBkqO27pVa3N5bu0oY+aBscbtx2kDjJPp0GK3w8ZU3rsZxvdlTV9Kjh3yXBTzgy42dWB6nH+etZUSef8ANDklMbgvoK3zdQyRSCQAPkbFIxnHHPYUkt9amUTtaiaVBsMZPljAUDJCgE56n1rafdEvTUzH1A6hEYZ1ZhHj5jgE46Anriok0+9i+eJSN38IOeOvPtU1ncosjTGFJIix4UHA9MHrx7k00XJCzzRffB\/d\/NjC554\/i69KSikrIL31Zr2MD3Vu6mM7olLbclSWwR8uOPwqrIdQW0PlwqCRu5TJX0HYYOfeoorm42x3ccx3rwwAx0I449q1J5pLqFpYphAuSGUZy3GSfxB9qlNpha5jRfvpzchGQuBuGcEEYHXpg1qpc6farILiBpI5AQAybtrf7LHnk9KzoDctcL5bg7gNvI6gY79z\/Ot20ijkt5Uup3YsPlLYJDegHPI+lbRd2CRy76TNdRLcRp26gjr7is+FtrHIYFTjA4rt7rRJ7eIujSMmCWA6+vHT+tcuYLRSZJWIPAIA56\/zFKemjIlGxp2twmQSrbgRjHQD+tdrpurTQYE4MkZ6Jg+nb8KxoBbRwxXAUkHvtwpx\/KuggmtpInlWMKRxgYzxgDPsc9Qfwry66dtB8tneWxtWupotyI2h+8AAxIOFPuOnrXU6Nb6Yk00unys6spYl2yQxOOBnoK87uE8pZA5QLgEEH5vQYHXrUmkXf2e9hfzPlLYZQfmUdxxwQa51e2476+7semR3EEbSXEoIKYAIBxwPTpzWLe6jeTYaJDHCeAep\/Lk1oy6dPcuUAPk5VlcHAOeoPPOPpVmK23MVhcBh8u1MNgd8g10U+VasuMO5x62o+0NNehihxghiNoPetvTdVtZ5P7OViJACEcD5T0+6etU9R066kmW0UOkTuA4ySSD3ya1bPwtBBPC6M\/yckMQQ3v7Gu51YxSk2bXUTYewtJH23yKcYI75OOvuapXeg6VdGKWWN18iUSBvfOQPUL+lbkul27bN0W6RD19\/896uMspQqp2nv3rkljesR+1VtUYd1p9lfRK2oxLJ5bHYvXn1\/EVs2GmwCBTLF8rH91GvAwOhb6n0qSOwM8qrcsFXqSo6+w9K057mNFVomZtgx8oO3A6D\/APVXNOvKerMnJtczIL2NrUM0qDJCn0HHbA6YrlLj99MTAQvmEF1xxx3B\/pXQS6hFe8xthscqWyT6DgZFc9OGmcRx+bGqjJ3DGH7kD\/H0rOm2tGYuTZz95pcMzS2YRPLbDq3o2euTwPcYrkrPwfc3V4onkaFGG5XC4yQeBxxg816munTXNw8xcNDIPmQjkE+3Qc88VWexuIBIsjOSQSHHyknHBA9zXVGo46JmDb36GDcNp2ns0dsTDGrEqCTnd64b1NT2V2t9Ilm+WCHdhcDccfTjtk1TvtFF\/bbZss+MFsnIOfw5+tanhzTY9PLW1vCC5yWY5bcPTJr0KkoxhY7JTinZi35cQKkO0AAgbe5Prkdu2ODU2jaPBcQvNdyNHDtwGx3p9zCskzPFFuIYsoySfl4z6nAqtdPqDIyTqEDkbRg52gYwB0965KV5O0dDKKUpXO9tVghtIbC3UmCFdz4yHJJyWOMZznOK6BRBbxvJJnJCsqhsAYHHX868Zhn1RHitVlYdwxbHJ7Z+layrrk9wkTu0gQYw3yrxz+f4V3xpz0szrjJo7eaWGO982JUlDfM5z8wJ7AEY47Vq6FcXN5GTcMVKHsB2\/Q15Rd+etyJiwmVcbgp+79MV6boGq6YlqYwzLF949Tg45GMV0RhZtoqHxHXwXNzKrMjsP76tnPtz24qu1\/dx5incqpJHIOMfqc1FB5gcSW6hw6DLZyvPqRzTrw3E8AhkQKedm0gsT0yewH1rZdjdtm1pt9FCJAreZ5o2jGQKvLbSTR5I2BmztJyw\/M4INcCkep2sotWIhbqCx659\/etqG8eCUW9ySGB+YgnGQM4\/EVom0ZaHWRokbFFGUUfMCcDOf881XNrAWHl8y55rNimNzEPs+MHnBHY\/StKIucNGwjbGNxGf6g0OtbcykyZbFt58mPYgHTkn3xTzElsfLK7CvQOckVdSW4ijBBwRjJI61FPLG42smCOevTPfFXCqmwcotWRnNLKzb5Hb69\/y7VIk8cjfOSc9SaZujVirENx1PA5q5Fbw4J4IGOR6127mO5JCobLg5rtvCcA+0PN6Vx\/lxgfKOB+Neg+FYwlszgYyaS8jNpHVIu6TNa8gwiJVC2Tjd71oy\/fUegoYzA1p\/kC1kaHD5t7vI4QE1d1hiWNWPD8W2CSY9zitdoiNC5NZ68yE+lXpzzVJP4jUIojQZmrUtUwpb1rPgGZCa2Yl2xiqZJUuj8mB3qrDHirVwMkCiJKAIJyFXms24I8skVqzKGOD2rJu8KuBQhnCa\/Jti2+tedXByTiu28QS5k2elcRL1NaiZkT1kzsVBHWtmYisWfvWTQXMmedgCFOKxZ5j6Vq3ArHmAGayaRLMe5JY5bms51jPA\/WtWUAZzWRJEXJxxWMkBlXCxYIHX1rDktjI21OT7VvT2pbvVYbrGIzowVycAkA49+a8+vVVKDkTcz10tYGHmDc45wDxms7UZ4nUxybmKnkdPx\/CrU0wnje5v7jBXoigbjk4XaAc8\/8A66pQW6KhknDMCeAeOvTpmvmpVZVXeZKd3ZmU8Yd9gXjO4lutM+zSXe4IrEZ6Yxx9e1dHDDFdyBHjbcM5z09+OT2zWxBqek6TILe7U7ZT94RkYHGW7nA9qic+TVK7KfY4200+SCLfMx3tkjIJzznkmpze2yIzTeY+OyAFV+pOOp44rev9Vs9WuVj0eF5jGpXe\/wC7Cgc9MdQM+lZF0k7FFZkyW3bIgQQPdu9Zqbm1zKxDl73KjNKSXR3gbSRkLyxP4CqlxbyGFZJCVLYI4wufY963bhzANqYD4ABHQZrmbq4aQCKbc6cgkD\/OK6oXvYJaLUguIjK+TFgN90KoyPcCoUgjicxg5U4+9xjH161MGny0QBRIwNoyen0FSeQtxC0mS7jjK9B+HrW7lY5rvoQbBanzVbAOPkQY49Txms5po4mfzJQxZTgE4OT39KtyIsmE80l0yAQeg9CB1\/pURt1WYtJg7lH3wTjPpirTHYz4ruRXAZC+TtDN2x7VqQxS3dwTJIIo8Z+8Fz78U5I5I5DHIySbhuyBuxj9aqyW1vJlpWwqcDpk\/hTlrsaQuncbc\/YWvHt7Z9x4wwP8\/StOEWFlDJI\/zTDBTPIx\/I881QiisyicMdxHPQnJ4x9acy2EUrI2+TdkgHnafTPfFYyV0o6mil5El3ql5qKGQZWMYU4+7n2z\/SsbLxT5PBHII71oqwjhYMxG0EqCegrnprnDZx04HuK2pxtdJaAjVSVZJt6k5\/hHfmr\/ANl8vcxyxfggYJ4\/UVRsYCo8+4jK8jAx69zmtO4vFkbda\/KE6t6\/41EpWdkOLXUjOQBHtyyg4B4qC3vbgSkrEhCnHzcf161S\/tQLdbLsnb2ODzVi41LTCrBjubIwVXB\/WpcXs0LnexJqD3EpVrJjbqR86qTx78DisxZDCDkGQdwT1PvTjqVoqbolZPY85qOa7WaMLGpOfbHFbRVlawKTe5\/\/0vz9VWYYVixI79BTHs5YxsHBY5XJzyat2qtcKJJGCEDOMgZ7e1JJFI7KwURlvU5Jx3rivqdSSvqKivCUctubJDADg496DqE8oW2jjeUcEqFIK5Pc81YCiJH8mQmTOAR97IHT29KZDPLbmZ5IzIAmeBliT1OB6VojS1ieUNpqi7GQjcbWx3qF9feznW5ETS\/Lkbs4H09qguL9pjHJNHiM4I3HPTg5HasoXI89n3MkeOo5IA9qq10Vd2NW81mbV92SQjcbADkN2POcA9TjFWrf7NHbC3kikMowGx8oY84JB7jpkVYs57WZPt3QjG0YAwcYz9almu0JF1KgjiBAB+8QPw6U4tRi1EcUjJigt4h5uUJbkZwSMf0rmru\/t7hkBjO9C3zA\/KQe\/I\/rXdai+lT2phKmKST7soGOnY+xriYobhAsqDcGHTPTHrmhTbTuiais7JhFKZkMdnH8\/Rsd\/Q+mRXS6dpNrIrCckSdCCPb8K5qKWO2lWWTCrKpKlexz\/nite51F22yLuSRRtGOVbHc556VFmnZEqS3Z0lroAZWa02Sxk8qRzn6H+lMutPs2Sdt5hjBKk7dw4684z1rntL1KW1lDSzuMdOAfbPPXFTjVJZbW4tHVC85JDKxXHUnjpz0qZRknzXKbVtEYCQ6eHkCvKVTIDqOM54J74zVy2t\/t80cyswywDBPlO89CD\/8AqqpawtuEVxGUUL2z8w+mcZrq4Y54ofs1lEh8xeXBGFX6dc\/WuqKvqZxV9STT\/Jt71raZmcqp2byGLH3OT09KZqGnwhHmlcRzNnleAfcHnn2NZ0sOnwTg20jmRiQZOpB75XGPritTRZ7aWB7a5ZXx1x6cHJB\/nxzWNSUoalOStYyIrebyAhJPOCQSVyenr+NdBYW8rBQDsMZ45yWHpzTZLiG1mkg+cICc7AAGAPB3c9v1qIa3HEy\/aF3cfKewHp61xSk5dBJJx1LWp2V3PD57hiFA6Nwp56qO+PSslLiazgQkCMpIVO7k7+o9eCBjrXXabrDKuIivzZZh7nt+FatteWur2xguDGzIwO1l5UDJ4596x53HSS0M3TcbOJr+GPFNrcL5F4V8s7QA3BDY7e1dkEETEr5MMbZI2kD6\/WvAJbddMux9nKSLxtcEgHA6EHp0r0u0upHtrW9nYbJQuVB3HcDgnGcjPtUqDs+V6HTz80bpnoG0dUkeQ8AEgY\/A45qOSObczP8AMzH7rH\/Cs8T3GSI5R6KxG3I9hnP6U+OJXuWdmGQBuVskg455x0rntbW5hLozYMEoUbAFz0yfm\/D1FNgO0fvDxgkk8YHeq7XckcZiMoZQOMgZHHXjJ4qrFM8kazuN6fdx2P1Apcre4pXuiv8A209nPm3i8xJBvLMTlV6L8uOMntUQu9QnVmiuCkZGSQvT2AOP0qj9l08GW71Z2tpn4QKc4GeMA9BVfUJLK3gWCGdlVcN5wPfHTrjJ9K9GMI30NlJp+RnXF35qBzO0Uq5z5mMfXjJ6fjWfda7qCWUZguhIUJXs2R7jqAOxxWXdRLdvtSWTLHLvngkdiMdeaoWtnbanMXhdnELEZHr+IOa63Til7xM1FK70NKHWtWnO5pAm45O0E5\/wrSsL+8ubpxdOXKYZCSScnggE9BWlb+F457YSRHY5H945z6c\/5zS6Noz2c73Xmu8oJ+Xg46j8ampOHK0jGbio2iacD3tz5qREKHO5mlwcE9++c10WnxvDbmaWVWfJUheFAIx36fpWbDYW88bsuTuxlRjGR3\/Xmuivo3sNPjkkXCHa+Pl3HOSC5HUnGa4JzWxCl7rZE06WyC6SHzShCIB\/Fn\/d5I\/GuOvLnUr1ncEJIPlTGOB7f\/qrrzcPlbdY\/MVSsu0sBypyFGOxHUd81Xjs33OzdSzSY7ZJ+7+XrU06lne2pLldXW47w9oySaWNSmWUScqzOMsNvJKnrXY6dp1u4+0W8zTE\/dWTkDHp8o\/MmuVGt3Etysa6isjf88peAGPYZGMDpW7ZyXU85S3kjLEbti4IHrwOT+NfRU5XVz2Vaysa9tZ7ryR5LOOM44xnk4+8Nox+dWYrGO2nN3BEjSYIPbdnjDZ4x6VzitrzXflwzMoPy8DA59jWqmn6zOG33GQpwQAP6Z61vcPkb1pdPFK6PGscgGQCRgjuB\/hRJbLJIH2MpPQL0A9c5rLNrPsCyWhkIAy2cHj9eajNxPavu+wPkgjiT064GaEtRt6WN+0srOFSxYyTN1kc5P6mpptOtBMJZ2G3JYuSRlsYAPtWdYyX0vzSWgiCtj52JI98AVuThpbVlBBKn7uK2RG6OeEs9pcKFcbCcY7AZraiuITJxc7hnHOOvsfSqkkMZVWLcjAOOcZqKGwjck8EjpxTdNMwaNtLxJJfKnmLfNjAbAH1JqaW6iVtudxPHB6iscWRUCMlAfXv9KuNaHyvklYfUDn+uKn2aT3MJI0IpYZSfKUHAHUdavxRjqwIDdulZlvBMijJXA9K1YlYvlzzV8zWiZlr3HsOODjPA5r0rw+hj09d3U15vsVpByOtep6Uu2zQetdFN9CtjqLdMRp71PL98n2p0S7Qg9qZMcbjV9QOQ1QlnNdDpsXk6cg\/vc\/nXPXamSYKO5rr2URwIg7AVctrAZc\/eqi\/6sn3q1cVABiL6mkih9omWNbJGABVCxj6mtFu5oe5JnS8vUiDAzTSMtU2MLTApv3NYN83WtyU4Fc1qD4Vj7VUSkea6w++4auWm710F+26Rj71gTCtSTImFZMy9a2Zh1rJmFSwMWZetY08fNb0wrLkTqaxkgMOVB3rLlO1jitmfr8tY84\/GueSAqOVVWkxnb2965e+Wa6kAlAIY\/xHAArT1CRobZ3DBcdc\/p+Ga5qMRTy+So3FQCCD+ecn1r5XHJur5Iu1o3LUWnWzvuUsGP8AF\/LHBoMQPzGXaq\/LjGWPPGBjk96uRzJFkqxJA6k+n8veqlwV8wtMxUJhsrjPTtXBGXQ5VualrdNYTSDSpjIzKQXKgrzjoeeR35rGlZxMWmUPIByzdefT6086vBPbyQRo8MjsAsmWwqj+LAIALfjVCVW8kRtN5jFhw2d5z1JPoD2qFH3r2NpX2WqH3pj2fukCjqcHBJPXpjNZcRd5d4O3bwFwASc+npirbRXLwFV528Z5yeeg9aZ9kwSXyG479e\/NbNieupBdCGSUh2BxwAPb2FZ7+SsjQByQTwoYj\/vrH6VpG1UQkkiN\/Q9h+H8+9VLPTBK5Cuh8xh1yG46c\/Wrilvcza5upnm2d2wnyIfbIP0Jz+NQTwyKjJGmQCOFyMn1rcurbUNKYQ3EQlxwgwdoP+91asf8AtR4Z2+yWq+ap+Y\/Mwz6fT+VOMr\/DqYSTi7NFSS3u7ZEkWPzCxP3T\/n9ag+xvKjzTkQsTtG9xu+uMcVJdXNyrmcOQC3QA4BP0HSm+Zcsgaby3GdpX+L8c9veui11cVxEg8hm+beEbGBz+eKfIkVwTMYijMOijAH\/1qmxZtHgSsoZAxx0XHVfftip4ZnumH2Ubt3G3PPTpyehx2Ga0SLWiM1YJp42eIqEj4+bgj2\/H6AVnXbTROI8uWzjIHyj6HuK0HSaSKS4XeEXkDBAfnB64zikeaFPLOE5GdpB6n61Qt9WVY0WeXbJIVIxlgcgfXtWmjWrgQW0WWH\/LQj9ST3qMRWgAdlVFHQAADP6VVa9guGX7K2SmTzwBWL97YcZXdkW3tdzgsxd2zhQMgY\/X86hl2JAcbV45yuR\/+uqctzdzXTXVkpdUwrEE4+btk1e+yXDBZJlPzH7o5GP8aSjZLmOhJK5irboXWRm345w3apZrK2u5fNJCgnnb0FXLi3UOx3q2TggHke3oKi+0FAY9nlbehIzn6dq0b6oyvYovYwwFcvvQ8+1TRRLyEycjNaKyM0INsN7dt2B+PFMC28WDOjPIP7mcUc5adz\/\/0\/h+a0TLSMyo3BwTg1G8bNEyNInydyMYU4zg1U1KRJZfMDCXgoQD909uD\/OopFJUy3z7uBgDkk9hxXC4u1zslAfJJ5b7YAFCjOASc9uvvWtHCl6rLAx3iMsypknGMk5HQDvUKFZbQKIm+ViWC54HGcAnk02xkVA0lkWgkXIyGBb5s\/hgihS0YldaHKPLa280kIZpUzuXjAJI49elUUNxG7RfKXmGeuTg9uORXVXmglSfJLB8j92Txtxwc+1TW2kyxRlhEFwRtIAJz3571uppK4PbU5m2ik+zsjsSh52jj5h3NWra6jjjZ5CcHACcY471oQWl1abojuAJ3NIw29BwM+lYE7NG7tHtc5BV16L0\/T3ojJX1L2V0XdRujPmCDILAHcT7Zx+FYQeWNRG67nAG0jpj\/dq79oLyERL5kxGMYyCD+H1qlKL6HaY1CydG3Agj0IzWz1Mm9bjtyTMVeILtb7wGMH1x\/wDWq0ykqf3rDZ9w5GPxFUzFNybti7t0PoafBMiAq3y7fbIz9D696m3YNWXLEX10GhSJJOuSONuPep0WG3dXbJdDlwpPBHY5H4cU4zwmzyuyNi2MLkZA7+2fSoYZJJsBRsOdxLY\/rUynoaLsdHaxRXEH2lFc7hlR1GD1Bz1FX5dIeO08xZB5v3twxgfXHP40aZOsWmqHClYiSccYHUdO1Wxi5iZ7NjKoXOANh4HPHIrmhUadiGuU5a4tLyOJLqRkZ9zDCdfl4ycdM9vWqKLqSXDXUcjQE\/fC8Lz7d67ufS7jHng7CwLKmcdMYAH505tGu54fLKISqZLAjaT3UHnn2wKbrRtZsyc49Wc9cJdTrGm0ySMfvYzv3fl1\/nVSG2ABSGJpypO5UUttI65OOK7S21eK1hFjcQqduQ4YDOB7jH4Vq26pfia90pGNwSpZ2\/dRy8cow6kEZwe571hKpraw5VXT6aHH2mmHUraGTRLC8lk+bzW4EBYdgTjGO\/NUItTeznms5l+eM7SBwQR744I716eNYs9sljJavFGhVTC4by0GOQgXeNvfjoa4i40yy07W5msQoTzBIjnLcMMnkjoM9xSU4u9zONVt6isY57UtJn59uEGBjPUnufoK6zw\/aQmFDJvZoQFQEfKVPc++c1SisIY3S6MW2Mts5BYBgM\/L0\/Edq6SPWEjlRgqtG5ywAIAIGPqDXLKo9Ugj1OnhW5CjClNxIyp6D1PUVZj3pkKgZu3OOv0HP5VSsZC1nv8ANyinO1iS3POATwPoTVi3vYZcMoO5jwDkjHr6c1jd2vY6IPTY0Yo5D+8kj2bRyFOc\/pVYQyOxYLtz91WPPTNaAl8pRzt9z6H0zVe4jcnzIsbiOMHJBPtWcalnqRJ3Zy+ueHbjVDEVOWXGCev0x3NZR0\/XkMemtbGe2K4MqAEgdyM85Hua7cWmrswWZCSR8uBg7RzyfWqmsXFyEFrK0q7xgGPIIbsMr2Nd9LEW9zRl0209TltQ8PWdmn2KW9lhuGHzI5HzEjIIA7Y\/KorLT0twLeJERcqVYdz0Oc9O1W7uFlgjlmikZiSu4tmVSBjgjOeKFs9uxAG3Bs4Yggg9cke9dVSTaV2OulJIsRzy7RAIEbDHayk9RnOccY9\/pV0W93Yb7WUL5jEZ4AALDjGQOe1QtJ9mjwXXIYOmCSBjtjvj8Md81qeb9ohBkCIy9zySx746de9cM24nJKKaSNiCM7FtY4S8nRXcYAZRgjjjv+WKxroXVxJHBeMFIw0i5BAIGcHA6dvwrR1jUTBpj27Svz6BiNxHIGf51xVs9yuQYnKtnCknDHH4EAA5zTgnKPMzflTjY9AtrmOO3RCMiNCC\/XbznaTn6VWub1IpltYvle4UZxyB6Y7Z9awZlmFkVEhRlZWbC5+UZ6j6DtVSymuZ9SS5aPeqQkuqgDn1PGelZU6et0ZxhsyrdafNcXjRNl2VicdyFO0DuOfWvRrYfZY1k0\/dD5cZDrtCq7cdD1NcDdSTCT\/RMxeaAu2TqCQfb1rptYs7xbS1gjk8tiqjIUlQT15z1x7V7FGbtY7MPJK511vq8d5E1vPK4kgO75G29cbV96sNeI4Awynb0Q4IHfkcVnWOnLZWe0qZRjJckYdvU9Tz7VpQaP8AalEqh1UqfunHbPc8gV6Ku7anfqQxySySqYHKhRzuBZm9s5AHvXS2ZuXhPmIqfISMkZ9zyTWUsTF\/nAGxRgDuVz19iMe9WYFt3i8qQMXbDMQGwPYE1vGyV0Zs0bSWFplwdyphWGOTnqef84rZNo0u3ZkMxOSSAMD6d6ybZ7CCISRhgAe56+\/P5Vfi1HczbMJJ1DEdj1+laRkiWytNavFIQq4zx0yT+BxVeKW5t\/8AXJgeo\/wrqorxpULuysD0HTDAHGR+NVp4bOWJRuJK\/eLcfNWya2M2rHPmSG6O3f5YHLN3P0q3ZwiM71feB05q1Jp1uqkJyQeuOf8A9VQi0eA71OefzpyV1YxkrqzL8LqDt\/OpGyzZUHaB16U2KJT+8YdQOtW0IB+bkH+dZLRmajyj7eNnKBcYzXr2mR\/uIl+leS2YJmATpur2PSU+WIfSuyKshM6XHzAe1Vbk4Umrh+\/VC7OFNJCMCGPzb+NT65rqLj0rD0xN98X\/ALorcuDzVS3Ax56Zt+RRUswyacE+7TGy5aJtSppD8pp0S7UAqOXpikIrKMmnydKcgpshqgM24OBiuS1V9sLGunuT1rjdafERHrWkUM8+uuWJrGmFbNx1NZEwrQRlS1lzLWvLWXNUAY069ayJhzW1MKyph1rOQjFnHGKx58d+a3plyayrhQiFgpcE4471xV6sKUeabC\/VnG6gyT27Bodw+bKtkdAcdOaZoq6WzSC\/gk2uoUGJCfLY\/wAQyRn6Y4q7vV8mZFgS2kLedITtGMEDjjOO2ealjQXt\/wCXp7mSOU\/PKflGec4GeRXxWJxHtJSbZU5cqvHUzrjZbsY4v9WCdzMBlh696wbxp7l2WBcooDNkeo9Mcj1rvtSsEtkjMUglR9w4HORz93JOPc9fSubvFW9xGxZTtBUSNsZvwIGB9a5qc1LVHOtCm+qW8CW6IomZuZI4BtTJ4BZu\/T6d6BbyX58xykag52JyM\/XFTRQafBFiMeWmCXZyMY68dc+laNpbaa8bmeUxoRjcBjd6Bfw707xgm0F9dWZEqwxKSGwTxz0Hv+NZM9wpkaLdnPdVzzXRarFpFsI1h\/cqfvFiCMj8\/SuZuL60jZWtZTK5B27OM546dMYrSlLmSY+dLQzrhY5V++7MSN3BGfw6VAHNugeEMASMHnpkfjWkiOAyx5wQSc5P4egzVO4t2NoXbBduhH9e\/ToO1dNmT5lo+IbgRzxvI5diMNyzrt4G05+WuYeIs7ywTtDvbLr\/ABHnuRz\/AEzWg4At\/wB6MtGQwHTIb1Hf8apG6ivH8l22KoxgcDj1P9KuEErtIzbk9Gyq1wZXCST+bjJ2k7QCT07c47CpDpdxuBePAz9\/qQM\/XinS6ZaMwit3LSSHJdvl2jrxz1P6Uttol8zkwXrPDGC7gNjAHTGeprS6WzBxs7CXM+i2cpjcGVinQENnPTBwP5VXe5W4tG8tTEsbAxqw6k9eOo+ucVqPYWKwpdXHmbnGIyABvI7E9vesuKKad2gjO1nYbecAemScCqguoJEqSSxyQi4jjRYQQx\/1h2seuCR0qOW0s5y8sJw6twVB2n35OM+2OKqxafILgmQgEPjGPmYdOBzmkjsmSUiFW4DbM8HrwT24rc0inbUlVREv7\/dJnqTVGRJFcrEuc\/e9Avb8a3bdLlYh9rIDL3f5mIPqOmBTbyCKGHzIkMmclmBwOfTFZc6joWlpoZ0V4kIFugGFJOev\/wCqteO4uZURUkCLkHg+vPJ4ArkHt3Mxa3BK9RnuPet6wIjufNv1MihflVW2gH6UVIpq6CL7m1CNMmQ2sLqrtuYnHJOOD7Ad6z9i\/NG6q7qAFK8rn+tVmi+0StJCFjLHLKDk7faraQG3DKflwOOnFRGNjSPoQu4iKiUqG7YGM\/hTVaC4DMzNuBwV57elIBbOCLgbj2NEk8Xk\/u+vpWjgujDlXc\/\/1Pz1ha2ubv5PMSN2Bz\/Fx2xmuiX7HCGEW3zN4Adsk4HTjPB7GuStDO3+rIGOAR2Psa6pYZkbbcDIYAjGM5+vWueex6Flaw9Z2WRraLJZvvBR371btrSV52KkgSqBjG4D164x+tPs47GBnnllLsDuA5HzenuazrrX7troxWhXczAk5zjHqOmKws9kTZR63NW8eO0tA7SbVRiCo6kj6dOKy7W7uBJFdFdqFuPfdwM9qxtfubu9lSCCVbjY5yFBChj7f16U0RagFjWWQojEDGOSfYVrFaaj5r9DqdWuIXVrdot5QY3BsLuIxnA64681yzWDpEp2Fw3HyDkkHvj+daNhpU0aF7gEvHjI5IwT1B6Us6iK4FzBI673wQRjHr9BRFpN2JSuzKS6urIusUO93ODjjBPTJGeBjpVaeKe6m+2XmFIUAbM8gfWu5ihtbScrqqB9ythk4+hJPUZ64rN1fVLG5SO1iiWCJemwc7vqeTmr59eUpxtuZdrok+pW7vEynywDycf\/AFjVK6sAkQkIyF4bBG0t7d8jvzW9c33k2ht4nCx7PlCgEkZ5\/KuRaaZgUeTCHklsAH3x1zzWiv0JdhbmIC3WQKI5G6Acce6nP55qeXUbFYoprncku3aSg6svQ+n1qOSQu+8HzPKXgrx9PrVOdxez+dcLlgCzdh26DoKav1IvbY2dOu2upt8co3DHBHDDuDXTPE2nKr2rKikcDPOe4wa4eG9SO7gNpGBtOPUEnpkeldI18jBGu2UiI4CsORjqDjk5rjqpydxp33NWLX3WSJNRUtEh528ZB5\/+viuhs9f07avmzLtLNkEYAXj09a8+kvonRIootuAcsCSMZ4zn+eadCpx5yDch+XOPl3elcsqSerMJ0VLVHfa1bafqdzg3PnLtBAVuMYyAPwrThuzBb21raKSAnlu2c8D1HfHtz+FeUC5vNGujeWoU7yu7I7dSB6A01vGlxBfM8EZEKsSsZJU89mx1Ayfr3qvZSa0ZyyjJ+6z1+K0iw7vHvZwTGUbYJGHUMMjoKr6xBHDGkyCMAh1jLMR0zlSP4WODjrn2rC07xDBq14YbN+FRJEDjkufvoSfQdxVLVg9rO28ljKink9cDGcHuPzrFU2nZhSi+a0jdi1S0leLzomiSEbd2fM3EH73Ufjwakw0d0s1rKzOS21iBnnqGxzXnv2uXTJibrIlA4VhnPHBxz+lWLTWJbudHmkK+UmHbA+VQeoxjOCQB7Vo6F9YncoxSTTO9s70Q3RifgKdxGccj09Oa9HtpzeIrQAqp+YADaD\/Tr6YrwzWPMup4I7KOSKOaPfG\/MomySGbcvy8c8cYxg817lYtJHbRQEFURRtwNp49q56qcYihKydjQEc\/yu7eWF4579e9aFvNGNyDCsDwSpGePp61nCeQptYs4PUnpxSQiSJDJJhSfugevsDXC1pZhJvc3Zd2GSRs5XPJ4\/CufeyiWVrppWAcbhuY7R+me2RWg1zM8eflBHp2x\/n8apOyy25RpAGzgKDk59SB7VMHKKKd2tDFe5iniZzMihPmVQCS2Dj0wPz9agE0LgOgIYY5UYB7c\/Q81cZPN3xybWSTCkHj6fjVF9PFsrLblVRjkMxz9cDBOB6mvQhNbHLvId9tIBjKK69w3ODXQWN0ZkiuZY8ttIUL94kcAnPFc35EkFzGZPni4GATg+wz9K6Kylis7d2dCkszYUkggY\/D8u1XNq1kXTu9CtLcMt6LZzuWMYO0bzvJOSTxgDrnmr4VioZwHI5LEYznn8+3SmQiIszxJvZ2IyONx9TjFWwXRQzJxkDJGRnPHI9s9awqSVlym1W0krbkT20ZuXePAd4xlsAqOucDv+NQ2NlFbJvw3msDvbqAQOFI44\/Gokka6kuZQ5UKCNq5HII6d+K6CJIFQRsAAOTkg8DAOO30qY1XFNHO7pNHKvHc3l\/bxM3y7yxYLtznt1z2rqhZXF2oN9L9nhzhIypzj6r1z0\/xqrFF5V00sbhvL3YI7D1FMS8na+2mVRFJwQ67sY6Y6Y\/xr06M0lc7aElFe8zTkt57CfdcGVVxiMR\/dQZ5J+o9qvxNcM7t9rZxICFw2xivsMZrIXUrxQ8KhpuhxyR04xxkDoODj86lE6sWktpVhyg3hvvhuemc8ds11e3ulY7FVi\/hZopNbImXeXcGwu4tzx1GDz371bs7W4MKTG5ljcgnrkYP+FY9k07xGO6kVypJVlHI\/3ieABV6O+hw25xvxtJ69OO36V0xqK1gU1uyybbU0nxvdwMnIIP8AP61uWUMkB\/fyEyHsRgD+lY1vcSQqptpeXXkY7n1xk49qtvcXbsrGIsV\/2sA11Rbt7orpq6Oq5kbG4beoBOMGnNLvQRJxk9etcstzdv8AKQqqPfp+fWtKGSYcFcgdce1NKaOebfQ3Q8isAQcEY5HUCrqLHwCN2Omaw0uXkcH0wOfTtWkju2Sucjj8a0UpGUZO2poMRHExHXGAKrqRjcoxn+dOQSsQH644FW44JGABIGfSuiDtuNlmww0qccCvYtGXIjPoK8js0RZ1UHOK9h0QfIp9q6lsQbjffrMvjgVpn79ZN+aSEGkJ8zyGrs\/U1Hpi7YCfWpJetN7gZ0gyasKvIphGWqyo5pgWB90VBJycVYNV260kAg6VXkOBVhuBVOY8VQGRcnrXD62\/auzuTwa4DWHzIa2QzlJzzWXNWlMazJaoRnS1mTCtSWs2UVLAyZRWVPxmte4IQZbgetcVf69YxzGMTKGAOAT6ck152KxlPDr33r2IlJLcr6lqVvZKdzAt2Ga4G91e+v4xbW8zImWHHo3B69\/Q1o3+m3F3Il00mYpRngfMpOfoQDVD7HHp0DeS212PzE8nnt2r4mtXliJe0m79vIlu9uVleNo47T7FcTtJtU7YnXOGbOHZuemapW1teRXDm3IR2jKMwbCbSOQD1zz2qzHFNI5kuH8tVUK2Tw2e3HP1rGhRI9QiWOMzqTghuFH1x2\/CkoqzZtFbt7HSaVp88DyERq\/l8I25iQD\/ABYHrjgU8QyNGLsQDj7zseOvpnOcdjXXajJDaMdSuRHbwEKsS24ZARt4xkk885zj6VgvqenSKLeJjMJCeXJzn1OMbsVwRr87vFHLWcYytFGVclbu0lG8xeTgIxC4ZwMnC9eBjtjn3rAMdxcr9omOZJflRiAAnldRjkDr0711+o6IkyvcidINseVJBTcRjj5scn61xyiTyGhmVzlgUJz94dhjjmuqnKEl7o1JPUiurHffD+0ZdpZgobcdq9yQMY5zVO9sorG5jMa\/uXbLE4OVBGMgdM\/WpJZ7mx2faEbfw8TZGcHpwCelQi5uZ5BEVm3RkqNwJDY\/hHsMdBXVFdkJzS2RGbl0Jsll2qzfLtH5AknGfrVFrpJGMlw5yc4XPzZHcDoPpVu5iF08V0iCAKNpGCASckdec1iCCcOwZXBfoCACc\/TFaoi3UuCWM\/vBIFOOTndkenrTTADkKVlLNwGHIPbI44\/OqN3IyRjcpxxhSeeTjAAz\/hVYajcpIwA24PG3I5H9a1igSR31tZ32qWKQ3CEHdjAAwSDjk8DHHQ9ulZMlhqVvJE8VkHiI2B48OMnnPBIzgHArPt\/EU92wtplS2g3KZTACrqBwSDnk8802V9XjjNlE6C2lAeMjBwCSVyR0Jx3pwpKLNbq1jTmtYnYE4WJgWIkUJkLzleScn1A9qntLLTbiCTcAqsu9SjZJC\/wvjJH48iuZ1K8u7sCV0XcuOBxwR06Ae9aWmNcIpgjB\/fA8xhTwezZHT6Vc3ZXRpFpskgvrWKKa3gRTI\/CMq5Jx6E8gD1qtPLf3b7lSQyHC792QB6DPSuhsrS2tGMgGJSCCT6VNdXkcY\/dgFsduOMdawlX1tFFO70MKz0C6x5kszIxPTg5H1q6dIVFZGm3K3TP+FZsurzujBGx\/SqsdzOyEnnFZPnlqw5Wi6+jrJjbIqBRg\/Lxn86njsoVxiQGQYySODjt9KyPPnHBfJI5+tVRfSRv8zDk+taWls2Jpo7B45F3LF5Q8wYJ2gfljpWINNkdGDcE9OelQreTOind8vXNM+3Tq+C+fp6UWa2B3ZeTRlCbZnLSEd6QaSI237sYII4qs2pyKyhs4702e\/lADRnOfei89irH\/1fgmz0uUkS24Hlhu5xmupMOxQmFBOMk84rONw6FYlJwvpnk\/hTld9rDg4+bk15sm5M6pSu7EV\/pyvvXfv3HOU4wO\/rVSx0yKOQXZLdCvzDt0znofpWjumyZJsAAYU9D+XcVWF9N81uYmJHy5XG38PeqjJpWGpW3RsWx06GUeUFUFcBjjoPw5qC6MTyKrHzAM529fb0xxWW8t2t3FE0aiKQgZ7rzj8a6hba7kKMFKnJO1j+7HPXtnPbn86UpW1NL3dzHF08UgieTajArnPHA6MT29aqT6nayXGY9hRVAwOee+OKq32lskjBJ8ZU43D72efw\/rXHwSyQTcKXJOADxz0reME9VuLS53xtF1ZZCr7QinGcZyeg57eua5WW2MceLjJXfjI5XjsDVmz1m5sxPNOyCQgKgxuDEnkDsPrVAapcXkrmVVTcclQNqcHp6flTs0ym09C5GbZcCM4bJxGRxj1P8ASopYrWOUXEgU+aOQMfToO\/61qAaddW+XYRP6E8A49ayLOzhN8bZSPKLghm43e4NaKZNuhkRrFJcEoDs6jAx+Va6WqTy5HO4duvSrN5pqW9yC0iSRpn7nY+4qMuseyOEsHcZOBwvt6fjTT5tgStuUZi3l7FtcPGSS4IGPQn0NPlKS6fvgIRmOXbPJ\/PtTLiTYjgtyw+cjoRzz15rKgZCCqhj3HGPzHpSlF9CG9dRzWk8AV2dV3D5cMMc+opbaadZQqkDnJXPyn364p3luB844x9R9faqs5UxlE+VlI\/I88Umu5N7HRXjC40+RGX5gOfT25rjokJU78596sxSXDeW0xbytw9889OOldvNpllcK04fyyQMkjKs3oSPu9Dz3qNI6DSUtUcvp6XG4eSSPzx75x7da64QXustGkswkdFKo5GDkHPTuPf0q3pkME8RtpB5asNoYMF3kkgAen4+ldFYQ2iBU04ndEcZPUg4PXp+ArldVasEotnPx6eJ1FpebDcqflJUHI9M+g9qbdeHDFqAt3YKsjcouNyg55A9PrXeXWktcvHeWjGN4\/wCFgDgkY69Dz61mPp93ci4vE5nC5VcDnZwQVXnI9T+NKNVNbmsoJK53ugLnRLSG4yxjiCnOMZHBP44rabPIUHGMgd\/8965vQIfs+lIZHy0yiTcPl3E8e\/pir8up2VshR5Qpix3Gea8uUbydjld7m8jsOFRVA55Pt6Uk80Y46MeNx9O+K5qPxJYmCSRlP93ntgjn0yewqvFrllIrvICyn7wJxx\/T61Ps5djXoW7zWYJrUwWjh2bKbgeg9e2MUeH5XjEsKFixHLZJABHrXFxX8IXEbEDsMZ4pst9qGS9o3HHy8gHB+tezPDRjTcVuzdxXLY9I3O0gL4Vl4GCMcdORSRt5zmRcMRwzFTzn19T71jaXNdSWyPMC5ICZAwOM\/wCferjyXCzoIU3hcjPXBPbtzXkNWdjzp6bj9RLmNpmXCtwQFPOO2eOf0p1ndvLaxwsNssalWJX5gSepI9uBUBhFynzNkxMVAyW27iATjsT045ovLWS0uZUglfPRXUFkdh0znB\/E1rHTRbjhLXRuxYgmkgvli5JYnOeB6jj\/AOvWsZ5ZJMoQccevTvj1rBtoZpXS6nf95gE56c+x5\/Gr0ZnMxJVY41BAIYEt7n8amauddXla1ZPK3l5WIgYY45ycd8\/nW6oga3EkhIGCB32g9B2zXI30\/leXBG6NvAJHQrk5AIq\/NqYgtUJZS+duxSck9PTHSs+Ru1jnjFvREZle4aYW5G+KQqCMdxyfT6VUnhv7GFVkCPI6HJ5OOPvD3\/kafo\/mJc3UkiFVldB8\/QZ3cnPt\/KpdTnNxIZHb5o\/3Z4+8T2Hp\/WvTo2k7G8Ie7qW9FM17HBOWbKthsZ528ZOT1xiuhmihgCxqwhichpONz\/QHj15FYPhkwx2JZyPnkJPqOwyPwrqRLHJIrzKGOXJz\/h0\/StdIyaXc7aSXLZGTBbb590jMYxyDwqkZ9BW0thZsm7fyf4dv+NSrcCQhAOMD5d2Tn+WKlS2iDZKt+JxXqU5K2hpy23HRaYUX91Jx33cVoxQRDli8nrtUgZ9iaWA4yVbpwN4GB+XWtFCWAYsWByBxz\/8AqrfmS1JegyI2xAwhH4Zq4sUWMorKfpgUqTIoVcDHXj+dWopyG3LWiq+RzOom7WJoLZnwXGCPbHStNIX3DGCOtQx3DP8AK361bWdh9wA+tSm29EZ6LYuR9uMEVZV3GMLnNUIpQxZjweOlTqWXODwetdMVcm5ftVaK4G4ck16\/onMQPtXkFpuMyljnmvYNEH7kfSuy3ukGufvGse\/POK12+9WRecuB70RA07NdtsBUcnWrEIxCB7VWk60gIQPmqyo5qFR81WFqmA41D3qU9KiFJANas+4OKvOay7hqtAY902FNed6o+ZTXeXz4QmvN798ua2QGPMaz5KuSmqMhpgUZax765itYWmmOFUE1fvrqO0hM8vQV4zr+sTTqyhtwycKMn\/8AXXiZjmMcN+7jrJiZR1\/xV5kjKrFVx0HA5rgf7UujdRy24VdgJLMOAvfntxWnqGn3Mm0yhTklgCee3HHPSsC1ttQ1JZPscJECLyzkImD7nGa+NUXK85u997mbjDdMvWep3Ug2kl\/3hy4JIYHn8PpWujl4y0hDZXcFPy5Pp649ansbWy06x+yriSQndIx659h+lVrmZ7hVkRAW\/ugHOR256f1obWyRPMlsh8OrzpIllFBHGrn5zyTtPt0qJbeytLpjBCFIw3GSM8kcZ2\/pSQCRLJ1mbDyP827sMe3SqahI4meEoeRuPJwPbkc1PKr2iXtsbWnrHq955eseXIUyzFjtBAX5cE5Ib5ccYrnNWSztW+z20iiWdRzCfup1G5uoJzWJfXqxPthJWMHDNnt+HP8AWs4SK8rNC3yjqD3\/AK8\/5NXHDcr5k9Oxo6aaRK6mB\/NeZpmThdzFuvvmqovbiR1hZn3qeQThQB9e9Wol8x\/OliKLgk8YC+hz3zUUgjkjkkznYPlA\/oO9bpJbkcqLJu4ty4VgYz143ZPpzViDUCk0c7MI8FsORnt1xwQc\/wD1q5z7Jct8smUPB59+n51dEcsYQhhHIGy38TDbxyc9+tXZIhwtqjbM0NzJB8o8xwflJPLdyB2HtWNeRSygfZXe4jHJUJtdcDnnPSpZL+5laM2x+aKQsOMDk\/N+H5VK+tzSzuqII\/lAKqMrjuF9AfxxWq7kNozU06O8uhbox3feIc4I7daZdabDYM0bPkjAO45wewzmtW50+7vJY5rXBkZcsyZwo9G9Tj0qHUdKvvMT7SHaMDI2j73qQODS5vetcHHQ5iD7TZl7q2OCykEPg9eDkdPpV+003UlVbhWMIcc5A6duDUdxYxRt5aMxb+DjjPv9aW0gvkLATsQeSig4yPXIraTbWhNraM2LPT7mVws+HIPUgEt9R2ro2kitYhG3UdGHb8ahiuY7e3BzhiuD7GsaW4klJbovOT2NcjblozqhAfc6iA4dDlqy5pjJMxHy9uemaVUSQnyzzyQCfSmxwykeacLGThvXmrSSNbWM8l8FgM9jjtVm2yY2xg+tOSAvL9nydr5PHqOlTWEW8SQEHrgsBmruTcVYg0L7cBsc9jWXHGkr4\/u5OfeuhitikhUksApBwOT+FUpoRbuBCucDqT82T7DjFJT6EtkJECgbOSVHJJ4\/DpVZIZQ4fJ3KRtAyc++RwKjZXdyJSEHbtke1XbNfJfyw3BHXnim9hbIfdRSmDcV+duveqZwgSNxjAx7mtUTxEmIucehpsklsVy6AnPBA6VKkCl3P\/9b4zjhCxkghQBnI6\/1xVUQmYMxONq4C56Y9TyKl3MQTvIyoPJ4\/KoHVnc7W8ok4xjg\/lXlvfc7JRV9xFtfOQrDLgpwSefyHpU0cTRsWOWjiXDkfKoGMknNZ0ltOW8sxHHG8J8pPvnjt60gy8osZ3Zll2lkZj86e7DjIHTAPSjmfcG2RC7sbuWSND8nGwhicgHsTWkNRFpFHCmQD84L8Dn0zVAyWcHm39lAf9Fb5d3XY3ByDwcf7poTVrGQtPOsjuu0CSRAwQMfmwPTvnjrxVXvshe0tokE+uurbbkA7ycDGS2R0PtWdpdpCwmuRbnbGed+cqTwB9enas\/UDbKUntJWkZwXcYGY2BIxx+B+hrRutZItbUxXbqJFHnN8rP+OPm7exPetGpNLlHztq7K0yXEWIGYyMu5tuzfgL\/FkcYrLfzF2y7Ssf3t4GBk+n41fvfFM+pWhhFvhvLEPmlgW2gjIxjOD9ap\/abhkWC3YkBecr39MHtWtPna94m7ZHNbXO8\/vNoJBIA+YA0qYkuVS5LBAdvy4HTp2xmrn2r7W6WtxIowDhmAByR0z3rnbm4FvK0Kvgj7x9x6Vs49QejubksjIGsSTgncApBwR6ke1TRGbyZNu4iIAEnlQDXHfbzC2bcDOfvHkn86nOp31xwGILDDHPUU1ZCUkbM0bTxIpkQtICF5GQRnIOOR0rBDtv35HXHHtUn2kKJCXCEjsOp6fnVFZIxJkSfL9Kl+RLdzaQBhjzfl+vA\/CkSW1ScI5Dxk4JxyR2xWamoqh+RCxIxz9aehmu5BJtXjgD0o1e4rroakDWEGojAHlPkEN2I6Egev1rpEurC5cWcjAN1342gIM8fKce44rj44Uk5nbATIxnOT9O31qyLTy0DbCE6E+\/XGaycL6jiXxqF3Z3ccuDtUAKpGFZR3I4yffr7101r4purV1khhgSFT8qxrzz1OSdxrmJNQKxJAWzt6Z+brxjntis67uIn\/1an5OAw4wO\/T3olRi9x6bHqKeJTYWjXAlMIlIXhdwGeCBkkkHP1Haqtz4mit5EvdPlBBZWIHBP97OG4J9CK8zWO5vBvG+WJORuPOeldLYaWJLbyrgqhPOFbJzngccdPWsnRihxk9keoRanZ3Nms1wzRPKm\/C9ATnPasRIozMJ5JFJbnLY\/zxUsOmJColeUHjcVY5IFVZ4IEKtG6S9R8p5\/WooRhdxNVY67TbjTorPc7gEEq3cH0I960brWdMW2+zQqp3jDYXnnHX865m1e1S3jjZuT0H6n8qRr22t13o4V+ACMHd9ciuaUfedjNwTER7cYhI+c9gOaR54z8qgnHHPFYDvGXdoizHJOcdM++auLdN5SkQsOBggcE\/jXoym9Gb3O0s7u7a2V5P3UaEKgGAuRjt34zUEuo3sbvHGyqmTuIznJ78cc4rm5tW1R4z5yn7PHlhuA6+2OlW7CWV1Ekr7nb5ivPA47jg59a86ULPmZi466m1HJewuTdMyQyjBkQkYJ74PXNakNwqkW6S\/e53uTubHUfjTG\/f2kkUgO5l+Un17ZqjEHbYsQ3g4LDHQjqfp7Vm9UHKmtToGuS74Awm0D8TgDuatrtZNz4Use3YVybDU\/O2RJlRklQvQdfzz3qIy34m6bVU5YbuORjp056YpKnoaq1rMc5JmuGlLDIPbkkcfmeK0bG2u9RtISSyvkk4HzZzjp64AqpdtFA6pNk54Cr1XHrj2\/OtKzlJSRHB+Qgg55I6j8j1rXpzImna90WbaS5\/taeOdd6tGDgHO48cn8a2ZElmG6QxnALbVPII9jXLWD3jyPJLIwucjaw6Lg5AHXtXZaeY\/IInwzpkZ9ePY5yPrWsHy3ijWKtdIzTOkMjRQMjFyMKAQQRjnpyeeAPSrAu59xL7sEfxeg6k896SNP33lSEluCoPBORjJ7D866u30+2eNlx5ZcYPuO3610U0nqJJ30ZzMV+zSDY+wrwQqgfifWtgX9svzNM7t6dcU4aBbI4w+71IPPX3qd9DtUbBLAHkenSvSguxp76Hpf2rACLzMDk5xya2be9GeA+OmAwrEgsQp2qv41u29qVALKcflxXVy33IVzUgldsgDJPcn+Vbdq+T9w5rKgt0OChxj860kEkTYz96qcFbQlrqa4KDDYOf50qSFzgYFLCpKc1LCixnnjvTgkQyzGAnIPWri7jjbgj3NVYkQjJBHpxV1YwO5+ldcUkQ2aNnuMgzXrmi8QD6V5PZAbx9a9Y0f\/AFA+lavYlmo3WsuYbpgPetNutZxGZxSQjVXiMCqj8mrX8NVG60gBetTioVqWqARulMpzGmE0ICFzxWTcNWnKeKxp2q4gc\/qcmImrzm7bLGu51iTCEVwNweTW3QDOkNUJKuSGuJ8QeIrfTwbWFt1wwwBjOK569eFCPPUYm7as5zxnqgB+xR\/wYMhPTnkY9+K8fuzdzTtJAGZx90D+EjtzXR6jqIlnke7PmSv1HYelYE+osm4LhCoyQBzxX51iazrVnWa3Hra6RatC8USzS5VkHJOCcnr+PvUM015fKVEgjiBGO3Q+3as+Vjcx7pCTGBwg7n0\/+tU8LTPa+QQRj5cn07cd6yu3qZwpR+0SJZWzw+dCQ7FiDk\/\/AKhinrc22nR+VHjdnpgDLEH\/APVzVa4uBaxCOBVDj+8Op745rDeSSVGMinOM5Xjp6UJNl8l\/Q0LueZ4\/OkKkL95T8wH5d6wru6t2kUgbR6KTjB9qrTtBJiKXcuP4jkce59KriGySRZEO4HAXPAJrpilYajZWK9wwJx5a7Cc4OR8vcZrTS0t8xBk3EdAoySp4684wehxURsbi\/kWNY8YG4A4XgdfapjYzWkgWTcrBQcKcggnofpWjndJCeuhTv5omVoTk8hQWGeAAOD\/k1Pp1ukYC226RZEKkqu5\/MHOB6HFVbmI3Mq24AIjYbwP1\/GrH2pLSQCDKJyvJ6++3jmlLayBppaFwWkC7jIcy4yNzYII5PHOef8KyLqS4knzGhCE7dzDqfXnHapeWQSu2YmOMkYPPJwOfTjnrUsoht4VQSSeWoGPM+faTzgkfpQjNuxi3Vt5JKkhQ3OBn+fJ69BVH7Wqo6bOhwCP4fp3B981r3KQkDzWzJxsU8AsT16Zpi2MYwGU7uRtx37dxXRGVtzCW5sWF3e3Gm4hZYwMruPU4wcHHfHc1ft\/PuYJnEzeYwwWYbQyjoBn3rnrG8Gn3KpjcYixKqNvzHodxznFaq6755eb7PkOCpJY53eqjnIz1zXHUjJP3Uba6MstHc7gtxbeYGXKbeGGcDpxye3tUEmi3FptkUk5G5hnlFJxg+9a1reSXlwJUjAG1c88fKBwB1qTV3klDz2uPmHAxg4B6AmlGUk7MIcuqkzmrqZz9w\/IOOeprF3uXwT1PTtXQi3lEIEylSx5B6iuekQRzESZwDzW8Wtjpv2JFZEm5BBKnHTGfeoTK4h5PyjgehNM2tLMI0UuSeAOpp1zESxUKUGcgensfetloDHW7wuA8u8SDPzJ3rVSaG1dUi8zg4w7Dp64Fc0sk24oCoPUHHOfap0huA3nSB3JPzGhxuG+x1DSQmMNuz6EDnk9OmahdpVXfGgxnAP8AicHNYzT3DMUhxGr9c5wPwqR7uQRCCIOTt+8x4z3xiseRoiyRMyo8372LaQMbgcjP41EqyRhnVAVHUjris0pGrKWkLbj15zmtZ4QecZwMsRn9PxrRruRYrYQttAIJ54qSVAsYwCencYqBSu4uCvpknHSnSTRopBPykjsOR701Eg\/\/1\/iediPnJ3Edc+\/sBVEtIGMsxDE89uPw4xVpgbaDazKrsNxZugz1wOlZUjyRTANtUtxvIypU85yK8s65aDbjVBu2ldqDhiQSOentUkt00u21Ro1jZQABnch6jO7CjI6cmuVvJZxJJIm5lLMCwPGe36VnLcz3HmtPIzyAFiXORgfqcVv7JOzRCdtTcYWcbyGOR32t1VsA+pxk1Z+120G9YgytIvO7GMdeD9a5r7OSJCEWRWG4Nu2tj2Heq9vdyLGqFwyISQuP8nFaqLeiBTNnzoTKbkkxJuGT0ILe1R6hBb5N1aHzFyd7MRwc8Y9c\/pXPS3JYGTBwT17VUkmMhGAAB0rVKysJzNoTLuAB5\/SkW9hi+bLgN78574xWDuZjnPNOA70JWJ52aVzdQOw2LnHT\/PU1Gs8O0hkB+lVhGcY9RTvKYgA9BQ9RCh4ycldo9BT2vAibYhz6kVX85o2wmD+FQ7SetOwubsNJLHLdTS7SalWIsMjnHWrsNqzkFenSncm1ypGjZyByK14XlZS0aliOW2jJAq5YaXJdSGOMMWXsBkkntV86RfW0nkFdhzkj3\/Woui7WMeO3uwTs+UsCeen51sW2hTXRy9ycIQXAyfl9v5U+K3lOdzgY9TWnavJA29GDLj5vp3FKb00ZcUupNqWhWPlwNFJIkmPl6HIz+FZjQWsMm22iLMAAxJycjqcHpnmuqLRyW5kJw\/AXA6g9ye2Koy29vDCIsYLDk9yfr71zxk+rNXFFCyeDmIRbQx5ZexNTzWg3iONvmz3I5J7+1VjBbmYJGPujnB449atYdseXwykY7\/r1rW2t0IguLXUI8JI5A6euMf1qCK1dZP3krg\/XFbMVxcW+RIwIPYgH+dWpZIJEE0gy2TjA4J9+aLuOjBLXULa1toyN0pf6HOfxq95unTERwJiTOOTyT04\/GqEvkBd4GO3y9DmljgtJoCyyhHB+7wDzzmsWr6s220NiXSrpJyAgQj16cD9Tmql8t\/b8RSGRB+QIAz\/Oq8E99YNvMrSxfw56VqQXn9pqbZcbzlju4HTnPqai0r66oi7WrOcjS+umLSBpEQbm288fTpk\/Sra3t5A8cEKuzOMAydAO3pWiLN1milZCI1+VzEfzJArUXTxNF5jzMw27Ux1AHAU++aqTjpclvqVLfWr13MMqbCvVucY\/D+taq6raxxqizjCqMMB8wPoRVTTY3likt1jVZUHIYcn696rX2mmK4Ek7qXGCefvZ9v0rKUI8zixpm7aajcTyJHGA2D6ncR6\/T609J4pr8TJIpxmMK3UEHqR6d6oWtjAFUoQkrDcSv+PWrb6aqDCspUAsDv6n\/Z54J561Fo7LQq99EX7+3SKJJLYsmGyzseOepyfU1et7dYLdrpEM24bMKfu5PJ9xVKLU3uCLcwnYU5DkH5R\/PFaCy\/ZLQQ+WQrZbPpk5PSuf3orlZz2lHRCPbtbSiVE3KfmO3oOCR+ddBp8zPkwjy+SWG3PU859PpWPbz+ZIyBCyn5MEcNnOR7fhVvTBcxjbIW8sswY8cJ2A96qEurN4yf2i3tEd2WG7DHB7e45zXRJMSxJJyQP\/ANWa50yGO4wecEgc8j61qJMrMNgxj\/PSuiCZtqannlGDkjnvite2mDKFcb+PbrXOtKBhnXAHOavW1yp2txjoa9ClpqK9nodOfLLbcADB2nv9TSxCRX8tzkdeD2qikyyAM\/GevvV9YQUDAngcmvSg+jHfU0YUCybs8e1aYwIw4OTnp7VjQyuc+ZyD3HoK14mLfd56cV0hua1scAkihHzIB1IqONW2kA9f6UqkK\/HJpRjqYSNZCQc55NTKT19aphzt9zxVmNske1dMYkmxaH51Fer6T\/x7j6V5NZgmVeK9Y0ni3H0rZrQg02NUlGZs1bc1Wj+\/moQF4n5aqtyasMeKrHrQgHCpKjFPzTAQ1Exp5NRMaYFWdsCsadutac7cVi3DcGtEByWsP2ri5jzXUau+WIrlJjWgHDeLtefRLaIRLl532hvQDrXjd9cm7lNywE53fLHkfMTwBjIz9K7z4hRwaxNbaVBKBPEWlwOpAHI\/KvK1srtoTa20ygGTzckqrMOBtBPJ6Zr4DNqqnXd5aIUo3jcgksb+1ZjcRsvmHIHGV7\/w+nrzVI2EipIxjlKYDszAgAE4HPua3rO5i0qYyXcQlbZ8mHIAY9Cw5zt9P1pJ72e+jn1C7fyVkIV1Ygb856DgHnpXjuUloyeZwVpGRDeQ25jVI8uc\/KTyMHg\/jVqW8SMgMcY+YkfeJHr2\/CsbULl4XEsAyFOSR1x2+lUjM8zmVMNx09+\/HetnG6uinDqaUkTX0XnqD5a7iRnG7\/d7nHqayZI5omaVT5QY4CoASR347VWimV8MR8wJAJGQvpxj171O6XaupcltvLF8ZI9qaTjoyrFaO1W9aUTqzhVyMexxg5xjikltQ8SkKMRj5eoApIJGuboWsSkDqQMZH59OatXP2q0CI64TcQR2bpn5unH6d601GutyqrSQxrLKG2pgkj16e\/ryKiW4uiDPCpZST0xtAHX+lMSM3CZLOF45BJDHJAGO3OKgaFraB7kSZT5R5anB9z3HPSrSQuotxdhd8cqc5OCOOR9K5+aV5ZBIw+bG3djgk9\/qK28yzoJTCQSM4Hfb\/M1WitQd0tv15IJwOn6VpGyHe5d0eWz2YuGLNu4IAPzY755re+WRWtVCBZMA84H1PHNctGJY7khW2Op6gdzTYLdYHLZ3Mc7uc9foaiULu9znqRZqXFrFaMAh86TGeSNqhfzI4qtElxIGkdSGYZABxjHpUqJAdtsGKjOQKutLBbRlRkEnlsZP41pFWDkSMqe3uAuQgHORnnIPX6GmQWcgYPCrM+cKB2JPOa0I7kSMY3Y4x\/DzToZI45cxh16Z\/rQ27AuxsGOWGI75EJH904xx0BI\/lVCGaBFWKTMmTySc4PtjFZWqXsnEUfC\/nWak9whETqN3UbhzWSg7XudChbVHc3U+QWEmWXk85wP59a5W6eSeRneJSxGFG7J\/TqapnUpWOYd0ZHJ2dBnr9Kntr6NX\/e7o2GSZR1A9uRTjBx1E3yK7HQadNbXHl3UWCVOC2Gx3GADwfrmqs+pzpEYXjEhPA6kEfQYp8j24k85bmRwCcFsY2kc5x3pjXeYd1sjRxhhtVkGADwDnBzn1zVpu92c\/O3qZM8TNMokK5fHC4O32OOhqzGMMoOWKcn8KrrE3nDKfefjHGeamhh2vK6HcoByPeupM60yKZvtCbdxbJztPHB9Krs7I5KEjauOB+YqzHDIzAIMFhwCOpz2psNjfvMBKWi9yMHj\/AD3pXSJbW4xArMrMh2gdOnvVuK9jk+WQneMgBjjj8KszWwtyZWldlC4LdDn9azo7gQsF8sEE8k\/55qX7yujJ67DmcRtyFXIH3emPQVEjbd4BzuxxS3GybOxxzztAIx+dVF3s6xEYJPXOOKpITR\/\/0PzWOvTEnzcN8oUDccDHQj6frU914lkOxbQMqpggHHJ77iME\/nXOrEpGO5q1Dbo2UfAGDgn2NZOMdzW7ZXa9kaYyKOpztySKYbyY57ZGDxUsluiLjIyT+NNEJU9ME9KvQl3IJHlmbc5yenPYUzB7c4qw42LgjPvSMFCggjnrigRWIOfanFCw5P4UpZQRxmpRuPRc\/WgLEYi\/u81aEew5bBJFKMldvQfrTgqMCZCcdu9G47WH74o8EnLeg71SknZidnGetLKpYgIMe1RrGcAimFxsaA5zV1I88EYpIYmYgYODwR2rYtkRvlI2sO+M8Um0txXS3KcagY8tQSBmrtuFVXZDsLD0zjnNLLG1u+fLwMkA+vrT1njU5L7sdB7Y5P8AhWTHF6aHVaUY7a2VJAVc5ZnUcjNVWsrKe4Y\/bGYMej8MTUqyGK3XYPmK44OayViLzCRxtDdMnk+9KMG7u5pJXOkuNJiSxP2c7iMc\/wA6x7UmKVGlXMQYblHcDtUj\/a1QCN2Cg9qngjkcfMufU0JNJ8zBK2jLd\/q9sm5beMDLZQEYGK5i4uLm6Yl5Cx9FzXXXUVvHakAq0jcgNxjNYkQm3Axxrnp8venRaauipN7Fe0tpwwWRuDzt9fxrcWWArsPDD171BIWY7ZVIIHf1\/GliiklXbJtK\/kRz2q2ubVjWhYNvBJl\/MGCrEAdiOmfXNQ29vc7WZSWHG4dfpSNBKGAhO7tzirMWoTWQYDHPDA88U3H3dB3Gx3K9JPlCngdSfw5FXhcWci4eL5vXoR7enSqx1yVpdy2yMOi5T\/OajF7LKFRkCN69M1lyPew1K4+5uUiO6IttHQMAeKofaAzefvwSe3BrRkh3H96n3huwD27U0aXJLH5zRkZyFxyM1SSirsG31LsV8\/lhopAWQ5\/P60sOsTWxaNAy7vvEe\/esR7GdW+VMEU+K2vSwl2+YT37kin7OD3E5XN+LWZYpJJW+YuNpc8HH0\/nVmKWMx+arHO4DJ53EdcH0rCZSp\/exFWz0IzWvaG48tUCKYzz7fiKidNfEhxZqfamd9oVUKsMkDnjPtWnPDc3UavbqkvORzhifQgdaxQQzbtu04\/h7GrUWfJWNAA2T8wzwD3\/z3rBxtZou3Y1LOSayQSyQxurHDAv8\/r3xxW\/9tMNuGeESEkhQeRz61y6qnMfLA8\/Mc1ps2+KJFxhOuOcEdvrWE4qTuJxvqySwSa7uXaFgFJbGThVOMYrYiluLdljRGyo25OCpI64P\/wCuqVhFvQy2pAJOCrdCfqOn1roY7o4WELjA46YyTyOe9VONnsQ2yqbyAsQCAR970Ge9aiMEA3fxEgGofsdvOx80KWUAAgdCaR4btGEiqG2dlGM\/hXRCMXojRTvuW5iWgJC8detNtWmjXOcDggDnPrUElzDJGVPys3Vc8g0QFsgAbgBg16VKm0hcx0VtcsCrtwAa660uN6ezcnFcJHtVwVGRjHNb9u5h2qO4GRXUlcal3OoAAyQcD\/ZrSgJbpgj34rnobqXzAR0HX8a3onjlQSE49ea3Wm47mvG+xCwHOKjhZdxJqF5lEWFfnj8qWI5ORW0YkSZqozNWhBwP61mx5HNaEXTFbqOhBsWjHzV5716tpZ\/cCvJ7L\/WrXq+mn9wv0ptaEmi54qGLrmnuaZHUICw3SoO9SMeKhzzQgJBTs0wGgmmAjGoWPFPY1XkbigClO1Yl0+FNak7Vg3j4U1qgOL1J8yGuclPNbN82XNYktWB806soPiGayu5CrPMwLDk85wP6VQ3D7MUhiURgPCWkA3kdDkc7ePxrY8V2FvZ65c+T8\/mNuODyN3JH51Qa4vthjihQQyZLRq205C4I6dxyefX1r8rxK5asoruwnKz1MkXKRXBeKLzgowAxKh8Dpnrj6VnX9\/rOpSRxxW9vbxBeY4l3cn73J5UE9O\/v3rRltJ3Kzo0fzLsCoTtJA5OT1\/Dj0zSLGYEV5PlyucY656VnG10zKTXRme9h5No0bqQinO9c5J7A9sduKrMkaJ5YyoY5IVRwfc56YrYlvHe2NqwfYPvbFAJxnueM\/SqoiyRDFkL1bODj2465\/OttXuZzq67nLs6+Y8Q\/Ajgnj+XBqlAZdzrKSemewA612ctvZ5VmhJlK4AGDgevtVWWOzhbZbKvmOBk7sjr1xj25rZTitC4Vlsx+j6akiSvLhGbGJCwUgDJPUjPA6DJrIuRG5MIuA8SklCG34LYzjI68c8VXuPMbLtyV+YE579D7VXkTy4mbe4kJXZtwFHHf88GoSblds0TV73KFwLwECNchQCR3wBn175qr5c9xA5kkZiWC4HOBjI5NdLPFDHblZJFMqA545XIyARnPOK5K4ml3xiZfuYyQPU9R2zXXH3loa3ujUQtFblJiSwyuzaCeO+fSoo5mbdGUGVOOmB+AFQF4bJPtKuxkJIJPPU+mev51aV1QhpcHJCjHc9TzxRaxntqV3eFrkg8s3XrwAO54FWlhR1XYSV\/vY649T04qrcRmEkx8Ag8Zz79aqWNvqDzxTW8p+Q7ssfT9KtWauJ7nSvaPFGEVGMrIWzjqSentwB71VtYzNG8kmTkZO7PB+mKvz3l5cahHp7MDghty57DvitW5+wp+6CjzVUYbcSCfUk9Sa5nJx36jkkjFstF+0xSTzXCIxcbVH90eo7Go726gtndIVLEcZ\/wFX7m98uMruGTnDKeAa5SWV5A0su4gZweMZqo3erHGN9WV5LgtKrg7ec5xn9KsySRPC1w7u7jgdvzGP602yivWV57KRAQMEEjgH6\/0qz5MjOkUjo+1cbFzg\/QnArRNbFuVtLmbp8sheYpuYMpBwuRz6nsPerkbQ3EqwIIw4YOHAJJx1UFv5niq9pCsTSr9o2OvOEG4YHrg8VdSdgg\/eq6f3TnAHr7fhVOxlOfcsXdowkIj8yRGTDrxjIPGAO1YssMEEwiQSx4X5lfpz3A6Vr3bS7sOwjRQMFCTkH0\/+vUQiYTvM0YEbLyXOcntgev1pRdkZc2pWtgXLxlsbX+UN1\/D3qxHClvdyMy4QrnBq1JZC42TCRCcjgcYx06cn3pr2KQMWnPy4+UqSQ3qCfUUnPsaOdyrJcIgMaW28Z4Iz8uO\/JIqsxM0jGQ5KjIhzggeoHGTVqeSNAzQlHAHAGePpnmsiZymWk2OHPDKpDj8cc0JtmTdyae2t\/K3KzK5xsViNv8A9aqcqg4EhGSMVdkNukSIDuYcknHH0GP61nyyImFi+b2zzmtYXNIkEsfB544FOhIVi8nJUfLkcfnTI0vGZkCtgfMRxgZ6daiJuhLl\/l9+\/wD9etSpXR\/\/0fzMkihW4ItlIj7buprSe12ReY67eO\/vWubNTMI4ky3HvV28t5REsTr8wAyD0rhdS1imzhfLaTG3OB0xVtrKbG48ZGBn0rsbXQbhrSO6iIw7FRng8d\/pVHUNIvtu\/I2AfwnJ\/Ad6tVbuyM3M5G4jQoIggOOmPlx\/jVDyGDYbitiaymiTzIpGcdTkYxVWOKeYjy9zMTgAA85rdMtNMiityWwBzVry1j+VwOec\/wCNb0OgTi9Fpe5jOwHcnO0noCf51uP4NKyIv2lW2oGlYj5QxPCr3OB1PAzxT5kPmiupwyokmVhU9MgtwDUUyohJkBJAySPX3r0HU9CstNthMXLMeOnGfXk1zUun3E9s0kYZhjblf0qkyl7yujn7aXA3MpP0rahjhuAE2ghRkjuDn\/PNJb6DdBBLJGQenJ28\/jT1029SFrkIQqvtYqc49M49fWsZPXQxau9CtMr2UiShcoXAwp6fSugkthtWQIExxuzwN3XdXPzecqFHAdSdwLZHXtWnpVwok\/fEohYA5bCgHrx3qZRbV0UoNlS4sppDhj8obAAYkDHqPpTLax3sHU8JwDjPP06V0xt4Z2dPMZGDlcEAL14wffpTlhijV4clWj6\/WmpWNY22M+csIduMDuabYQguW9O9WyEDYmXcuKiQwqdke7nsTWyd1ZGnW487pHyWwq1KjkPyMBSOM1NDHkqq8ccZHarlrbYyz45HHFQ2ralpXKt5H9rjV8FFHXnoaS1hSLGyYkj34q7c28xjMaYVT2rO+wrGzbiOOAR3qoWcbIGtTQmkSXOck5GeaasYC5AyT+lQwW4Lqmcj+9nGK0vKVSYx+FdMIq2gl5kL5zgpyuAfSmxhInDqgPpnmr6SMqntzjjn86osbiVv3KDsM9APx6UrK1mBL5qqS5GD6fWopHWX\/WoGx6VF5YQeWWDsD8xz3q2tm4QPyMjIBPWkqcUK5DHsUhV+Vf8AaNacN09qxSNsj36ZrPYrG27+dTM4kjx0Xgehx7UOmtnsS30Omgvo32rdxxgkfIVGc5rYijsnQPtGc8Aj0rkLOTMqAHJzgbhwB7eldMDtGRyR0FedWw6XwkOC6F5p9NVmHlrGzHbggccc4+tUZbLS7s5iJgdDwR90ge1Vd8ZZjOcgHOfepy0Tr5eBux268c1EKDjrcap9SjLpV1Ahms5VkHcdMfnzUMCXbh9w24A3H0rUChY2jJIIH8\/51E1owj8wncw646YrotJbmqutynK10sY8w4GMAjmta2t1trXzoyJD94nuf\/1VQ3yI4RI93bB5q7CBsaJsxgnPPQeoq1G61RTa6FyzMt0pgjO0sMZ+p55rpXiSKFTMxyuF4OScdMGudt4zaSZYB0I4IPB71s3EhnVvl27CCM\/4fSrlDma5dhCpJ5b74g2WOWLf57VuJqARvLnJyR17c1lAMAhPzc89qe8EkoDqpGCcn0FXClGXxFSZfunguAmVAb1HtUkcSBgsWTx3qrHGyMr4Bz3rWgAIG4jLHr3rujHlVkZjo\/vcVuW43t83cVkBdrcY5Na1sxYYbjFdCV0FzXgG1hk9a1E+XGO9ZsCjr1HStaFQzCtUtRl6HBAx29a0oFyfSqEK84rTixxitkgL0a5xV6PGeKqR8cVcj61qiTWsv9atep6cf3K\/SvLbEfvh9a9QsDiIfSiWwjQc01DTXNIprICZjxUdBNMzTAlFITTc00mgBGNVZW4qRjVSVuDVJAUJ2rnr98Ka2p361zV+\/wAprRAcldHLGuC8ZahLYaJM1u2yWTCK2cYyeT+VdzcHk15P4yv7B7qO3uEkuBGrEJGOA\/T5jg5HfArzMzxPsMPKXV6IL21Z5M0d4ImkgXzSDgk9S3qc9z1p9vbajGiyKVlDEbwW+76rwQfY+1XLj+0Jk3XKRib92I2i3b0RM8Ag45759KqSzXCKI15GOikbuev41+cqV9TOdR9C7JiBQSi5OcFcfKOelczesHIYlyWP8RyOOmD\/AEqbz3CkzglnyuCScVBLdN5ahUYBRgDrx3xxxW0VbU42ne6MuFZmmDMgIJAXJIH1P4c1YlnEaKA4JJ5dRwD6ADjOf6U1ZI4hIZGy+cHn+E84+prPglChimGzwAP4jnPJ61rbqa+zvqaIy8nnyA8gYZv14+tQySQiUMAWkdhzj0Pr6Go4UuJ5EQfKzHGR2HTsPxqW\/sr61+eL5sck4x1zj8M1F1ezIUdbEd3LDbORIwklI6Yzj2P41UTy3tzOwUEEnnrnuW9vSqVys3kuzoyyIoMsuRhR9OT+nWq8FzHDEyxYdW+XIUgnHc59a0UE1oUoWdkU7m3jgWby3XM2N5k5z14Hcds1J9l0tomllky0A\/et03EjgAZ+vbNTX1iJk\/ex8k8hep47dhXLzWs00o2KVVUHfqR0PNdUdVudKZedbfdOqxFQ7LiPnOB\/j1rRNmjiRmYB+AqA8lQB+tQ2E9xEZEbZIz7Q3mAso7e3NatjaSLexzQrk5y3QZPrSlK1xtkcfhXVryAN5YUv03nBP4Vq2vhuW1XDuFY5VsZ7flW1c6jPboiyTkCPkjrnjvXKalrM0zA20hA7DHDVjCU3uEeZm79itNPi+VizPle341kTuioBEFIwRnOSPqKyY711URs+JMg4Oenp160scspkH2WNpgx+ZeuefbnHvWvI92aW0uXLG3lcSSGBpYQoDMTjaT6DufpVfU4rExGOxYnbghCvzH+8W59uOK0Enu3OyeOUKqncpIVVIHHLdsds1kpdWTbolfzUTDKS6YHOOAeeOmBUa3MOdoijgVLZFjKSnklQuDkk4yxwQBVzyjCoa0QHcCXZG3bT6c1XtohPcMJEEasNysGwnBzgg+vYdTV1JP3LRPGFmUkBYyoBx0yGOfypt2JvfUzjpquQZQVaU8McKCM4OB3xS3ejItwJkIhAGNwYYOP9jr9etSm4e3gMU8YRQxPzk5B7gYycVWgMOpqBMqwsoYh3OEP0J6nHbrTvK+jIbeyNKO3hceXkTIP4Uwp6epyaZJZxKyOxEcb52qqfeA71Qh+y2k6ytKwZOSJAQrD8MHFVru8gVQ8BDbj8wyWHrxg\/\/XqbNuyBJmi1vHtD2hKE9Cxxz9faqc10qgRyM079yBlR9cYJxTILmO52QxllfGTuOFIH8IJ5zTbiRUJQEJKeV2Nyv1PrWijrYtxZkzBXk8yNs9M44xz0xVvFzER5zG3fnnPY8jjpz3pY7qXcpduc89\/1NMkjMzszfNkYx71rboy7DVhvJEkuIU+0qPmZjyQM+tU5obhYF2Jv3c4AxtJ+tXYp54E2QnbkkFRwMH271F51ztMYBOTyQSfw7mtUXppYpfY7mfCHC4XoOvPrUDrMw8uUbinAAABwOvStOFwSq4MbZxknjFRSeWrMrhAc5H+0Ku92Rza26H\/\/0vhy1spDCZlIVxy3XP4g5rZTQbq6083KFbsB8ybCdwH0JB+vHFen+GtAisFF1qiklwQ\/m+WIsf7O8ZJPtWLd+G47jxBHdx289jpyEsXQr5YKjI5wcD1H+FfOzxKd3H7zueDqON5HMTXNmNOg0jRYJpL1Wx5ToVwD3XqTiqz+Hdb062uLu6h2qg3OJNqJj8T1+ldVZeOPCOl61cPzGIgEiuSCRLkEOQ2ScelcJ4z8XR6nquLOSSW3k2sgJbaoOOQh4FFKdWUrctl3ZxzpxUea+pTsrCJ8edEqyHDAqBxznHA6jvWywtoIim0K5bczY4H4+tYFniZZbW5dkiYfK+4YYnoPlO6sx7JdJnW6cSm3cHKyZP4jPOPrXorlfqcnI2b9\/qUGnQxMFDyt1cjGf94dCfwqlqOqtdReXp4MpcD7vcnt7YpI7qy1SyPmkRwqNrE4BB9vpSWV\/a2u+10tfNfHykY3E\/1\/CtVt7wKLbsS29ncyRJ9uywPVH6fSr8r+TH5VtAVx93CjH6kVlwJfXDk3jPHIORycYz6VNPcW7SiKScSNjIK8Dn1q3qrMq0krorRWn2yfzrhvK7ZbPP09DWtcwLb280ML8t8xA5JXv2x2qgt+bdhFMhTHQEcke1acF7JcqREoJ3DgntWDhbqEZSizlIoxcDMRb723cwK4J7nHGKi1TS4EupWdwIugYYG3PP8AKuz1BUmsWtZVO85wFHJYc9R9K5i60\/VdQi8yGJEXaF8onLtsP3j2z2HetIyR3KcUtTnJJo0iTynDbeMP7deOtbFmZ2jDyDLSYbgYqiLXEvky7d6k5U9eOo55rXBKlc\/wjt6VtutC+t2JLEvOeT6VVigEZ349vxrTyMdKFQNgP0\/Kqi7DaHqCWXccgdD2960rVD5wRWxn19PSo7SNYiyk5z09K1BYhXSQZYdW7flWM2r2E3YnZYoFeaUgKehrnN63chdABGvfFbeoyRfY2XbzkAAdK50SeWmMYPf0q8PBtORnFt6s0mtyQHkIZTyCpHSkhjZmOT8p\/Ostb584YAj2qzDcjP8AWu1JxNLo0ymAc1BEHjYgNtUnkHvj2oF18pBG7PvilRlkYkckVo1dAyYOZlVZcZB+UDAz7mpZYZ2CRxHdJg8k4CimRAiTDc+hq9GFB+Zs9sdvrWdrbEDbbR7dV8y7cykc7Rwv\/wBetEadYTuGKnCjhVqJj5qLHAduOo7mta3\/ANGQsw3ZwB\/ntXLLmWt9RbER0+K1G+3XCnrk8\/h7VSuH2Z3nAyME1q3F15tvt43ZwcHpWW0sK\/K6lyR3HT0NVSUmvfKT7lWLzGDSFfkPIz3H+eauIuUEhK7jj5QfmIPr71Gskm1UIyo4AUfhz\/hUpg3EyRLhhkEHr9a1avuO5bilWQsr8gHuOAOnb3q6hIJTOFIIPuKxreFgeRuxncCcZrYASDOM5OMAcj\/PNEqfQd7lC4jCyMI87B3X+tELCQBGGWXJ5\/nWivLbQp3N0x1Ip3lqGQ7RnPOOv41aWlhWIINzyiNT87HHJwuPet1YpoIzG3z7gMkc4x70p0mC4OY2Kf5561o2mjyQAtv3ZGMdDWanEnm11GQIwUZAJPrWlFneSoGMmmrDIB5WzaB0\/KrSQOF3MvI59K66cL7ml0S+WFj6Ae3bNESd1zvzj2qwkBdckZYg4FSpDLgHAG2t0ktBMkt4Cx3yEE9gO1ayxoi\/KOlV4hwCe1acS9+tapMSJYzkDFasYLAdjVOOJFANacIGc1skMux8nHpV2HrVSIdKvoMGtooTL0YyKuxiqkVXkrRCNWxH70V6XYn90K82sP8AWA16LZHEYpS2AvsaRTxTGNAPFZASk0zNITTc0ASZpjNSZqJmp2AR2qjM\/FTu1UJ361aAoTtwa5jUH4Nb1w\/FcbreoWthbvc3kixRr1ZjiqbSV2F7HmHjPxfb6IfsER3XUi54\/gU9zj9K8rsb28Zmm1AEWzHKLnG7OclupOSRjpxmk8bmHxHryX+nlvJ2KhfaVDAd+evHGar3MzadbrO0YkST7qhlB44BOe34V+d5rXdaq03ddCJS0vAuPEq221wVTHc8kH37isa5CFdicEZbbg5wMjrVu3mvmie6uG2qMIY40yo6kcnnqOueaoMfMt2cqwWRjtGMkc8nj\/AD+deRBWdjg+ZSA8x2P3GXCqQeMn6gVQYxsxjDjPOWB5\/PsPeluLgR5V3+XGVAHUgdepyaxr2a3KqyBgzKpIIG088\/pXQjWOo6W2hQtIg3s43ZJ+XPYn8O1IrtsWREztwqgDCgnr05+hNUB9qDvKqsS+N+4csB0xnt0qzb2t5JcKiKGxj5WPp3459+Oa2aW7Zvy+Y27850xby7Xc7PkO09Rkcc+1dtZ2fh57Ixx38j\/ZkMjxSMSS5GMDsMEfj6VzOp6NJBORaMZN2eGUDHHUZJ9OO+a5Ceyt7JjHcMQVABRR8zA54P5nms1GNVK0iqUlF+8rlyK91OBbiGGRJIbgsvmbSNxYA\/w+gyMc96rvFJalSiEqAWDgdfXH0yK3dCtbS4uEimZba2fMkpZsBAgJ6nuR6ZP9KWpTxK6\/ZWS8XgmUH\/AFe4nHH881o5WnypEy1Sa2IEupJEVS21AcnJAJA9vr601EjuJN6DzDkfh9PwqG3RrmbATzGPpgDjqf6mu20KE2F3vlAaExspPBKkkYIx6U5txTaJSv1OTSAtMEKgEnJBONvPTpW\/NOmnWzOB8+MHPvWzeXdo1zIY0V933RtPAH4D8a4bWbqEwlIzyTnjk4qIP2lrqxpTd2Qfa\/tEmX+6397v+NZNykZY7VyFx+PvV7RY4JQ00jxhU+Xa3LEH0zwMVRvfKe4ZomGAcAA+nautWTsjZPVoovI6GNxIpI6eo9jXTQMm9BFHFEsgKbopf3nIO47jnINYVrL5EweELkjDK5O1\/qo9KuMwjlRW2RQwDO1vlIJ9O5z705a6EVJWRo3G4xPiIyCFflLfc49OSCT6Vy1x5t7IAqbliGCFTZgH+8OOa6wxvDbiWISRNMpZWVCd3oc5wMCsuSacBLiR42ZTtkYnc\/HHJGcHjvWdOVnY5k9SjFLcCON5cnYNwDDjaDgAZ6fWrL38DxIzJ5YbID53MuPoMmrM8bpbm5kQJbty207j+Oen+eKzZY4WTcqH5sMhxkdORkdD+FaJ3K66EEkNvLse2uFk2t8xJ2Y9ueRV5YHyv2dVEgGQvUHPU56Gke1huGka3t1IZdxO8YX8+etRK0dvD9nmDAAAbg2efoDgUPYz0Ly6Ze3qyCRXywDEjqR6EdvapY9CuJlA3eSoGBvB7evYVhpe31mTLDK3B+UHv9VHp71sDxXc\/II40Zo12mQjdlj949h7Dis5Kp9g0Xu7DP7AvLRik8gaGPLZJDAc8ADPf0FY+yznuBC0bhySXbIx+A9PxrZi1+W4zAYVVicAAYyT1JHbirgtrWe3BtyhYZAwDjPuetCnOP8AERamZf2S1hIDfNxkHI61Wa\/dZFVUAQGrwhNtstpCA0vzMMZJ9hx0qlcabPbho0gLRt83HJ56ehFXGSk9SFruQvIBI0nA3rjkdjn9azUeRpWSEnb198Vc+z+VAZCsi99pGBVQgR4nU5jYHJTBO4dsV0R7GuxDLMXdlc4C8DPHIqCJ4XCvgbo8g5549fanTorZliZXB5II\/wD1VcVLMSLKjAlsZ4xj145rTQLo\/9PwjxT4g8L3exb1jJMoVkli2lYQWwDx12kZxXl11rl7BJLcG8Nwrx7YgGKM4PXeucBiPSuXd2YiJpsRq2cKDz+Pt2qGVYYgY5FYyZ55wQe3Y4968OlhlTjy3uejWxMpqy0IY9Bur3bOIlgAJIDMWz7gHNdJYQGxs55QitMoOJHwcADGAT6eg60aXKk8UkF\/cTrcoR5RTBjKEcBu+c963L\/w5qEmnxXPmrDE65CnGWOTnJzx7Vs5uO5xypvluckj3epuNRnkSMQDZuX5cg9yPXHSodVtdMjsmYTNcT9i8hLY64XqPwq4+iXMZO9VCv8AMfm5OPUVz0txBCOAXbdgAKQFPv7VpzJu6MG7bGH9gvrmZUtUYQuQGyMYx69sehrd0ixvEuBcRqI\/KDZ\/2gD2\/HrWvDLMCJlCqgGGDEDOfTrVi1lu2v0wsgiI2sGwfvdCD6VbmyYS97USC+v7q6mWRQGC\/L2xg4IzWE2nFppBC6h1kIHPUt0wT+NdTc20xb7VGQvVjngbePX2zViGKKZJI5Im27sE44yMd6jn00LnJPY5IRX0Vw5xl2ZSynnHAP8AXFXoPtM14wdFRk+9g4yB610t19qjmiZm2pJy2VBAIGe\/HNRR2cNsDMZSDPyS2PXnHQdqhzujLd3KX2l4gqbSFyck+vrmo7SaeN\/3Tlsk43nPPc9OOlaOYzGyld5B3LnqRnqT1rWWx064dY5rtLA3DCMSbQyqXGFyMjv1PpUcy6lr3pWiYM0cUbm+mQTux2tIqjK\/UHrWbcTxzECNVUAdQu0n607UdH1Lw3qF1pl8TJNHtLMjZRg38X4+9UZZFcBFAPc465NdtKzXNE2jHl3LI+6BID9RzVq0t4SWbcGweRVaCFnTLsBk9D2rU07SrqZ1a2jL9QSvOBnt7elE3KzexpdvY0bOG2Zd+OferkpORjgA\/nxVv+w76zgFw0ZAY8ncCQPoORVGdFAw3cfjiueL5ne9zNXvdmReoHlVT0aqaRQggqNwU8g9DWjLBukJx0UAVC0booJGN3P4V6tPSKL2KrwQPkBApz1HpUaWBcZQg1eWPedo\/n3qZYgvIOa6FF9xmQbG6Q\/cNSIJYj93GetbZ3huDz\/ntUxdyc7Acdqm8uwtTLidZMKwwferoBwAepHX1FWfsttMQGymf508WBhI\/ebgenrgVUZJ6AmEAHBQEc9u9aEs2IzGOn86iVfLjDKMZ5qMxSSvx07DtS5E9WAIGbn196sGOPbgg8dT3qRINoB4zjFSGMkHOeR3rSwzPhU+cT9OnFXI0y7MeOaesaoeRg1N5IZySTyOgpcoiWO1SSQLnIAJyevrUwZI+ICTgDOe\/wDhVi308ElNnBGfvYHNaS2VnbqXSLJHTcc1lLR2C\/QoiLO2TGCR+IxUrwqzAL17EU9YsknGAewqeISswWNCSPXjArVRsVctxoU5z9MVq2c7SFhxgY5qnGJFZdwG4+\/AFaEAjkk2qgU+1S6SetgNAklS2Mben4+lIokkU5PHFXvsZKYBxzmpPLUj5htIrekkloC7kMUQRioyQOf\/AK1P2Lu+U\/eH5VKinbyOTiraRbY+evT8K6FECKJPnwAOla0UbAcjioIofmVj1rUVGX71bqICxpz0+laKRjAAFRRLnnFaSR4FWojuJGmauolCIT1q0keMVqkIkiU1dQVDGlW0WqA0rEfvBXoFof3YrgrMfOK7i1P7sUpAX2NAPFRFqUGswJSabmmE0maAHk8VCzUFqgZqdgGu1cvrWv6Vo4U6jcJDu6Ann64610EjV8X\/ABKt\/Elv4xmt5FeVJj5sUrHKbD0B9Atefj8TLD0+eCv+gne10ewa58UNHWCSPRS1zcjhflIQe5zjpXifiHXNU1WQXOo8qmTsIwB9B0rME5tLZbd5Ii2OWA2g\/if8+1JHYxXameVmYKvO4bVHGcAnOQfpXxWIzGriP4jtH8DifNPczftxnlRJCyw8k7QGz7cc+1TySaW1sZPspkc4Lbhu4PG1WHyjJ7deuag+0RopgjVIstkRgjgHrkf4VFPe3txELRZRFGMcKmSxA256jBwB+VedUTexfMuVpGel+t27RRrKBGeQAQoI\/hGeeKyLnVnSVlQfdXIB4AzxgD1Jx\/OrWoWiWD\/YHRlO7Ic\/eUMBgnkDJ64\/P0qJoHMsckQAiUfKGA5AznOeT3xzWsbWugjFdStOzzRoyKYj82RjIIB6g9OOlNUN5AiZQdxyHI+Yc9BjGM\/SpZ73fPJLGApkHzIcHGeuD+vFTRxJc7EWU7tpyPofr39aFJ27GqjZXMya\/aLEESs2Rg54yT2\/3cflWdetfgsqt5JmTDeX6HHX0zjsc+9X1YXEhgjj3HJKjPKf49PpT5XgtIzJLEJJyML85wGHqAOenHTFbx22Gl2OSf8A4SB5Rtu5MoAg3N24457fWtOyhJie51Db527BIAx6cj39qvDaV5YhjyWYAnBzzj8Kz9jMwEcqOjEqo7sR78DPNa8wlo9CzHFE6+UPTJOTyB6dOnT6VZstEkvds9rB5UeSN3AXPHXuetXbHSUWOMXknkSqQQDj7vqTnP0611WnatoscgtQ0gkDbUQg7ST0PAI6+tYTq2XukuVlsZZ0mwtY1Esq+cuWAI+QZHIwP\/11m3sjLJ9mkEhh437flJBP6Z7e1enx6XZT6SmoNaEOysfOWQM7kHGQwyQAfpXl\/izSpdPijknKB3bCBd\/bLHO4jP1xg1y0MRGcnC+pqk1r3MqQwWhe4O+VQdqws\/HTr16Yrm5pJWk2\/LzwCeV59COKdcX89xullZpHPU5wD+FNt7a9ubZxCuYoj5jEgDGfx5r1Irl1ZpGNtSlNA8EhkLKQcEY5\/Kq4l2updCN\/Q+9bEaiUtExJC4UDBJ5Hb0x\/KorTSpWSSe5eNACQqMTuYgZyvqPpWt1a7G5JDre2niYyeQjh03ASZ7HkrjHNW7ma7nmC3KRsuOI+N2APXv8ATNK1q\/kGSR3jcjIYnA46DbxwffNUrpkbc5CggfMeRnHQ4GACPast3cxkpMIbq6\/4+LaRtsSEFcnbx2Iqa1120U\/ZvsCTPLlmEaZ+bjuc5xyTWdbrDt8+WQbSThW\/i4zz707Rp7vTrmSeGRrUZDAoVBKnnlj\/AC71Uoxs9CGktGdbe2U19mC1t2jVvuO+0oPXOentgHiqbaalnKltLd20pUcIO3r94jrXTW3ii1e2CEbJyST5jA9flHzkZLt14wAK4DWLzfciSNEXJ5PBJOe5AzkVx0udy5GrIOVW0ZHf3TWMuRAIVx9xCCp9xVZjaPGy4VyF3bhnC+zD+VTfZVOLiWUSeWTg7Sy5HXPIzTPtGyZHt1WUSAcqNmQOTjPX8fwrtXkFr7lJ4TBF5sT5ZhlR6VBG1+iBZZBnOcAYGPerjo+2Qf3DkN355wT3qtujaMLMoLrgj5s4z2A9TWqBxIbS9mt7mNpQH+b+H72PTPYV1g1W\/l3RW0SwNgYIwOc9cH1FcwrWsUit\/E2cj0H19qjeVBlYB8w6uc8mlKCnq0Ty2V0dZJNLcKytJ1AHPIX1wRjrUWx2tjEWJGOpckjHv15rlEjvBF+6YDd\/dOKsWl5dRzbLhzt6cjJHvx6Vl7K2xNmbzXCwrvIJA5IyW4Hsa5q5uPJud0BLq\/ONgOAfyrbkcCATwuGBJBA4Ofoag82eeMBIyXAwc\/41UFbUuzvqVbaSA5aT5H4\/h61bDbsBwpDHIJGCCP50RQ+WcN1Gc5HOKk3QjJVRlf61fXQ1s7XP\/9T4Ut2kRXSRgocFHyvOCMcZ6U42cLEK7HI428k+3tTImBJwAcjnjqc+9W2naO1W5OCGGPYEHvjHNefJ9Dsuupr2otoEMsSAMcBmPXijzd0PksQRngdSc\/4VmW1w0qYZMIRnOeT2709hN5hCjjILHsPb9a55Ny3IeyaNSS93\/ODlo8Y4x7VzV1dOyzw3c0jLMMKDhdjZB7dcVs28bhMy\/dXIx\/eJP9KxdRtpLi9kiKE7gMADkg55GPwpJR2MZJXuQ3drE901y7Ah9pCMflIAAFX7Nrh2xnGCqqoB2gDrzVhNJhMFut2zEqm0qOOgxyfatuGRgyxopijQcBPQf3u5+lEpdtTPl62NCNNNtHaOacb+nClsccD\/AOvWMINbuJC0bxrGCAoxy3vyOMfSnq+ZmldBK3XaSDxwBxwAO1aLX13ImFKwsp6kAjA7YzWcet2Ztrqche\/a3laCSfnPI3ZHHsDV5I3WKONlDH+EN0+tLFos8MfmC5DSTHcpKHdz1Pt+NEFtqsE5+0CPB4Dg7mPvz\/8AWqm11ZnF2K8lxdx3RiQhSGySR+YwatwRiCeK9zHcxh\/MaNiFJx6dqsmOS5ts3IhSNmx5ki5bJHtgisKWKaF\/sJKurAZ2nIP+BqGk\/hZtCSun1Ot1nxroupN5Vxbs0fDFS3OcYwSu3OPeuPmj0Bla5t5pI5A29UYZVvYY6e3NYdxpokmcxIzbARjng+9WrVBIqW82S5AKK4xnnHGOvStqdOMFaLZbk2bMKvcRNLDgIqkknkn1x9K66K7l0pIoISyxqAzkEqGPvjnHtXDmyFsSm45GTweDzjFX4xOJYlRS2SCyhs4z9eK1muZ+\/sNSadj1NtfWaFru3XAICnjJJXr3yRzkkDrXLsIblw7FTvAYhMgA+gyDWdvC3EiwSFWYkAjsp\/kTSedBC3k2zlsdx09+aWFwyi7x6nRG19SW5MayiFeWIwCeOKZcCQQqqhSfX6elCxRqTM4Pvj3pjMXkCqDhe3pXrezs1FiaKe\/PKjae9WFXPc9O1Q+TIDs6kdauRxXDKPs6hiD3rqWhKGLEy4JOPUmrSRyFhjB+lTNbMFVicHH3eQc\/596sxQuDnHGKcZpq7LasRpCjDDjI7YqxFAqZzk46VZSEkKQOCetTGI7h2wcVpHleqJ8ym8WRk9O1SrAPlAHXmrwh3fLjnNWTbMsgI6Ci3QRSWA7vYU6SLoOprRRCRtAx70hhOcn6VfKDMlIS75rRihBkq3FbKDk1pRwxj7vJo5QRAluYzuGSDQAzDoQ3rWmigDDVIqRuPu8mo5W3doDLWMocqSM1PH5i8KcZ4rSECMTjiporRC2CeprVR7jK6W08hG3Bz3rVs7XY4aQj5eT+FaNtYqv3TVlrSMDkc0lroib9BjTEjMYGKfGodemQKhSEBvl6VpRw4wQMV0RpJbFrQgEQ27QOauRQbsZ7VZjhHBq7HBzx0rdRAjS3wRitNIMripo4enFaEcXArSwFKKDBrRjiqwkNXEhqrAVkhq0sVW0hqwIqYFRIqsrHVlYhUyx0AOtUwwrrLc\/LXPQJg1uQnC1LAvFqcGqvmng1NgJiaZmmlqYWosArNUDNSs1V3amBg+J9WXRdDvNUY4+zxM\/pyBxXxJrPjR9cl+1Xj7pgxOQS6hT0xk4z\/kV9SfFTxBZaV4bms50WaW9Vo0jJwCDwSfQDNfGFnoEcU4muWRII8bgmefTqOmK+QzpqU4wctlsRJxb5ZG3axtqCrcMwSAMMbh1YenHf1qxc+eu5HYFWPCkg4xnpxxnPNVJdWXOzaiRqAE2nC49ug56VmtqUU0vk7iu4BfUkjnI44H6180l2RhK62Ll1Zq6heSWcY2\/l3zWdIskJYlwqx4HUAHGe1O+0l1OTu7bgeCR0HXoOlZM96PLLz7GRiG3hcjnt61oot6BBXRoy31xcTCcfvWfC735woHHpj\/P1pkqpdtlpHjBBAPGAR0yM49axJtTt5Yo1DqcDoQAOO\/y4\/Clk+yzCO2SQM7uvyrnHPUEkY5q407F2e9jPtrO5uJJdwZyh5xwvXqD\/AE9KbqcEtnmSB2jOVTB7nqcc4rbW0voZpYDG43lcErs288gkdhwe3vStpt88wjud21y2wH5kJAwcE5wMd61Ur63RvG7MzT9aSEJlNy8hyMCQ4OML\/wDXqzcXkUx+1xwsiSnaARvQN3BOOvPNaGm+GJDJHLqG22tyckqQzr7hc8\/19a2XubWylWHRE8iFhgB2+Yv3YnoMnpxWU5RT90T2ujNtreOOAy3O9fNXO2NS4K9STjp06VsR2WllY7vT7ZdhAI2ZJOeTy3T68n0zWhc61YrCskdx5sQ4B44Y4HOO+eCM1y1\/ttfMulmeMFwGVThRx6g1zQbntocNRu9kVNTv4VxIjcL8yup3dc8fXv0rEl2iJvNZiM4OCcfMAf8A9Zply6XbuFxGoZgAGz1\/oaZaCSSRYZMSbSfkzgsexY9wPQ12KFkd8I2jY2rOaaGKC1W7lVYVHkQwufk83k5wc5PHH8qi1CG+mtmSWWSZ1bkyMQMcA8NnkDjAPtV+ykUIrwqYkLl\/kXhnUYPyjJ2n64oaRGCTyZVQT+7wODnqAOv59qzStLmsZXtKxxDW8qhVjTl+FUD5jUcEbo7M6\/LyrcZ2+o5reeSPyzMGw5YhcAIWGT1PJHt61iHeitDEcIO\/HP8AnNdd7m3M3oE91b20zKFMhkUMJAdu0j09eOKkh1Iyzeex8xW5ZGAXGMDA9iOvFZM8TTYcDOMD5ecDp096glklt13ctycnp7Vqop6EqK6m5\/aKG+aW4Kur7hhwSMY6cc8VGWuJLY+QiRwOxOT8xA9OmRz0rDSUyNwTuHUGnRCWKQvGxGwHd3AyMZp8ljR2NvEVzHEttMYol+aQgcLxznOCT\/KorpEELyBvNtwwQMuNp7kcd+3UYrLU74FtZRvhU8gH5iTW1HZvDA8r2rlByqljyR6qMdPes5Oz3OVR11IpbiN28uNERBwVxkA+31+tRvalHVtu+FuvO4DjPPv9KcguLmPcYVRsgnBGB6dOc1NO0qW28n52JzgjZtPHyAj8z60Wa2NYpW0LKyL8wKqBgbuME+vHP4Vk3dshj3W5IMYwiqMHn1HYV0Nlp6zoyXs32UpCzozNuDMOike\/r2rmWZN5WWSVZf4AnOR6564qIPWyJd0k+g97iXH2aVSY+AN2Mk9xxUcMLPG0xhBwcfJgfTr\/AEq1mG5dYN7My8KRkMCff3qysSRr5Tu\/HyksBxjsCP1rdbExV3cxUdkd0VN2flIx1\/H\/AAqc+WqgIoUHliT39MVakUo4jk+bZgjA7e\/rVWct5wCMFQj8+KrqaWfYBFKE80gAei+nf\/GopIpUD4BZXG5cjJ+mavqwQAA8EYx71bVI1yySgg9V9KVybGZFNujVXAXj6\/8A6qiX91LtVyN3PatF2SUtGgBK4JbHGM9eKrTRxsxO3LJyO2fpU31sEV2JQylDhg2BnnqKpy3AbaEXJJ\/lRFLNGvmI23dwV6\/oamWSFQdzDPX3+tO2pryn\/9X4bxsYRynG7qe31qGQRKzRROzCTbyO2Oppyogl\/f5cHnbu4z7\/AP1qez9lRclSQvAwD3ArzZdkdVST2JILQLE3zB5E29Dztz2\/HrWvFNsR5N3LDoR\/nNcxb3Az57ttk5UADlR0yfetgs3ljbgMpHXnPpWdpIzTkldDzNGZY2bcV6+gGO3HA+lW7e4uGT7QyDcM9f7v1rIbmEtL8zFioUevXPtVdpjMWgkY8LgAc8AZ\/pS5Vczb1NW4vIjM02URCR8uSduBjBJqF53upNquUB5yDkAfhjiudNusiO6M21hwMYYAH07j1rQt4LGO0kl+cTbcIVxt467jxx9BVtKKGpXVmWIZZzIPMdfMPyhxwMelXI4omu5X2hmPz7TkqOOuc\/rWIlrMCRzhuQwOFGf65rbWKVbb7JDIWK8u2PlJ9Cc9umKXJrcxtZak8s13cjfaXAQgAHbkj6Z6iqVol\/LLJa3s26LbjzF5Kt7DufbNaVtpcO37XuWM4Cts+UfXpUV5ZIpVeVRQWyDtHPXPY0uRbWM+V72M86Sqs3nXcsiE9FGAR74zWnbSabYRBYlC7uCcZz+Panrf2KW\/lpgcj1Bz2zjnmo7VopWkuHUxiIZBAyffrTafQzd1uWibSAmSKQAvg7gACMcY46g5rMurTTrh2kCMJEUdFI5HbJBFbNusF2UdHKxc7nCj5s\/X+VRyStDOVwGG47SFIwD7DORWbg0roWqs7nK2kghuI4pOCpLZORx64x71uRB0Xzd2GbklVznvzngVflVGVdxSQseQQMgfzqymn3AkMkEZjV4yG3MDn0+XNacz6Gsa0b6os2lraPaJcXreUHygOcHav3iM8ZOcVlalY2sN00GnT+ZGvUeh9M9\/rUN9YrMm66dkt4owAG\/h2jsM8+\/vXKadqFvBJIIZTtyAoYdeeop0nOnK8ZfI1dRXvDY7WD5FCHuM8U0SMJNhOckEcf1qOKaN1V53O4j6cj+dZ9zKbiTyllCZOAFBGPc5rtqYvZJGntdNEdOoW3Kb5og56jIJ5\/SrouLeyK7WMrEggDoMDuehri1ihjBuJ33MeSScZIpP7Uh8shYfl68EjkdwBzx1rz6lWdTqTzt6noVpi9LtCjNKDlhnKk9e\/Sr+oq9hbqsgMU0wAiRyq8erdwOPbIrzNJp5I1hMjwyY446+oOev4VtTzbEEl\/I0rKoRV3Y4HGepNefPm0i3t0LdSL0ludJFrs9pHDavK6xyAuqnBRSOuM5HT2rREv2xzOWUkjkKAP0HFcHeXy3FhLabCzuBGqvnAQfxAgjB6cc5xzWdpkt1YSCSIkoo57j8fau\/CVXRfNYUW+rPV7WHYxc9jV2Q\/KWPOegqHTriK9t0ePAyASPSr8ka5UP0B\/OvoYzVT3hsoxox4dR+HFWhaDZnFXI4l6+vWr0aAf1rq9B3MqC28we47EVaFsV7VolMMO2eanWMMuK3TBMyxBU6QHtWisBHXtVhIh1rZIooLCR2qykOWq+sJParaQCqURkcJZRj1qyEL8mpkg5q5HB61SggKUcHPStGKCp0hq5HFWiQyFIcGr0MPtUqRVejixVWAbHFV6OOhEq2i07AKkVXEjFNQVaRaAHIlTrHSqKsKKAGrHU6x05RUwFAAiYNXkOBVZanU1LAnBqQGq4NPBpASlqYWphao2agBWaqsjcGlZqrO1OwHyJ8UNRefxLcyai5WK1ACRnn3OB9TXh194jixLGN5QNhSPlQD2zzXpfxbFxD4rvEuTxI4cMeBtI4\/KvMX0s3dpi6ASGXmMleGZTggZGTxX57iX++m6ndmEoWlzkQto7nc6ygP1wvOO\/H+NTR2RxJLu3lgB6HnqR9PrTHsbQSm1tGYbYhuYkZLZ6cEgdDwTUNtBdQxMdwZ9zfIT+WM1jbTRm72uaZs0Wd1YDZGm4kn5dw9u5zVKeQ3EPBZgpwVQ4xzyB6AisuDWniuJI1QSGU7VJ7ds4rV0a2L3Pk34MmdrRlSAMnk57\/AKioaaXMzNruSQaJY3Mpit45GklXPJ4Vsdj\/ADrZi8HxabcRTiaJ2DqzDByM9fbA55rrJr3wlodvb2N5MWuZk3tKq+aFBBYKTkkE9OOQetcEdXupPMn8ssDwoGRwTgEnqawjVnO\/Le35k8suh6XLFZ2dmxkuFRWOQQMZHAxzkn65rLv9VtLt7STT2VAvynOTu42luQOSee9ecXuoXU7R29y7FI+27OO\/447VDd6inl71UOFBwrduPw70RovYKcJRTizrZtZtrpjHEwjKHbg\/NnHHXAGef5Vy18DMQVX7o5JwO\/H+etc0+pGRTJGRG3Yj19sVr6XqF+0QieQMpk\/eNjkq3XJ64Hb0rf2Uoe8jp+FFaSOPyXkdyN7AsoPXHqKzFN5d3OyAPIz4yDz7Cuh1hrSRxEHVsHZkcN8o44yR3+tYyt5WIEOScH5ASwHfkYP5VrDa9iVaSuPZZFXONuGKlc4KsOoPpSwRjzg8kwUKA2d2CT6DIrpdPg0KHTnt9Qilkl3sxO7G0N0xn6c1i350\/wAtri1DCNxtUOQSrdOcDp+tSpqTskJTvobdjfRwwQrJd+YJ2VV3gYjVTzx97rk+9M1EFZ8XW2eKRi0bRYd2Zl444x\/SufsrlbSffbAXDSJsdVIXHckEjPatWERxs0iNH56sCobJOPXAHLDPpUuNncylFrUzBJAluxiDDaSF3jOB74AwR+tVBKJXC+oA+UYAP0960b9k83y7f94cZJGdvI6Hpkj9ar29hcXFvvgwRnByRgH3rVWtcuNrczKEixxBizY25Bz6dulP0+7iMT2Tx+bG3OAoJH44zVuLTruWQLdROE5BKj5uBzViTw5c2dzFcwEANgkMeR9e1NyW1yJtWscrdRW0cxdFwQeAONuf613vhtNLFiUBQ3JIDDHmMxPt2APb86xfsdndbVkkELKSrK+GBz79QaSLTZdMfz9HkljkAYbgMg5GDk4HFFW04ct7MzdRNWOgvkms3D+VGkikFpQmCex7H+dVoUIcXTq6ifkLlirA9Dg\/d\/lXA2t1rtzcz20U8kgKszgc8A5LD\/61WGu9UdYts8uIiwCsSCQfX1rKNBx0bIaex3T21nG5uyzR5+TIH48k1zN7sV2SMZGflJXb16\/WpRPcAukAMWMFvn4c46kHPU1Zt7z7Wp84bWwQC2ACPYVqnY2i+hgL9oBYh2Yx8Z54ourdpZopI2Zn+XkEggen09a2YLRbcjnBOSw9c\/n0omXy1HkltpPzMR1\/\/V6VblroU9dCG70+WNAIziRxlVYAfL9agi+0vEI9nAHOeen0NaWmyxuWO9cR55kzyR3wf6UX7PPcNCZArp95toH6L29KyjP3uRmlklzMzRJFtMRz8nfA4\/8ArVRa3eRsTjOD8pJwAfarotJPM3wkYYDqcgkdTyOlXXUywgkfMvpwMe1b3tsF+xz5tpVRVfIznp1FXIo\/L4c7twPPer0ipGzAFWJwSc5qm4m3LG2CCf0rTmTJ3JgFiX58Y6e9MdokACHqMA4zTnCBfmXBH40ohZR8obIGenFQ7dS2rbFURRTlo93OOccfjVeTTB5W+BGyf1qyILj+MAY7+1SIHZsg7f1H5VcW0tGOMG7u5\/\/W+ElSWRmkUZzwdo7DnjP9KW3bfvYrt+U9eOQDg\/mas2V4Y1eYRMZY2XyznCDPJGPU+pouN8wLzj\/W5yQff1rz5tI6XJJGWEBI2fIpIJXHOfStadWkQqrENjgj0+lMlEcTjy8ke\/Q8U1EWSRZAWB+7jtis3JXMpyXQgUHyWcOd6kKfcY9KlgtZmfzAhDt8uQPlAxyce9XoPJjuALhsYHXPX2FWZNaiaMpbJnY2zJ4zQ5diHLXQy5bOdnYmMRqDlcHDfn7\/AORU9rGrje7NjG3aRzyelRwX++6CupVl5wegz3qpq+rNBetEg24wS3bOKV29DFT6M1r6BLW5WSUbISoKCP8AiPcHpg1QudTgtpDbRFthO5to2g+vrkipreUvCs1\/NuXtk8c1nXh06QkRylz6EHuexqlqw576JFObxHczl47eL5HAXBPAHvj+lTRCa6tZWhnbzVX5mOGUY\/iI5PsOMDuaoJDbxrktiTeQOw2nt61a06ySK5A8yR5XzjB2rz6tx09DxWystzaHZnJHU5beYiEhsEHccMSR0Oe9dpb69bT2caKhE+4qAxwMt3985psVl4eu5j5kYid2J+UEKM+npW7baDoLOHt2TevI5z+YOazdRLSxi0pOxG+qxxX\/ANmSEARKzyFj2xzjHYfzqjPrNhFKssMzYPVFbgAnGf8AHvV6fQkmuZWiZpmZT5uCB8uQcAe1c\/c6dEZYvs8b7Y8h5G5yB7Um1bUmUUnZo3dO120Fw8EcbTRE7S2Mn6keh+ua7KO4sFgaSESARqcENyT2z1wDXnWnJPBdEAMYzgFsHGcei1rz6lKspso40HzbWzkfKe\/5Umo8t7m6pxjFtm5LdXeo2q2oVSjH7oHf\/ePP5Vzn\/CKyR3ZnLZiVtpYj5Rkevrmuit0mtJEAYMkbqwIUYKsBj+frXS6xdRJarbh95kQjDfN83XOOmPSogt5IIU+aLk+h5kVEe6Jn3EEqDuzk+gqdpY7fYzk4PRT0P5YqOC2hspUluoHbznJMi5Cqfpya0XtjFKzht4GcKcNgEdj705JJXOfldua5U+22m4gfeOBwhOR14J4xSwzWM0gVmRA5xmVsD8wOlDHU40E1xFlWGFVeO\/Pes0wXEswlWGMgdMnj8qytfYL2+I1NTmvtPCW9nIGZv4kU\/KM44LdunNIiS6eyteZd3AZiCDyexz+tb0GoRzNL9qtE8tgqBnxwByfm649KpXtlFNKs88MixOCF8sgjHY9cj6VknZWaNkopXRoQPBeDzAFJA5II\/THWpjaox3xsI41HKnJDfrxWHpL6Zo18Zp5o3hKsAxLBx7YHf09625biK6y6NwzbXTBymeRk981m076bE8raNOy1GeykfZGAkBRZCDnhuhrrXvFuJE8v5twzkeleSWc1zojXVtG262uMGUEZPBJH645rcg1P7JOrq2AuAeDnHpXZRrui9NUaxtZKJ7DEcgbuD\/OrqHqBXOWOsWV3EpEgz+oNXzqEcGHGWBPJHIH1r6WniKc1dMuxuR4PPpTowQdo4qlbXRkneMJ8q4+cEEE56fUVoKctn1rvhZ7FWLKKSPY1aVADxxUURzx2FXEGTW6QE0a1bVBTEAFW0Ga0SKJYIDIyoOM9z2rRS2BPyMCD04PP0HtTLaZYcop+ZucYz05\/KqkU16104YEqNwWRegJPOQenpXi4nGVI1OSl6fM7IUVy80jSWPHBq3GlIgZhlvXgZJx9c1bRa9ahUdSCm1Y5ZKzshyJVtFpiCrKCuixI9Fq0i1EoqygpgSoKtIKhWrC0ATqKnWoFNTA1IFhakFQg1KDQBKKeDUW6l3UATBqduqDdRupWAmLVCz0wtULNRYBXbFVJXIGaczVUmbIP6Uxo+L\/ixM1x4rvXMm4RsuMj0HQCvI2lkRf9KmaTaA0YOTtHfjt7969g+JVqbrxdeuXAiDDlT3wMj65rz6QwRhmKhtozyM8V+e4mX76a82I5m4uJJHBgx+769VLdPfJxT4nvL+T7MqOZRyNg9PXnA966jR7bSJyLi5Y+aJcImDjDdSx9K29TksLB3EIAEgIZUAbBU4GQMEZ75Oa4XWs+VIynU5bxijlrbwxEt2PtK7bcAMWDZfPQqcdCD7fjVy91Cysy1vZ5ZVBUFxliB78VnjWbjafJDEqcBjxx\/wDWrJvt4uCrjj19T3q1FyfvMqDdryKE1zJcEzIgZRy3PSoxeSxcBjH5eWA5\/kfpVyOMtIsURwjHaFYjOT1NOufDrRO4S5UtkYDZxycV1e4tGU6sYvUxXvJnZm3ZLAHn9PyqKK5m8uWNsFX25GORg5+nJ61bg0S7knSKV0xIWOYuSFXIzjgVfg0KRXYOW2kbe2cZHzHngHsapygtLle0i9DHs7SKW5R5x+7DAsBn5lyMjI6Z9a6trRbQPAxRQpKhFzjBPU9+nQnqKzr1LbSrCS3ikYsWAIyOnUDpzj1rGAd49xyD2wMfL2rKXv69Avc3ptMvJIhcwqCpOCe4A7j2NJZ2N\/FLLcRM1tI0bKGXng9Ru6D370lu1xNHGjzBURCFzn73fG3qPb61ajuFdTJztB4Hr6\/hnpU36Ck7+6jQt3hXS5LCK0KXU2Vecybuhzxu6fnVRtBitYAdRcgOSSq4HIHGX6D37elYs91C+S4+fICjPB+v4VvpNGIIXCmRTjdG\/wA20Y446kZ9Omaz5XHVdTNxa2KGn6fp+wtlZH37M7uR3BXB5B9avSx6iqsnyquMAL1GO56j\/Gkvmltoyt0nk+cSQ8Yy+3oFGOgOelLa3EqA2zHCkYMpAbeox2xwR6VT11J5tbkcpmkkg8hDHA+VYLyfl7EY5571FdNf\/a3NsUjCgHZGOoJwWZuh6dKuRW4kBleJ\/JYfIAQAf9or1z6GrEEHlIsJYuoGccYz7j2rJyS0RjzJMybjxNchEt4Ywki8GXsR64HP6Ui6lNJOGuF82MsC0kRwcdzg8Z570r6TAIvMmG1lkZxk8kf3sjjjPSs+KVYiTbgq4fDK4GGAxznsM80mo2tTE0rkk8onEZhiTcrEOzZ9vTvVAS3gT7I0TgMcggjGPx6Ct62gkktfIubhw2WkUcKW3jr9OvWnzm0u7lruHEO0DbGudoXGO5JJarTa0ZUqfKrsu+GdISSYXMKPG8UbO0kQ3cZyQc+3GBUGr\/Ybpo7qxMcUYjKtCfvhwTkH1J+tQvdXtikTaZPJauQQ+05BPBGR7Csk6ZcRym6nyxbLnAxgnqcdqdnOfO2d9SpDkUEhPNtprZGjC74wc9hkE9QP5VntPLGx8\/8Ai5ACgdO\/0rRWCJIvODbozk8\/Ln3A71nTWqsxA5Xsw9u1bwhFXZyRQgkZuUZhxwPXH6VLbwyzOZJjvGfXjn2rZ0qxilsWklUnyWOMHlsj5eOwB6mnz2Moh2TYSRiu0ggDn1HvUe0V3FHQ4WsznJQyMsO0MO4PAOOnNRbG8vcVK442gnBHpWrPY4OyQZAHXrUTxxIjIO3NdEbdGQopO9yPzHjAe3BRcZK59uagbUDD8yLvY9D2H1ppOJM4B4J+lUw8Tv5RXhmx649aHqDkWZbuSQjycRY7D3pPNjL5k+YemaseQ5GQAF6Z74HvVM7fO2R\/OT6iqSWxV+5OkoRh5a71Hc+9SPcSNnYMcgEetRiGRlD9\/SrDxM65RDwO3b8Kqye5pZJWIhMrXAE+5AB\/D8\/NTMmHyWB3dM\/4UthGF8yOb5T1XPv61UvIiMlTn2rHTmsKLsf\/1\/hdr2Fx5UKCEEfdxknHv3p1vNExUPkqTg+x96heKNLcGVt+37x759j3qlax3E+WQgKc8k\/iK8tSUtRXUdS\/NJ5m\/kbQcAD261NbPJL8kChO7M3JIPoOlVfssyyFIyAM5y3Rc\/zNEFtNFOxLgrkc9ePcUcu7ZHOmyteQ3EkzbSwiXA3Y6+pGK37S3t0DhFyVBJJ65AzSyfPL5bDKHlVHQ89DUgSWCcybCydwPfpSv0NHG7sZdxaRvIbieVioAYR52oM9N2Khkg0q4TypiH3EBmiHPsMnOB\/nNT6gJpItkMf8JVn9vT8ao2VvawSRh4SSQSW5AGPXFTORglbVmVp1lIuoiG8Yxw5byy\/AdlxgenStvXtMTTYBfwuZY3IyuOVJHr36VtXiWsOmo5EcyyOcLtB565z9OKm02C6lQMsbGEjcqvgLk8YPXjFc7rvm5ynY85e5dwDCo39QG9P\/AK9XbUvfQmM8OpxtfjI746V0Mfg28nv2cy+XFySQvU+ijPT0qjfaJeaPJE87KBL9z5huYDsea7lWhL4WS7FeCK3I224ZZCTvycqSOMfpS2k8pZiYSNrckMO3ftxWfcTXcUoYPGqr0VTk1Z0+4hWWQz5dmIGD0w\/f8D\/Sq1auLfU6OOfzsCOQAy5XgHjj8fTrVO4tY7xVuEnOc7uh5LY5HbmqhuPKkhuIcumMEY+7jkVqvM1wsRQqgj4J3YO0dselZtaItPW7LGkC4ikcLjc2CQeMlTnI\/DvVzUhDrU8Utsmx5HWMt02gdSR6e9VreSCFUWAmUgEADsW5Oe569K2LNFWJJJmETpkqTycYI\/lRya2O1e8uUk0+58iV7dR5sMa5BcBW3J0Ix6elOvoXJhu3JYH5gTwAG6n8qyYoxHqBtzLuVgCCOG5988\/WuqP3GSQ4jiTaqt6Y9utFuWMrFx5uRplC9tba\/gQLcuDEQw28BiQD+X4VHI1qtrNHNI5kJG1l698dvT1oitjuM6SK6\/dZBwwUng9MfUdqRrV49zQSOCVwAeB1656fhiopu2kjOPaRkpPbfZJN53+oP3l5GcVUlstOWMGyHkmMZbBOM\/T8adb2wuZTBcMsYw0TsfpnGB\/PitC2tLaxuJZgrPGzDGDuzjv+HFDSWxjKjfVMT7XZJaG0m2yHH3ePmbHQZ7\/WmI\/loJ3jCJjoTk5\/DgVka5ZiWUiBijsw2cZIIHtU0NndTApfNvAOcE7cg9uOo9qxdO9mjncbvQZMst5NCbcRmMsFOR09yMcgVd+2SpfefcyiSK54j2DAAHYjtj3qX+z7m8gkt7QKxjQ7Co2nHGQPQ4zyetU7O1igj+wtEjOjkqufm59RntVculzos1rYt3cE8soeGPzVC46ckDPAb\/Gkt7yJVZJFjkCgZjchZByeB6+2Kraddzx35R3xEGIyePu8\/iBXQS6dp13MuoxJgKCS3\/1j2+nrWLdmoyMox1Ue5jw6pLBqA+yKbdHPKnHT8c1uWupao93uR\/vMF3kYHsfTPFciEjuGe9lyhRjtUjhk6ZGOcj0rqfDmqadbj7AGaZWy224UkIfUdNtFVKKulqaSqRi7Hc6NqBa4fR7ezupbovl9wIK\/MSc44wevpjv1r1H+zbyNHaVQpjwCM8kt0x60yzkTTtJtRZ43SqZZC2WYttyFC9do9\/SsU6zdLuu5Y3EcYUuZ2EYEkh+8B12+npW2BxtSkm47eZ6cacZLmZvBXiYo42sOCDVuM1nC5jnYyLIr5J+62elaFqktxIsECmR3OFVRkk+wr7qjUU4KZyyVm0i9GauRmi40jVrDP220lixjO5CMZ6VDG4raE4z1i7g01uaKbhIsyHDDAJxnIHb6VNHmW+nmfqQn5jJz+tVUkVQCxwMgZq5FhXfDBsscEdCBxXMqNFVGklfdmqUlDm6GnHVtDWejVZV67jKxoKanUiqCvirCvVAX1arCtWerVOrUAaKsKnVvWqUeWYLwM+pwOOTyfarJBVEkJG2QZUgg5H4Vm6kE+RvUtU5NcyWhbVqmVqoh6mV6ozLoapA1Uw9SBqALYal3VWDU7dQBPuo3VBupN1A7EpeoGakZqqyShQT6daB2Hs1effEDxDceHfD099bcyMQiHGdpbjNdhPdxxrvY4GcV5b4+1OzvtFnsJCpEuMd+hBBrjxVRQpSd7Owz5Vv9SudTkeQtvLHJYtjknJye\/tVSNJZCqKG46+pHTn3zzXbvZ2llBtgCs6EtuI5z1\/yK5PUdXtbbMVnGAzZySeAeema\/OlNPZGViC5uYbSNraJlXjLMOuawHvCI8eZk5JPBOf89DVGbyUBmcbiTk9\/wpbiJZQGjXaGwSvfnuK3jBLcfKhBcMkqPDIxLHa0eM4B+91zxVmfzzkyhQiqy5+7nrhs+oqLTFIlKpGxZ\/kCr833dpLfiAc4rWmtZZU84q7Rkk7m4AUnnGeoHT0qm7Gcm09DAkZjEsR+6hBQY+8xOD9etal0NctbNIrxVjjYlA7\/M2CMADHTaBxj8aUqqQGcDAjbfvI3lV\/h+mSOfSqt7eXGpCAXpKROPk5IDdtxxke1Tdtqy0FJXaui\/ot0i3sNrdSlbcyqTLtywGAOuVwCCf\/wBdSeKBb2lzHFA4kVmYl92eRxtI9Rxn61AHkmjMMaQhVCxtgZPyd+f73ep9PVAry3EWZvmKopGCM\/OSOvTjHtUONpe0K21sUIofthR2Utyo5Iwxwex6Y7VLNZSs\/myhem0AYH5Y\/nXUtYzXMEYXZEpIk5GWG0cZ7c55rOu7GS1SSVD5m7gbRjbn0\/8ArUo1Yt2TEpxuYFwv2ZFiQZbrzmq7sSmJHJOMAdMDuKluJ24l++x456jHWs6dzHM6OPw6nB\/\/AF11Rj3NWknqzLaYfaQG6ZI3HOPqcZPFdZpOo3MOmMXWOXIym4fcUHGTxnntWVY6bId0nChSBng\/e\/hPsRTTaTQsYY5DCDueTB4bZ6UqkYyXKKSutDeaeKxuCzt9obdvAZj1A984Azxila5kmkdpJNoJAChuxyeMVkWt4kJCy8NGAAX6sPTA9qmt1hjkV2xn7yBuAahKysZK+xPb6nJp1xI8PzxSAg7sgEev1rC\/tq5Fy8qiNmzwORj1zzzxWoZID5mU8tAME5yMnuOv6Vk+RbFmIKsTkAZxuHbGRjPP400o7tGbikdnpvifTLuxRL4FJ41zJx8jYPbr1HWsubUbXUW2QxFGH3WxnK+wzzkfjWNam0mmcsXAXhQADj61es7CK4lKRzJGFZpGJJHA5I6\/Suf2MINy2Kv1ZZijnnn8w78IoQKw25A6Z9\/eh7ORYfIiYrk5x1\/DPtUX\/CR6dGohjDgqNrOBuUnPUZ6cVpxX8EzDy0LAj5iRjPFbRb6o0i+bcns5zGcShCVHLEj9BV2a2S8RnjlYlgMAYxVeS0snQybxuxyg4PPvWN9rltZR8u3sAvT2ram03sbxtsxJ9IeIYUFsg\/hWXJFcW5ITP3en\/wBau6tLyOcFJlww61BfW6SAtGOnPFdDijZ04taHNabrV9DMkN0qyxL\/AAMM49x7\/Wrl1eW93eNKEGMggfdzx7dKzZUEAdictVWKZGYKo255rn5EtkczbTszbmuHlBZeegA9MVmPlmGBtY4zmpI5GC7SBnPOO9Skg5BXp0NJaaIb2uVooYVlMb4IbPC1aeSzTJgGGYYPHrVWWJThiOQQQf55pNhALIAw5z+NS4681yLdSOWfDbSOO1KgDglsc9+lMkQkjZ82BtJpR8oxjrVXY+ZsUSeWNuQKlEqZVkmwe4x1rLuZCVwOpwKrFtrqp7d60V3uVzeRuMyO2WYFj144H4VVkIKkZB5yMCqySF8lOc\/pTlSRf9Z0FCVhX7H\/0PgmaFmkaZiAIyNqntn39aePMVlSN+TzsVc8e\/PFZUyzywIrEgM3I9Pc1sxJHYQNJH\/dwxPVvqa8u1lZGdtdSaW4mXCbQAByxOB+GOtSWrObYtdfujJkgH07YrHh1uCMh2iBf88YrVMqyJlpcfxDgkDj8OKifMtCows2jXWKLakxJLYxj65ptzPKlp5cQLLuwFHWsZtUuVSOOFiSMYYjjH05qdpo1ZIEcyMW3Nj7pH4Vi09ze66E1xaxW0BluJ9m4jCnnAp1r9mn4yXGAeBnINUbt7SeJkdhGxDR55yGU46e1E11DaxRx6WDGn8Q2AZ985yafvSjZbkVUnY6o3NhaBFlULu4XdyM\/wBKnh1OK12RFlQSe+fl9vXFeW3ct804iLF1+8p7YPrUCOu6SVnyI8KcHj6Cj6vfdnLpY9C1i+uHmksTcMIiFO6PBO0jJFcdfaZNeXim3mM3l4xuJBTPOO+K6FbcCzCjG9hjJ6Ant+FNe8trNDHahXfP3hwM9Oa2hHkI5mchd2F6ZlgCGZ4c5Kc4HXk+1SwWaqyM7\/dXDk+h5\/MV3tqq7GMSBZDyynjd6\/jVLUrJriNX0u3Msrj5iMBRn1z3rTn6Ap30KuxZYzHEC80ac54zkcd8d6u6faxS20k1+m3YuA2fbaePas\/+zb2xt3ku2VPPOzAOWHfnFWo0ia0KfNu35U5655II\/KpstbGqa3ZhpNNuaIHndtyOmARxn3FdjBlYkjd0KghcHjnB\/wAmuXuSIl8xY1YI3JHJ69Pr0p32tpmVlRgv3mznr6VUk2Smzq4rSJcENukiQIT0Awc1qw\/6oFwQQ2ASeMetZdg0N0fLc4dlAJHfIwM1qwqsAXcc55A9McVz3vobObUbkctkbaYT8kRknI7n0pIbxVKFW\/1udvPAOec+nFRX2oTiaNHjAVgT836e1VBGzNHGxCs7M3GMYbH50My59bouLARvR8Fmfcema2NQERceQE8wptGOAR+HHFUyoefyoUCrjlhx04xUgWNGXGQi52jqSfrTtKKuVGu\/hiPgsLJZEfzWDInzx8csepH0pl1o9pqFwiuVi3D5ecNx7k9OPT6VLFLBbKAxBYnBY9QPapppLKZiPMSXgbAODnqPpWcptIr2qtsRwWy20T2ckojlPKyLxkfWqX9hqHa6jQbl4JJ5JNbQAJRrhIgIyoAYnJAx1OO\/vV28eCS4bySvlMM4znHHr3pRqc7fMzanPn+NnnNxolyyEsNr\/wAJPKkHjr9K142u4NMKXBUttCrzjJyB8v4V0VuY3X5JN6YwN2Pu1mXVxZSTGFlxyQwHf+f503KNtSI1Y2aSOUnt2tlN2HBjGVIOAVLf0z3FYMVnfXDRyRXBUlyy\/MSB2xn+prunW2nt3tIwEBBHOcZJ4\/GuHmttV0+8uEidhCpKhMdSe+PxpQbZgk3uer6B4uuZdNi0C4cLOqtGbuV8hRz0x1yPWsrUPEVrJdT23mSS2kyJGwlO5yI+m09uemK4WFZBG0kucnkjv7\/T6CrMTRM4ztwTwT2NK3Lsdftp8qR3EMs+nxJc6c7y20g+V1z8pxyGHYj3r3j4Z3niCxMfiGbyoo1BVPPJDtv+UbQFJBz3IrhPhIEsUvNQjuFLt+6K7gVGMEEgZ\/nXfatrO9IITPHAZJWeZWGDgLx17HqPWsp1pJumtnuejQpxi1VZ6Xc\/EDVrK9adraOTzVMSfPuwqtk8Yxz788VwxuvPlecgDzCWwBgDPPA9KxdL1AxaTAsJaWN5JBubBBwTjB544z1NWWWWFVeQY38gV9Jk0aVNPlVm\/Pe3kLET5noar3PlxM34D6mtG1xHGsa9FAA\/CuZ3mSeKLtnefovT9a3kfFfSRacmzn6JGwklWVkrHWWrCy1tcRsK9WUcd6x1lqystMDVWQdc8Vly6rctdm3tYy0YXPmLg846e3pzVa8HmwMm5lQ8tt6\/Uf1qva3WmWl15EM26Z4\/M29WKL9OvWuSrKV+VuyOmnGO61Ylqft6S2l750Yt2IIkPzHPLdOCDWrc3d494ga5kSNFCA4xGsfBxg4w3v371FO000IvYI125ZCJOCQoDnH0HP4H0qpp00V8j3kmGhL4XODnZ0wPc\/yry\/ZU5y916pnf7ScF7y0Z1I1m482KK5ctGVYou3JAGB1Hbn09K2lkrBWVzHLAjIp+UEDBKleVz+PYVeSQ4GTk+tehhbq8Y\/D0f5nJiNbSl8XVfkawkqQSVmrLUyyV3nCaIenhqoB6k30AXN9NZ8DNVt+Otcl4q8SxaNp4midTI7AKpPJHfis6lSNOLnLZAdg8wBI9K4zxD4r0\/RyPOcbmGMA14ZffEPxBcRr+\/CleDhQGb0z\/APWrzbVdaubmQsWaR2I355NfNV86jbloLXzJUr7Hper\/ABBv7oyWtr+7jUnaf4gPc15zf67qFzOkaNvMjdCep9eeKwr2WXIR8qYyQ5yMcfn\/AFpNOl027vW+1BhIq\/K24BD0HA9frXzdWrUqPmqO4pSSXMGp3N3bqwvH2swyAnJ6flXGXbS3IDxIpKdQoyeeK63V7R4gPsylwnWTO7gdcgenFVtLnuZYdsRT5JASdgVnVuQobtg++amDsr2OZVW43ObsIGjk8q6DZD7dp4wSDjtW9PeRiz+W2Z2ZmbceSFHc+uTn0xmn3TXEkrMqpHgHcZDk5PI249PXFcybxC8k8LETyjacHK4bJJII47YrW3P7w1L2iuammTWJuo3kkAbeAFGAORjktx1PfgVoXaWdvtkgkEu1jsdW37ZM9+wAAz061zVvDcPJFbznKxnI4GRk5rZtLO3aR\/8AVgbjnJIbkEkgdCRjoe1Ekr3uaNa3Y2ebzmOS5POwY3KSez9vyq7DZ6hHGGaFZPJB+TI2hCCMAk5z3x61NMslkixWtwF82T+FQSQRknJzt\/u8fyrDgjSZjACMscNlzHvznaM+x9ufasne10NvmWiLVzZ7fMkmY\/dG3DEbcAErux9Ka19Gl9GpyIhEj7WGzcTg4z0Oc5PTio59Qu7eB7HyzsBwpYjOM4HzBQcD3rBZpokyrkGQjfk54HA4PetIwcldgtdzuLnUJ3TLqPOIICDkgk4A44wKoi4nvbIQM7pKOMhsc9wfwrKguZROZLvCtOWKkHbgrnknqQPSm3rzlgZCVXIHIwcA4z9T2rFUfes0ZOCvoaNvaeQHnvE4gIG7nBOevueauXV1aaozBFAIBOWADLjHQ9a0Y44o\/wDRvMzFJGpPmfeDnBGF9DwKyLywhhkcoB8jjhTwc+vHetrKXvPc6JU9OcSJkixKQu9jg9DwOmcdKjUgH7XIoeE5PCjr+ZB+tRzSRt5brFvZBteMnGc9zjng1kol1ArSThtiMQu0\/IM8nj0oWpnzXL920LJ9oKbhMFJBUFgfYjp06VW+2RwyJ5SgrGCC5HHPp34qjJcho4rqPG4PiRQCBtXt75FWJrq1NtLE65jkO5SMYAx0Pvn3qrNboyIpI\/trBFlQEtktnt6jP8qSSygEcRGEIUdefl9fTJ61HaaXfMontY\/NXlycbVIx71EYmaX7QIyHfhkHYY7ge3St7W6mi7tFi2mhheUWcvlu3IGM+2Cc9K07lraSzXznUSSH5nUdAfQ9uao2cAkEcMiqJHJ+YYHFdU+j2zaWI2RTtYMT1bjt9Kl0eZ3LVLmONhtrKPcvmb0V8EAZzx19M1t2EjLFJIkQZQwIJ6irOnaRazCU3Vu8hLDZtbYi47tjr+FW20q3tjlSXRhuABx068+tS3ryyBQasmc7KZ5HbLYJ7ip7G6kLYmAZPpzWw9ksQ32w3Yzncd2R7VBDFGr4A2nnPpWq9025HB3NBImOHjXjpmrTROoJ554pbSXyQC5yDWk7oRvHPtW0bNG0Wn1OWa1UufNQc9c1SbRIkTzojz1J710148bYkPIHaqAuVIYoQVHBGelKSte5M0loc68SruycnPSjOVz1x1q\/dRiSQPFyGGT2qrF5aJtX7x681y37HKUSz8k8A4x\/KgxlCJGOMd6cPl\/dnIx2NQsJDJtHQ4GOvXvVWY+XQuW87wOZI0Djup6fjirLxyzr58gBJJ6D\/CsueC4swJAcgnBweee2K17K\/iCqu3ePX0rWCRpBr7RnS2yNw6kN1BrHe1cMR6c16FLbw3UG9AOlcbqCvDLkdBwfwrd2NZpLUq2\/RQV5qyxAJBwKpjH3c4\/+vQ8JQFlJYdQe9SpIhPQ\/\/9H4HiEcI2KdzHk57\/hUk90M7QmV6HPSs0SPhvJODjg1UF9JKjA5yByQOgrzlHqYrXcfceVc7liTyivUL3qvEZ5dtsikhuPr+PtSQSLN8kfzP0zitWw026SOViwUldq5\/wBrqfyok0tGac1tCcwiNYPMy6lMYHI44qS2h+wuBglXbgjtnt61uQqghitmIbYmCRxkkk1l6jZxRp5kbiMJzjPX8Tz+tRFrYyc9bGNc21yrM1o5dlYkhupzz+dYqX13LeKtwSsII3cY4PrW9FdABlQFlOd7f4e9asOrwR2vlww73ccEphcj+971sgfdnOP5U1zsdtgxgDdg4960Y7KC3RZLZWcBtx6nJH86qxWln53267k2RhiSMdT265rZm10QRA2KGTdjaM5PPQkdge1T6EWfQ0rxJI4Gnt3WRRgspHY1mC2ur6WO3EC7iCVkTgBe4OK3fss0WjS3k7A3DoC24ZGSeFwMc9varOjTHyd4t2DrwFByCfTJ7VyyqWTaIWhKmk3cemob2ZY5B90gnKkenrVu3WGGFVmaW4DZBbB69+FxVfUb2PzPKKm4udhLFfuR+wHc1d0gw21kJbYSPNKmS7DcV5PAHTjvWHvSWr0NIQvqzPnhjfZPLA6xr90SA4BPAzWL4ihZ4kj353Zx5ShTkEdAKdrmuSvm3tt7SI\/zl+CCO2339aisNcumnSK6gUGUhVIBwWbgcfU04Jx94lNmRaibZMjoUAGMgZ5HTjHBrY0ZiUKyABCDlyOcg4A+n+c11mj3GlShFvo5WhYkMwwm9vckH5ffHTitSexsI4YvsdvEX5ZgT8qqSduetU619GjeC05jnoJobeXMYAION+PvnrWZcz3E87fvSiocYzjnvXSrbR6pKqXToWiU7UXhBk5wAOnH41OltpiKQMJIr7HT6cZGc\/yrL2qvqjOc7mJp1rLcM6nLsozhyeOf1reTSZru5DQlVihXAwOc96jjvIhK6W0m8BeMjkevI61O73UIhkt03DkSc7SPQ1rdvY5nd7mkulW0eGnkxgYCq2MDr+JPc1UuDFb5hhlVto3KhAzj6VyWqwas0wS3jYqxLsRkqB2FUYzcxXYS5+VwF\/eE8DPQf\/WrW3dgl1ub80cl4spCYByWZuAOnriqFlPbWb+XtZzx8wXgZ6fjU7XfmbftKNMEBwqHAY+5NVNOTUrjUJW8kQWyLwHYtknuDz09KylHTXYtnWJdpHKkmGLSDC46H8apJcuTNG0Wx5FJXBwFB7iuQkuZ7SYacZOFbb1GVJGTj8D0+lb8N7dywpA6O7xblDjnIyMZz1qOS2pS00L1t5wKRwNvXnORjHsKni0oSSfaJUy3GPTP4VluNVW3lmt4xhQd5OASBxznGCataGL6\/t4bh3+cbkIBIH459BzTurbg5aF+Swf92ZWCE8kEEDA9x7Vb\/sia9iLwsv7wEANyxBGP85rUS407ToRbz3LXEgHOOTnpnHSkSaYfvLZVKMAwYcOPoDxXPPmS03JdRvQ5q28OM07R5EcUf7ubcOhxyPrWUNFiNywg3SFs7dqn+deix\/Z5ZFdTlU+Zozzlj1zjgn61oWUkVgXKqXkkIyIwCVVuBx6e9ZOu46vqWpdjiPCusQeGYrmO4jG+XDqcfh1PavTDretWN3azauI55NXdId6j5baIgt8xxkk8cdO2ayJNL0i9iFnFbiN4Tk+aeTuIG0DrySKqXhl0uE2jXkkk0ybXUt8qKMhe2SQOOMVM5RqNWWp6cZvkVzsPNlmV9JhIaSEpJG7KEzt6EDpg9DiuzmvbPULS3ubnEbiMKpjGSxHXI4HXj2riPCc1jf6MmjyzrBf2rs9rJ0YBuw9QejL6dKtaNrkjDUtO121WOe3jWK1A52ksWZlA7Hu1enRrqE4zaty7tb\/5HoQhFwckzqTMllLHPJColaINuBPQ9OORnuaH1EX0rScqScHjAPGeBx2rAuLqd\/IjmO9pI8An+LNa9k6RQrKVBaIneCQfl7Y\/GtJ4t0nTxEY3k79X1e1r202OWVVdCyrFGIJ5qys+OtZqajMHaQD98+TkjkA9TTJJsYO4H3Bzn3r6fD5iqlV0WrNfP+vIxUruxuLPVlZ65pbn3qdbivYuWXl1a4F28TRMIlZUD4J69T78VDcJNpesR3vl+RbTKUYNgmJ2bGRjs5HP4UC496lYJNEYJdpEqn5CeSuDn+VcNWnaanOenT1O2nO8XCMdf0Na7xf2j2JlLRyrhipwMEYOP5e\/0p2l6Lb6TpkKrMGnAAkUEH5jknbnOQO5x1rnNHupIWewnBLW5Gxv76H7p+oxg\/SpLC9kXUru0kYkDZLGD\/CrZBA9BkVPJepGUXr1HzpQaktOh1TXsFm0k0hJcrkgABiAfbr1+ta1tdrPEkyZAcZG4YOPcVzEkdvctG8y5MZ3LzjmtZJyeSa66MHBtWSXSxhUmpJPW\/W5vpJVhZBWEk3NXEkNdJgbCyCnmUKCT2rNDnbwQK4XxH4907w\/mGVt1wp+4PTsaxq1YUlzTdkB0\/iDxTZaLZtLMwLkYUAjOT04znmvlDW\/Et\/rOoSXN428IeQoJCr9APQfrU\/iHxHJrVxNcXaORJkqEOdoAHABzWNo89jblZLuZolc7IlYYY7iGJ59M9fSvhcwx8617fCunc5ZtyfKNk1eCVxHBuZ8qFVhjr7+oqpctHCweGPMwGSWG5G\/H+hqXWJJNPukQbZFuVkX938p45DBlBOR9Olc2bsCOWOWN4WQ4AwMHIyQec5J6EV5NJaXijminHYS91OW4YjZ8pGcISoyPXjPFVBJHLC5+zsu0gnaSTjsDkcZ5pC81vOjRZO3n5jnII9enftT95kn2MRsfJATDZGOMnHautI6ntYvnV5btY7W1kNsikhmYZbC885yMY6\/WtqTV9OitbWEJ5\/mRenCEDv05xiuXiW1\/dxs\/lJ5m6QMduV9Mkd6XVLyxvmgFnJypIKnIycYBHqMVlOmptRtoYcqWw7WJrO\/McxiEVtEgAK\/Kx\/2R3O39aoTGysyrWYZpZTtQ7cAAcA4Przir1laC3jVmBk5ZAXGQw65wfp1p2oWt3NIBJGhRzxg42EA9\/TPNaxsvcTBaOxj3sF15nm3TqZurDJyf\/1AVLA7xxME+\/Ju3E9uDyCM\/pWhbxSojW8kaO4LEyHHzDj1zz+lJL5MLKIlG0NtaUDojD0zz9OtW5dDrTui1ZWSJKlzeSKNyEHIPA9j\/Lmq6+WZd0QQLJjPqBz1OeTSnzDI727ggruLNnLZ64GRxk8Y5qFdMSGYM0ZRduHZzySp9Ov0x+dZxTvuHkN\/s5\/P2XTfJyWKnPTk\/Rvb1phtQOIwDs3YDHJ5zjcBzwce1Wpn3xBI12gyYyODn37H61etfDtzexNdhx8qMAB1BPf\/AD0rZRb6lKLl7sTJELSRPdSkSSnhfQH1xj8MVLPbR3DuUTzQ\/lgqT93Gc7QepyauNZx2wiN04d1PJzycHPXPWmXDWzLlQULnIOclcH\/69SkxOn1F82ONkghUt2Y4JwM9SfYdMGrN\/fXEVu1zYKH3bMEDO0DIzg++MVn\/AGu5hMZdiisCrDtzz\/LBre05bKe2aEyu0gXeWJGcfT0FTyo1pXd4LqUNOtZ7vdLIqwSMCGIBG4Nzg1napbXFpJ9knQ5Vt2UyEOe\/+NbEkc9hI9zDP9qQDIc\/e3E8cA+mK25JIdX08lh+9UcjHOcURjboXGkmmtmeav5LQGMqFcZ55IOc89elRpZJAd5lQh+VSU43FR+XNXLu1+zrlMpn5Tg\/dwO9XP8AhGDqlssxHlZYFQcnOAB1P6VolZ2bOVxd7Mt6QGnd9PtXSPBDKrNgH2647VbuNHuY0u\/kaRoyDOUGQrFSRk8cY\/SqeiWGoW2qBLJUWQYz5wBUgf73GfSu91MT2h8yN4w0oXzvL2ruA65BJAI6Ag8isqlRwfJE6acHax5zbwW7xLKJikgA3LV6ISQsZfM3ZPrxiu9bRdMXTGa5tsTFSvnR4OWHRuoGa5oadbhki+YDue\/Pf8q0p4jmvboCvF2GW9zdICsShgTnjjr1zU8qrNEJLgCN19eRz64\/yK6CLS4bbEccm5SMljhcL\/U1zGqwiBWe3lEq4w4UHCt2BpT5KnWzKqUm9xtu6xxq7qCrHOAQOv161ObqFW2PFGV65HHXpkEZ\/Kq+p50+2hiYB3IGRnPb0rPTfPIZVGCFAb8T05oVNSaaegShyvlZPIjq5eNgQTkqBnHtVm3lmmPlRxOx7kdPzpQIpVEcw4PerUXn2SCGADyi2eOeenNbOLijF07aokbTZWjy5CgdRjJrAuNKuFnfyZVGF9Dz9a7RJhtyuGx94npz61TnexupWg+aSQLgFQAB7knOQKwk5O+pnJNnn8tjfK2BGSOn+etURb3SSbWyobpuH+NdpM0NsQhc7s8ccZqteQrPGm47MZ98ZqoXaIhqroyDYTeSZYEV0b+LPPuKswwWaRHzTiUHkgHjHapSRbRpaCXcrPu44JFTzS2luTJjbubkse9aSX2TTm3TMa8migeFkJdCd3I9DWkZ7SVjLEgBcdMDn3xWPq1+J2SMgqEP+SKptfxxxxw3MeVA4cev1rOcFZWHUjH2asdHBK1s2+Jh5ZwCvfJ9Kg1iwxF9pUZU8nmsuO9Nthhl2ydrf7J\/kfWt221YXFu1tdqrjGRjlv0ranLTlkRTqXXJI49FMalnAOD69qasqudoAUVqX1rBOm+LKFe3tXOqhjOznNaRaaKU+h\/\/0vzwtWIQ+ZII1JO3cMsR7CrT3Vlp8bJbD9433iwzU223mtDclSjPwh\/iqN7GOeEqyqsmBg9OlefJq9mTJrZlG0mldcwoOW64Cj+daIuLuON\/tMihCOCOuR2qG+s54Y4o7UqCmTjPU1BbaZqN9Isk3y7CMqRjj27VGjIVnqNjvnfIsA\/msOM9KrXBlTLXjFyfvE9Oey4\/nXZ2+mxWEGwr8pxz1qkLCJbptyCVmOctzx1pp22RN10MxI2MS7InIGPlUZ\/OmRxXlslus2SxdmdR2U+\/txitybV1t7p7doxtXAB7sT2x7VW1C+tFkRolXzWXkA4J9Pb8aaZFyGWzi1BzCT8gQgezHv8AUcVqSRWOl6Yba6BhuJgqp5fzOSvIbtgA1BoknkAT3YCtnkHnrk5\/KuN1e8ub7UjfKWG9sp\/sgdB+FRy8z5b6IuKdrM7i+1mOS1jinjlKqwb5MKWYDoevWuqssf2elyFZJ9hZod2foDgDJx+tcjpMcksqvfrtCruO5cJ+Oa66Z3SJZY1bLcDA5P8AgK4qyWkUZN9CUCG7t0vYothRxkR9weCD6CtDUHItEe3nS2J4wcnB9No71kwzJLtsryBPs7fLuXpu79AOfeufCXs1zI7KqQ27uEJYElV46H6cc5pxtY1WkdCrPp+sPLJOk6yyKCTI4CqijkBe2T39PxrY0yC\/EayXcoZ2bqACox0xx196gutQQwN9pUrb9RjucjrWpJfmKzknjVWWDGzB9SBWbbkloY6stW9nHbMs88jS+XnCPgICRxwB0A9amFxEYJTcsBlCCUGNw645549az5dWtrg2qgCTzWwwU4Bxgbj+NVtQsLC9DTupjZXCllY5256DnAzVqDt7zNU7dTm47q8sZi1jJ8+CVYdwfr1rXj0q7uIvtM0j\/amy7bDksTzgdsmtC70+xnkgadXIQbVVB8o5zyQO31rQgvIZLiGxiPlGQnc7EZVFGSfyHFaN32MotyaUSOxt10+FZLsrubrk\/Kg9Ce5Hf34p+q66tnam4sGjm8sDeAQWAP8AFt7iobbCqtjZxrL5hJZm+brzjuPqa1m8I6ZI0eq6iwllOF8tfljGAMdOTilzJayB2vqcFJ4jv7+DzLeZonz1TjI7imWl7czszXbmR9xHPJUZzjPeu41y60nQlR4rWDzpwVUlchQO5HvmvPZtSjfM7FHJGMIAP5V0QfMrpB5WOtsmRm3AFj+grRcXJxFCpWNPmznBY57+1chpV5ezgC3QKAeSR0HrXpum3dtp8P8Ap0qxiTkbsbnx3xjgenrXPWqW0tqRbqUW0iFhH9phjyp3ow4YnvVlJI45EgVTmYZOR0A7\/wBKnuNe0+6jUxHCqSQWXA+uSBUA33riVDuRcdOmO2COtc6k1uhXvuKkdvqkxeQq8SPwP4cqRnPqam1S3e9tBZWJEJZssV4AT8PWsW9vfLmMFijGJDudgPlHPr6E9a6ZLXUls\/OYxRu2NySHbgY\/n7VXMkk5EWe5zY0yCwkSSa6DuRtK92I9K2PtUkVvGzKykgLGMdcjtVW20ZZJkvruNd1s5by16N3yDzzXodpb3GrYE0AihKEB14Ck\/wB3uTWMsQouxXLocW8k9uEgRNuRy4PQnvipYL\/ZGIGlyCdz7AQWOMDJz684rcv9BOnWxeNXnYfM7jGAPzJ+p7V5uxuorua3jB+bAU9\/pWnLTqe9cNYo7mNLvUNQie3YPGAAoUAFWyckdM1FqFlLf2wmYut7C\/lMjnIYAklhjkYPUc+uaxrCeLS1ivlleOWHBDISCee\/r1rWJnvXkuopwPOfc+FGDnnByOK5pKUHa2htCpZW6nNw2moy3OxXOY2GG6fj64rtdG0rVriSO+e+QOjsgOGLnnoSccex607Tre1tL1FlBupJHC+WhwWP19AMnqK6y+\/smOZkQeSzg5VTt259CD1qZ15JGsKsktDPuLK+WHfeXqKIi+FiTpz97JPGR2FTSyanYwx3jWrJbWypmR2Cs4IzkLn1PvUVpPBZJKzJIY5WwshO4jgdc8\/SvPfEk2oxanPai4kEGFIWVic7R2ye1c2H56jcXt+H4dTqh8L5j1T+347sx3VsTvx82QPwwOaiW5yc15Ho+sPHK0Tg\/J+vuK7uz1K3uxmFskda+9y6pShBU1o\/zNYyudStwfWrST+tYCSmraS9q91M0N1ZvepfP3bQQDt6HHP51irLVqNx1NKSjL4kVGUl8LLtzJN5Zmtv9anI5IyAc44qql0r6taX0R+SeJ4m9iPmAPv1qZJc1zM9rdrr8AtJCsXNy0e0nJQfPj6j9aynOMff9DSMZS9w9Mjlq4k1ZloonKoDjuzHgAe5qykilW6gjOB6jPar+tQUuS+pX1eduY145avxSmsFJgvWrsMxY57V2XOYu6tqcWmaZPfTHCwxs5z7DNfFt3rc+qXUt1fuZHkLMcjpnp+VfUPjyzur7wrfx2pZm8onYOpAIJx+Ar4\/hs5zKyq+Ap3Zzgmvmc25pSjHoDRri8hdCvzZGNvPX1PXtUd5by3cSCLcJV25G4lTxjPTAyePwqKOFrKCSR1BZuVLfdyTgn6+3rWJJf3UTvBDINjfezk5P8v0r55R10MJR10Op\/tSBLJ9MhtvJlc7fPV97YBz+o64rOguoGulFy7MCCozyS+CQ2D1GetVYkIj2whF3YYndtyR2Hr1pLK4dpF3kI7k49sg5A9No61Cgkm0ZM0bqWCU+S3BHDuF2cHp7ZqpDFEgSL926nkMh5x\/tHOOannuA7RyzojgNw7jC7Rj5RgcnI\/wpbB7eFhNIMZyqqVGCBxuIxnqMZqktNRpNaMoTRrLPtZ0lWThcDhPUgYJ9s55NU5I7Z1NoWVGBbbJn8R6YH9a6N0jMHmJI8U7uQ0RIwcgAgDGVx161jywRQSPaW6rIxIXd15Jx796E7glbRla1vvIYxSTv5QXBIAc4YYPP4fzq9Bi5jDlmOXJ4GQRgY4\/U1rxaPHEmxRuXapbn7zHqOnAqOMwWyp5a\/Pkny0Ocjk7c8dv\/r05d7DS6szL20uHxJG\/lBzuOe23jaceuKS6PmGJYwD5ZGWQYzgY79u34V0kzpcwqg3Jv4OADkj+f4cVg2+lebOIfNJRupXgj8KmM9Pe6FQcb2L5jLgOiFto4OeATyQc4J5q2gWUtKkgaMDdg4OD+vOfzOKI7do4mjebI9F+98uM\/wCTVm30y7uInMcHkq48zPI5\/pR6Glk3YoR2CupiVvMkzuzgn8ByMYrRjN1prtGpJhK7ck+vP6d6voTp\/kxyxkMw++vI4okZ5zuCsUx0PO4j+VbqKeqep0xglqmPe0RYpLqYMF8rOSuSB6gVydzFHIV+xxssTjkSHcS3TOcDgnoO1em6T4kaybyLrb5LR7RE\/JIPv29Kn1vStN1yBJ9IdIwv3olwCG68D0qnFbmvs1y3TPH1tzbRB7iVcq4woHAP+HSrFpG8U8YcAvLlXOeCCOnpyOld1qmk26OhjgLM3JxjGRhWH59ao2dparH5jZLjAkz0BHb047Vx1KihuccnySMG1tAEnguCB5TAoeckEdCK1bVo1wEfIIzwOhrcSCNpftCL8w42k96zrqJGuVaKNYgAAwA7n1ohVcndG9PVppaWLS2VpLtLBGIbcxbjkj2rRe4iki2FUXacAjjpVFJIfNA7DkjPGD71p\/bNNIw+AO2RXTCXNqxpxb3MeWP7a4FuuSoO446475rHlt3jBeUkqflI9McV2KvGGH2dNoPccj8qr3NlJcSKISod+DnOD+VOdPRyQSgrXuc1BNdwwFIpCI3GGVjkH+lL9okMg8wDnjj0rTfTnDNF99l6nHY1i3EkbTMin7o\/\/Xis1FqPN3MHe1zUnlW7+4AoVcFc4zjvjpmsV55bdDGZFSJm3FfUjj+VOUSMnmQ4kXPY8j6g1TlaK4JSZWXacAkcHPpQkrWOac+sXqRzyNczC43bvl2nnoPb6U6BJHyzhsn+LsQOBVq00iFrxYXfaozkjscZH61sWos5LZ08oCUAbgeSR6j0qFXVPSxdOvL7RmWz5DRSruXJxxStlZViVhtbqN4DD+tPhi8iRtrZDHIB7VPcwRS+VMQFkQg5HPT+ddUp88LxOhyvHQfG0ijek5IPbg49uKr\/AGiS38wtyW6Y4BHrUF5LEsiy2sYAXJII6k9z9O1Zb3kUyeW8hVum1vU+nqK4GmutznlouVMpt5lzdCWXIAOR7VtwujW\/kyYY9c464rEklIDK3A65qV5NkEbocOcgjvjtXbRslr1LpWgtepavZ4I5YIwu5twxj37VQ86KyjkuJ1bG4KV68k46VVWVpLlJCpZ0YEE9Mj19qnvF1CZQzPGwBOUwcHPv60pStKyMJztJpDsaXqCBImAJyPofQjqKyxpsaoYrhsp0ODjBB6iqlygt5VnjUrJ6jkVPHLNKjs6l5M5ABwCD1HeiMFa9y4RTjd9S1YrBZKyuRKqcYYcnJ\/Q4pUjtzMZdPDLngrnn3qssSSDE3G3gEHlR6H1pVhlgbzoSJAO69R7022tGDbQ9J5IpmXbnJ\/Wpp7jeuyVEJPfHIrnLvVprS8PmRA5GevX3psmqNLiQxlFbp3oUNb9Dndz\/0\/gS2GYV6naCQMYA+meakijR2LS5LHrk5\/SqkMzbcfed8j1wBzk1BNK9snmnO5jgDoC3pXlta7ENM0ra9lOrmxWFWAG4uf4VAred1MTyu2BjAxwAe3SvNIr+889pUHzSkbtvXA7Z9K6xHnuESHcAmQcD8zzVOmlrYlxbKlxcXcJK+YWUnoOhP1NNiv55ZjcqQoUbRk7c9uCeKszWN1JHFlflJzkkAfr2pbLTbG5ja4vGLxjOUGfmODjJ7D6U00y1GxlyW9wZQV4EmSJDzx3wOeR3quLu0sgUgDSSyH5s9fYHr0rduL25uI2gtF8jYg2qq4Cj0A96ydL0p4LyyvbncxuZG4PUbSBk\/XNXGzWocqbsbtjew6hbG1vYvJkiGInY4J7hTj9DUGmy2d5ci6ZWVU4ZSP4hkYx3PSntbGfVbn5R5KO7M3YAf1z0rZ8MQLe2Mt5Mdsnm\/NkcttGMqPfnJ9ai1w5OZmutibwBrglUJPyjrgdjUuq6t5cUS2rK2DjaSRn8en6VDqeotDBFb2kQJY8qG+6vfLdST61U8lcrIYwS3Oxh93NcNR8rTexhKPK9C\/bQnUbGWQZTyAZFXPDN3+uASakuFt4Z2nJJDOT0\/vf3QKwriZ7G7SYzYg+YNEoOQDwR78V1NvLbtK6+ahjRRkgjIBA5\/HtUuLaujSLtFaGe9mbpCnlKytk\/OWP1\/L2qg+nBbeSAdHwhOTsU9BtHcg0\/Tn1CbVZlWUSRwMY17hd2cDjGSeM11NyohSJLoRiTK+XxyW4yPXHrW9pJcppGm3DTqcRDodzBIYrWJnMOCSOBk525Pv1ratbd7mydtQVFCnBVW4O0ZPPpzity51JZ7fe6LG6sUYHjcB2OOPp3rKl1EBBDFGNmwZUjgDqM\/UY4ppP7RPsrX5gg8m4CRWr+XtAPynIA6dxTodDZL+a4knDQt8oThie\/LcfpVOymW5Tz1jAy2QSMcL3\/AMPxratdQghiMgYMIy5P+ztUdfxNZSuhU7XNK30i5t5knhiWNVB+UEHaMY6cnvx60tzeeRCssQSTZxtZsc\/Tv+FczZ6vfatqEFlbyeQruTK5+X5V52g8\/M2PTjNexWVxpodbTyYljRf3fyhmyOcknkk965ZycJJNXbFTpRlu7Hg+utBfmO6uyqOjAFVBOckYxjvn1rDsPDEMTyXHngFnO0MCcDr0GB+teseKfDyajqUktl5Vr8zMOyu2AewJ6n2rzu8fUrTUm0lIkLW5AdzkByRnIzjAOeK74VEvdRMouD5S9aK0IkE7psQZVVXAx755JIrImmuNVuC8cTkk7c9yB\/KursLGX5WvTmRucAfdJHr7VbjkSzmJ3rHHFnCgA+Zu7k+3p61i3r5nN1Ofh0mb\/UyF3SJdo64HJyMnsK6Wwtbi2eOOFjCuAD2DEk5x+FOguZrkZt9qQORyeWYDr7dasWo1J9SQWcLmA8tJIwC9PQ84\/D6VhNvdsE+pdh0uC1lN1IWuGJAYSEnK+3OPrWtcXS7BPPH5ighFUjOdxxyOvzE1Hb3FrYRXEjSs80Cj58blUOcY68n0yKpLqUcNyl0tyLhYSJBHtIBPofTHWuRvmdrFKN7ak07TG9Zygi8pwgUHJ4IOQBkV2v8Aa4+1Ot0+IQikRAYJ9emcc9a8zu\/FkKqGuJQGlOFXO3k9fSo9U8b2CpHbWtu29kUTSZALHGPl9OlL2Up20LsknY9vjb7X5cdtdrEjD5wE3EZ7DkDvWDcaL4Uj1ONtfkn+1DgukpA3Y9CpHIOa8o0zVdQt5XlgkMKuoI3kE4Oe54z\/ACrt4vGUdyodmjaVF2lioJIA+lYVMNODvCWnloaQqJLUXWPCFtBC+o2lyJLWMcqR8yjOB04NZukWl9fRzOp8u0gjZie25Rnj3qzp\/wAQo7y6tNDvYzN5r+UAgyUL468cjOO\/vVjxB4kdbS6srO38uBjsklJw2M5wij+tdEJVNIzI5Yq0kY2mvNp1xFqckhb7PvG491PIHHXOSPxqe31W4nu\/N8tWXGWLdlPUj3HpVDR1e9jW0llMSNK3O3P8OQO2eB+dVNVt9TtbpLVfnWKPAdgdmCSxbI61u4xbaZlLoat34qitdTMLnbbyLgI\/U7epUCq+rQyeJJHuWZUUECNuhyBzn6etc\/cWOqXc1rcW1s0iI+0vGCeWHPHXHHWujtZfJIhZt23cG9FI7H371UYQhBOmdPP+7SRz13p0MFiq+aBdunzITgkfX2rC0fWJtP1SNDvkDj5lAyST6D2r1KLR4NRt5ru8bCRRsY8dQR1IJ6DtUdh\/ZLg+VD5RJB8wYOTk9OP8KuniOR37DVflNyJi4yK0NjNALgA4Hyn6j\/61YskgE2xusY529\/f2rZaHUf7K+0tJmDeuIyeo9R9K92nmycveslokdlCopt82wwTcE+lXI5eM1kQwS3CzXaErHAuW7qfQfjip0mPlKyjrjj617FHFQquUYvbc6Zx5LeZsQSsWYN60Qotv4istZuJfJjgbyty5JxMrIePqwxUEQcKztgL0BJApEuGa7t0dQYhNGWbOcBWBH6iuevi6ME6c2T9YhCSvubWlagt9Yw3eVXzI0YrjqSoyCK0rTULmS2X7WAkyMUOFwGXrz74PNcZo10JL9dFtwNzyyKCc5CbiBgAeufpius1JorOW4SxImaEKzIMgqzYHzZ6ZPOenPFRGrCVVRej6\/wCR6DclG6WhdmcNEc5weODirsFynmyQJ1XBA9iP\/rVivM6RA8ZyoPpzVaKZotS+Y7hIpXIHI2njP517MppM4EtNTr7aa5WRRMVZWzwB0\/xr5m+LGmL4d1+O6s0CW9+C4UDhXU\/Pj9D+Ne8tcSpCxhbLK4Ye61yXxM0uPxB4akMkeZ7VxNDzj2ZePUVyYiKqU2uqIk77Hz3py3GozmMkEPjHuQcfTOauXuhTwtJdlfuSbXHQDA9PQ1HpVtPDHHJGVeMDdJg7QOcjHUmhri6eHy7qZmln\/hj6YJ+U\/pXyUovmtfQztfRmppmmWpiMl00e0kbSDlgDnd9DiuvtNP0aFFwAxbld3Izjr09KxbSzQSmK6PmOwRht4wB29DXU2tt5Ss\/CBiCF6cj07VpCdraHVS0snEwtSRZYvJCrtPRSQPu+lcleTbJvNaEsY1HAJwxzwMj\/AArrtbieL53IfCk8DBXPbIqjEY57KMuPKOQPlH15\/KonJN8yMKtpTckzmSzPCbpbba67jsfnazfxZx37VXNtc\/bDcXMflnA3BWwuB747+tbd8sU+1LZmZRnk9MD+tZFqt5JI0jOVTjljnHPp3GKi3M79DFRUnc0YnMMKwMWZpeFjXr06c+361LYSCJ1lWN44kVlHZiWBUj64PWp7PRbi+nka6KmSNMBmIUY9c9BmtWDSp0uBa37mMMAwzyCTyBnPBP8AOsZxtHmkV8K5mJpekhXWJoGk3BgUJIADAgZ9vX8KoXti9ifJaMKIixQKeh5I5HrXXWlxJaM0QdpWXcBvHTHJ5xzWtFOkpXzS0kOFJPc57jriope9q3oFJc270PKGknl34hkdRjzHIzhu54H6V1ml3wHlwvKuzI3DHzDPf8q9GeO0zHLpe5eDv3KCCD1HFcBq2n2ltMbm0lAEpyyDOVGOR710VqSUeeLOirT9mudO5bdVkIe3Pyd93TOODiqu5g3zgE5KnpjI70lqYmTBHyr0IP6GllnRFdxGmF5OePm9a5uTTmpmDjpzRNCLR7W7BlnOHj79O3SoYoYrKcRxsTE\/39vHArKg1CH5lBZsnJXpmrz6hEsYKHcO6pkk57dO1bxd1bqXGV1qb0yxykG2YsgzgsOgOO\/Xk1mXEMsJG5RIDnOP4hj+dU7LUwrbI+Vb5gfStb7X9rcJHyy44BxRGjCpq9y+SE99zl53JlCj5WUg\/kOPz6UkN7Ksr20+JI2wPfnpgn0zXUXFvaR7pmGCR+P+RXM3UumuN8bMSmcEdAfp9ar2Tp7EKLo7MhntZInMkJzDnhh0PfmroFre2MP2csHyVfI4Vhjp7c0uhrFeXcdk2wfaZdrNISIxuHy5wDj0HFdTqdtJpp8tjGF2EmMEEfLycH6A4qeaHOqblaVr28jop0XODqbIwI5DbDy3cB8Dgf4Uq3krRCeYYZZNuR3X6U2SKy1dS1sN8kQJCqeT3wCfX3rAa4ZbUEybVEhEgP3lOMgA+\/fNNKUJWk7o5VzQdpO6N28hkaE31qNxyMjcQeP0rjJ5YxI5njZc5yW6j8uta0Uu6B\/InZw3UA9M\/wCFVUdjujkw6Z4DDJB\/WnKSaXKc9SpGy5SvFJCwDoD8oAyh6gdipp7SQsweJvmyCR0OPoaoSQkNutxwcHA4q+1wRF5pCM0eNynn86V76HLH3noWG3R3jSZIWT5ge3FZ4O67d2lKHdxt5PHtWkJY7q287KKBnCg\/yrGmaPcCBhsHnp1\/nWsYK95I6vZqL941LhWjgM7MGwceh\/EVUimOG4wpJ468+1U3mJtzGUOOu4dh71ApADhWwdoIyeOa3j7ui2NYytZm0TE6fMeg9e1YlwsUj+ZHyU9KrtMV2gMCzrk4PTPSoIrpEcxMxJbr7Ucqetir82tiO4e8LDy3zHjGxulSPcxNIRjKoBx1\/I1G7KJME9ifY1WiJKMCO\/HsKppWJk9LlKTV3TKRRktk\/MTgYrTtnupITPcNhGI2KOMj1Pfmsp9kbeZKoIHQAZzWzFP9rsBc4C\/PtAznAB9Kxklc5nrK5DqF4vkAeVnB4PfNQxZMAML\/ADAcipLiO3upWRWKyDnd\/DVRPMsFZ5xt24I9Dk4oUbJNGsU1G4+3csrKflO7dknn6VMs+2UJMpU+q8EU+V4jIGjIJcElfXFSrHHcxblX5h3HpV1E9kE7mTf6e19LuMv+rJ6jBx9e4qwtpH5QjQdOuOao6mZlEYB2s3GOnSsy2upYmDRkkg+v86XI5RvczR\/\/1Pz50trc2u1WIkZsvn+lVnuJboGLaFQH1yTjvWUPlbIq\/bBncHjOc4I9KxcbanRyJu5q2dlEPnkxgnmtPJ2ia3ZQU4JJGF5x0xWfJMVdSw+UsAwXjNIiFVZkOFc52jqPQ\/gKwavqJR6ltkkl80yTKzq2WkJz167fYdKpotzGVLkmDIB29DmnCCM5RXxhSdwGcn069vWpY0jlZFlYAqQM9QBnr+VZ2MHe9yT7J8kkigqu7APrzwDV83AaOIxhttuxyT6EdTn3FRzgBWj3bomb93ngcdWx1HArLuHLl0BK8YCnoR71KV9xtWsaUN3E9s0f3piclccMo6fXHU06LVpbZGVSEydoZ+474HaoRbRwxi48zM7jdtGPlTr279hT4F83EsgUx53Hd169KexkpO+hLbNBaXjXtxyu4OO+7PRfzrS1q+Zl8uwb984V+OflJ\/8ArVmRW4vIhBwQHJDNx6+nbPSjTtNltLmT7UokyCAy52jH3Rk1Lgm7spw7mNeR6iYgLklt5BXqT7n2HrXaxqllpazwIBNIFSMn7vygfMc\/3cfniuWMrMn2mdmVV\/gPA64A\/wAa1lguteuLWC3kDKp2bQcHPU8jsSaGtAgm2orqdL4e0sW9qs8aNKrO2WIyGc9z0GK6DWtOE5gvQ67URWZlGctnDeuP4T6dap3F3Jp1rZ6PbR7o4WO\/H8Tkc\/X0Gasw3reXNZy7QCjlNuOWQbgR+AI\/GsZyk0lE9KvFQj7KLu1v6lSSG1uSW48sfNiQ9SOAfz\/Ssb7HeLeCS4VSiq2SD99mGSQPTtUsWrweZ5FwwBHTOM4NZ\/76bU2S0kM0RVjnOSNykY\/A1nFOOjZ5HM2yvPFcSxkQOS4YEqn3V4AwMdcfkKlawcRrYWce1GKkhcAkZycZ6kkc1JHAumBHvJj82MpGCxOOAueAPz\/CtPS1eV2uUxIYQep45HFVN\/cXJ2Vo9ShZyLDcrarH5hLbBjnGTgEY6kntXa6PKVleTUD5cUaMN6AFt2cDPv169Kp2+m2+n2iNNGodjnO75snjC98Corq5hS3ezYCABMqE4I2knHuT71zyUZS5uppSceb3jZtjaq32+8c+Vk7cEktj245OK5y5tP7R1GTVIrMRNMd+0tuIGMc5J5xWVBq9tDFiZjsjJwcEscnJzjNXofEEV24htFkJIwDt4H4HGazUWtYo56jXwxEmvjZ5iuAVaPDbeMnPAx25rJvpRcmOW2hEo3BXjxlvm4JH0rOuLXVZVmt0uh52fl+XJz1OS36Yro9A0J9Oh3XEhaRuXJOef89a63BJJs5rpGppxSAKqFYxFkkD5gD6VK980QljVjulOB6jtkfSn4fy2TT4l2tk7z0J9u5\/lWRFZ3NuTJdZyxxkjHT\/ABrB0+Z3E3oX7G5mt7B4dm5piQyjGwrnOTnnnvWS+h3ssj\/ZDHbpJ98LyTk8nOOw6Vq2zqxZs5GcZ\/nWzaY8vKNluw\/kPpVqkok87PL\/ABZpGnveJa2+Q8aDec55\/wD1YqnDZiIIjB5mwFVc9AO+TXoiaZplvue7K3E8zEsWOTk88DsBVi\/t9EtE\/tCaCRwPlRUDMM9uBwB65pSq8qUUjSLb0ObstOvNTHl6dFJOyDB2qSOPStK+8N6toX2XU7yF40flHOCpPow6A+x5rUt\/Ho02zjAhZCpI8uPCrgd+1dZB4vsdYsBEZFk8wZaNsEgjBwQf881yTrVo6uOhVuollZSyTR6nemOCRAkmNoGBwwyewOKoNd6cVmUt5whbO7BXLHsCev4CqupQ6heeII0GWtVI2oOhOOc+uM8ZrJsvBWrrdi3uDgRDfw6nce5POee3tXLFwt70vkX0uegWT2cUAbyVCyjdvI5OeevbHTikkgjuTGjndBGSx56ew9jUOoW6z2EUdyWhKnGY22tkE4ORkfXH5UJsKt5TliOWA6npkAUR0XMjKaSe5IdSN2DbaeCluuFLIML6cf49TWStgkSzQiMKx54GNzDpzVm9vorC2FpbEB84Rff\/AAA6msC2bUrSxkt2uzMWJIzyAxO7dnuaum91cI2abk7HXpJH5cdtgBfLCFRjgDkj8SSKwrNUWcwiPaEJ5b7p59DU9m4lVCpLNNywHVTjB\/I8j61qWFgqW7XM7bpEcgqOi4Hc9+oqY2XULWdmT6dKks3kEbAo3MepI4A5\/GtOe9u3RbcsN7v5antjkCsqNY7J5N\/BdSPr83H6fyqvJI93M5SYBfl2Y555yfyrGrHmXmaU9PfeiO+8MNY6NazS3UwlnnK+cSoKxiPoqLz3yf5Vzl\/LHqdzNqkuYYZZMIpGG2jgfkBXDX1re297HdtK80IYBFB+UMfVR\/OpJG1a3to3FrNPDb8NHGvyoo746kL6CuihKdKUqlN+9LR3PQqYn2i5Ymvq1zBY3SQWTMNy7m3NuOG+72Hbn8aitruE4mlbY4PAH8R7DHQg1kXepG7uVspJI40yS8kigY446jrWvbwmSNjp1zFeO6iMOgHyyKOh\/PNdVKcYe7LX1OehCHO3cml15dOvFv4UjimjDyK2NzAS5PBORznHSujhupbmyXxDd27METLORlQZACoftz6YrjrzR762WG6aJpoSdpKDhcEnn2+ld3B4k0qWGTRr+XbbFCJbVMljgbgxOM7mPQjgdK3nXjWmmpep9FRxMqidPmSS\/Ht8hNXEsEUMiFTFdRedEVYHAPUEDoV96xZr1FuoZHkwCwGTw3HUU24uJ57Oys\/swikSB8FOWK9tw7EqOf8ACsG5vWnIdwGOdo+X0HX0H+TXpvMVBcjV2cWKn7J8qOre7QzSLCSu0gdenfFU7jWLvKucPHkkDk54xj6Zrj4bs253qxZCAxGeeOxqCTUJDIF5ZSMADPtUzxzafLozz3UKX9nbkfYoRskgDou456VZs9ESNFklCvLLgMSDgEZIxjp61bluRGqtx8uNwIyQf8Ks2usWHnCJI8Fc4IPGeleW5yloaKV9LmfaWX9nyMCWkJYkMBnjoB+XaukZraW1Ah3bskHeOeD1IB4rGOqR4aPcdoIAA6HIIzxyaQpLbFwqbcbRuP8AEPUfh1rGUpzSTew3N2SbJYZFDjzQCucMCAenfniqs9tBM6om0AkNuAH3ehpEctLtxu53Y65\/yasSw2sTbSSykEADr6\/h6VpOW76kyftLmNNpygOIXVcAsAexHXj05osdGkiTdeE7XUAr6fQ1qhxHI23hSBjOc9jjJqtc3wjby5jkZAIBB25GR09an2klaKBTtH0IzKIZGaEAuoxtP8Q\/lzUn2mSZfNEe5zIqFT1BPSrzW11JCLt4HEYUHzGXAwxyME8Y9KdZJLBIZU8uWMFH+YdlbnB9R1qm7pJnFPV6kEs8ZuJYiNrBuSDghl4wfrVQPJFb+YvmFQQSvKnHfbWpeiwutSnvUTdNLKWIUnv7U1r2Nh9knj8th8oB9hwefWpcFq0Xyy1kmRWmoSwXAe3LbHXIJ6\/Nwau3NoLiJZNQ+RskxLHgkjJyTzwM9sVmJMjL9mjIk8vlj0xn0qnqlxM0QmTO5APy55\/Wrb9xJM05\/dUDQmsY4rZkt2G5SGOe+P8A61VgttOk0c24ptGeOp\/HpWTcTzJFExcMjhX3D+EkZwffPariborPzGbcSB15yvX8qqndXizpw8naVKa8x0KWVshilyGkOAT1z2ANI8L+eZrY4RxyfuncDzj6daoGaSK3urmMiQJKrLkDKg55AP5VSXxMk0QLcsmQynhh7jsR611xaWyMHVtpFGo9zZRt9nSInaM7SMN9Q3H1q5\/a0kFr9u01A2zMcquMsQe\/6VQuVW8tXkilKyQEEY6g9fyqtYaitxvjl+TfldrYy2D1HelKXNuOWInfXTsadr4h86ORrhPOixlux9KwZ2WKdbi2ceU7D5SOV9j9RyKheMaddruUspfIwflYA5pb4iUCZVLo7kSEc4zyD+H9Kam3pIj2zkkpmju3uzwNtJBGB6jpWpaGZHF9uGI1Bw3zA49QM9a40XV9pciygLIhABYqGXjr6\/UVqy39rIssi\/uMqrfKDtYH+WD\/ACoavuOLs7Sew3W5f7B12SO3DGIsMbDzskAIx9AabrDRSwuzJmQsu8g8OMZVh7lR296lkjt9ZicA7riFd6Y5LRjqAOvHX6Zq\/b6ek2mPBfOFntYyD3fyicqcDujfpSuCvdqOxw9hfiK4IUfI4xt6n2roRcK7FHXaTz1\/UVjRWa2kk1z5bTyRNtYgBV46sMn8\/wBKkbUnkhcwwgumSuf4gOuPp1p9dDNpr3bGm+8IHyCBkYP+NZM0pT5u7DaQaSC7FzC5Zl3dMAgjI7gVlpKGmaNnLe307jNVyIiy3NO1vbqBAkTgRtk7dufr71V1K7up4orkDLAlTtHHt+FW0WV7JksuQTkuACQDwcZ6UyazxCbdrgM+0EbuOV+ntVJHRK\/La5iyXl\/gjkLxtwOK1xcDaYph85QMSPX0rLt7d0ut7sQIvmYZ44qJp2kgedzncp5\/HpTXYzi2h00qBTIvJBx+VUEukEm9gc\/40xZt0BkjO47qpm4QhRtxjr6ZrS5cn1RqSzl0IH3k\/UURy5iyjZNURLHsyflZWwfcH1qyfJtFUyZMbdx09uaiVxXuUmu358xiRnBqxbybUYxybh1x6n3rMndJZH8kYQnvSw+VaN5smTtAzj36VrZWBt3ubk11aQxrF92V8Fu5\/H0pz3EcaAysr849evqKpR2NjIGkNyXEnJyOhPrULW7RYiVlYHHJGelUoWNYq25dMMzwtMcLhsqATnn3qKTVZ7RCYs9Rlf51bWXaBAXw4+8hPf6VWvV2hfLBA9e1Nx1FLsQajd\/bvKkjJXam7kc5z\/OqkkihHRcAuN1WrjKLmM5JGAPX1qqNP3KrGTDgHge5zSstjNs\/\/9X83hjOfSpre7a2lEpUOADgH1PeoQuRRj1pWudlxULPIWckljkkmtlXeIhHbjjHHFZKRlslevqOw9aBKGbJPyr0yeSaiUbh0NZ7ohQ\/ygNkVJE6uwK8DqKxfNaXCH7vp6VoWKLNKsKEqrcEjsO5\/E1LgrE8qZ0S3aRqoWJZG7A9sj1qhLbkRmPcnTe\/Oce2aijk3RqAPu7unBP\/AOqq07FowsZwfyHrWNrGVTsPtJxCfNYCbGQOeOB6cdKvW8v2oqZX3EHGATgZ\/maq20bEK6JuJ5JH3uB+ePwrRtry2N0XWJQxHAAxjuc+9S0Ry9SWC\/t4CY5OnTIHA9jilsLy61WcrZwM0ShlC9Dkn72e1RkmbzPscSxxggKc4BPck9hj161pNqsXh2yFtYoJp518wSkYUlzwBjk4\/nWUr291akez6nb2wtdWt20y6hRRHhGDbWKkgc59SO9c9ptpdWN224m2USMkQwFdxnHyr159elY1p9muLWIXMjiaVvMlYjG5s8k45I9AO1aG9oNQmaYMfuqhQ5XHQMPXcDkVhGnyNts6XFQ1T1L97dzyzfZoR5UPQMOWPqSfWprhhZRIwAByF9ccE547dR+NRhTJMNgHBxliAwGOuME1WuYLU3gsZrpluZBujBAwwZsZB9sHjr0qpTjLS5hZq9nuY1p58Lm+1S2WTzGKoVBBAUc+xHIFb9qsKTiS2BQYZtp6cjn+fQ1n6vJJax2NnaR\/KY\/3hLnK73J3E4PJAFbNrKumI94qm5dATHExB3E9yf6Vi+Z6pXM5RSe5yviO4Z2tIhnJztUdyxHT36V2OmGx0Kz2SyqbiXmRnYDn0HoBWfql2lxHbanfFYhIflDYGxu6\/gentXn7zNdXkt1CQQzkgsM8Z465rRRc1aWhk9ND0C58U6bBc7mZpmPRwMqPp2FZGoeKLPUIfKjVmcjKsRjaM4+uCKq2JDX0CTqjI33gVHUdOg79K6iLSLWCRruaNGJz2HAzkAU\/ZxXQyukU\/D6Bo3Z0KNkrsPcEf1rebVbGAGN5EQrwOgIPcVBFLbWzDyzlS\/QnkEjiuV1KxgvtQuMLkr83HfIBIrOVKN7snmvudm8kJdblgDkZVu4B5pSyXZWJpNqKclTxuPYHvj1HeuOg1ywVkR7hFCr0bj25z0qHUZri3ull026JgmAbaCGUHJyBnNVy2SSFy66nV3OvXNncfZpItoC5VsjG32rOvfE8rq9sibmYcE85z2C+tYUq3GsPBa3siIylmVj8pwcdh1rsNN8I6fAyyvclpP7yqM\/mc1HPBLXcOVGNFLNFphigRg+35uRuHHOPeqNl4gu4oyt1FvXdtAGVwPTnOcCu2fRhb744bpmGwj94g78dRg1yU\/h3WHNxYwhS\/BSTIGc44GfUVm68WxJ9DYt5LW5liNshRj1zgCt1NZXSbtlk2i3bGXU9H6fjnvXOaddY2wyxqrLwzc549u1dFqOk6bqEKXNrMbe4jTYqptIb\/gJ4LV51SSlLllsVFG8bTSdWjZru3jnEi8N3wfQjp9a5iz8OafoeoXN7Ope0tIxNC7nkuwJPHT5QMfXBrzvTr7xTc66ml6TdNMdxGdihcDqSMcY713+pa3bLa\/2ZqMkd5OjBLhLcnJBYDoTwASM80nQqU\/3cZaPp5foaKNtD0DSYPstrBcF2a4ZVMjMcjO3kD05qxqGt2enhrqcuVP3mRflAA\/ib9K4i98aS2zPb2duPMUlCXHyqBx0zzmsZfEGpsTK7oEI5UIuw+xFZvDuT5rCk7P3nqehyaxaahAiYTyWI2BuhJ9M4OcVnpbPZ6m01uCtvKBhTxhh3HXg1554ibzdDWZ8jyyh+XpycZx+NSeG7i8h0v7XLPm2DH5ZfugdOOcj8K39iqfvwMr8y1Owu1nudQN1EY2HKBNowR\/j1qKfS7K72ShWheMnhGIB9iAeaw\/8AhIo55ClttITI2qCM+m31x3rTN8Gby7YtM5GNsYJwe9Eoy9BSUlZs6y1JaxWQgLMdzHp8u4\/dB9BxinWuprFFJHfMpDE4xycHHJ7VSuBq6WAeK1JkyBt46+vXpzzWTbx6la6lbaZdRr5twplbGCiR88A8ZPH4VlGnoa8jk22dKniCKCUSeUJ1kyrB8cgZAGcHAPfHNcHe6r4ivb+aWxsRZKqcJs446nnuRz6e1bl\/FbWN3Faq7Mz8iMDLdcDp61poJ7Z\/NljJD8f7XPGOKG+S3cftJuPI9i9pt9Lb2CT6nIh34wFUAn0AHUn0x1rZfUdvz3UQijxuYMPm\/EVyWl6d5GqLrFwzOqxlbaN8Yj6AkD1x6802++2X90S2WBbaiDue351U4p7kO8WcjrKajNcvc28W4XUrhADkrxnJFdb4B0W4sXYXpWF3idkLMBtbIJyP90GsjVZjZiK0gmCzqOSv8BPU57nIrCtJLy+1OEXUudxAbcCfkA+bHpkZ5q5U\/aU3G9jWnvc9KvPEkGmSR6TExnhViWkHKoZCX4Hcc8e34Vpa3Zafr2gm7YD7TAiyRzJjdhccBh6foa8asZTBFNcyMzSTXPm4z1U9F\/DpV\/Ste\/0mW0hnkthKCuwgsjeuMDgk\/wD66xnhuVKVN6o0nJNXRraTqVzLINPX5YyfmYsfnbkEccgDpz3Fb15KVeOCCIBSC2AMYC8H8K5iGeGfV5LKyU\/aFkLPERgMByXRunTk1vSWN\/HKILacmME7y3LKCc7QffjFdd03fqZTqynfnEgtVvL2GCUNGsvDMegQHJ\/+t71rQaElxfStasYIQPkH3mYAZbHoOMVbZooLX7SihCE4DYDY75NWLSWETQThid0f3uQpB+bp7YAFYSquREZWVmcxc2FxNAj2imbfIDuHCYB5ycdu49aotprQ3zWDI0fzb12jh1JzxnPTvXZfaLp4w9lEXXoGYhV69s8nPsKoG11WW8+crliCcNn8Bjp6AVXO9m9C1UtcwDpSTMj2sxGGyVcYIyO3vUMk8trIlqIfMj3Aq3Xbgk4PfP14q87ziR\/MG3y328ckkVDFHMt+YZ2wZTkrkng8nHboK2cY7tiVSVx2YoW850zuj4Hpk57VZjn3jyY8FSDwOP8A9dUte0w3cAEEuFQ5jOdpPGMN7jHGKxtFbVbpGaSHAiYJvc7SSPYdT64rOE4zi5jm5Gwlx5DAuA5wVJPv0wTxmoDpk01pBdWkqO7FklBG1kwflDA9+w49KYsSsQHDMAzAlOVBX3qx59mzyzMMhF5U8kjsOO2fyrV6\/CbQa2kdbONWksxon2lWt1YOSRngZ4Hc4PFc7qVzBDE1nZybDtZVCjJ5BOSemSRWtDMt7JA0cnAg2qvIHyggbuc5yPzNZAs4LZ99zMoYSBAMZDZPTd0DAc4rG7v7z2N6sb6x1OZiM9vOZml25YZ2knI9+1Jca3PKsp24ZSUOcsDjOCcdv8auX9t5GRDnYw35fgEZxxRCsL2+6NOJeC7dPwA4H611R97SKM7Ti9DLgku\/tlvbg5jmPJx0XHGT7dKluZfM\/dSBvLCklh2I4K1PNFHYRAyP5sin5FToMdQT39KzpbuPzPNRcxSYyPRj\/jQ4yV2Za6ye51OmpoEdlFJfXxZ3OeE4U++eCfrV+5g024WRrOQhSwHJAAbHpgde+DXASz75dqkAYBAPGaR7qS38tUXKP\/6GOufrXZSkmrNHXTxCa5XFG0ztazuLgloHUIecblHYHtisq9geCXy2UKrqCCMchhn8sda0oL83Ubx3y7HUK2MZAHOB+PcVn3VhfTQojTjcHLIqjGVPUAenNS49jOUE9U\/Qyibi31GK5hfiVtrRE+g\/lxUslsxuXdFAGVeNv9k9vqDVyPTbz927RgsmOc9wPmpVYWcjQ5Dq5LJjtnt+FO6btIc430ktNzWe0nvZoYZsRiXlGPAHZs\/zpZ7IWQmtgwdAuJiD94HuPSpl1h5rFLWYbGXgNj7oJ\/l61btrG1tS0urT4VkKI6t8vznge+D0z60VNFoaeyil7upkRRWa6bHp0jgEsdl0vzKw52q47cH8KmbTfJ0qSKWD95G2QwOQR3X3yORWl\/wj8KwqlteRSxzkg5Plnbn0PG5TTLPT9UtVktbhvOiTHQjcjDoV5OQfTpWLemg1B7NGRcTW9qLdrMLHNajzEbuWOPl46A+9Zhnns76LUoFxBdfK\/OQu7h0PrjqD9KTWrA6beM24mKYBw3Qc9vqtUbMTzZ02aTP2hMws3C7xkqT\/AJ6Zre1\/eRlJczsR3ktxbkAbhJC5hkx0Ozpn1yP5VVFwGh+2WqfMMEqegPQ49iMir2pW876xJFcHDyRozITz5hVW4A9Gz+GamFra2FylveJJ5rpnYuDtB6hvp+dCt0IUHsjlbnNlI8cIPlTANGR2BHAP0PFQWi\/bI2YZWR8KCe\/fHtXRtbaZqMSwwtIqglt7YJUg8gj9avLos9tIrh1kj3Bs4wcd\/Y1o5JLXcylaLsYN9I1o628fEgj5B6Emqy3Q+0W6HIDfK+eoB4H607VbpZr2QyRZCtgN9PXjiq09u9xi5tiQ67cjv7Gmth83Q13jjTTpmD\/vHcEN1Yp6gd8e1Y97aPaacz7wyvnBXvyOcfzq9bCK8ny+Qqbogp4+deQc9icn8qbcTwS6VLajY8oOAR6888d+KcVrZG9rq5yyP5ZSE5xIrHI7ZqB7lQCpGccbu\/FLcRFpkjfKhEXpxzjNSeTCykFc55681rZdTC\/Qr\/aGLezYq8bkw4WLlHGCp5H41ksI1cbW+UdscjFSyERkg5IHKke\/enYNzRjWEP5ifKO6HkZ78+lQO8UoYOxQsc5qOOQTkY78CnNAGVlYfNV8qvdFJ9xbWwL3ALsSuM49f8a0GurORniLspUE424Ix3FYNu17aThSMpnjPT\/61db\/AGfaXyC+KfvlHI9R71T0OiKTWm5yhkto5jNvMxZs9wwPqK3Yr2G6tzGsuHH8JGDkfofwqdlt1G3ylX8BUOIWyroCD7VHNcw579CrLbTpItyxIOOB\/WkM2RuPU1djjK7RGdyE4wecf4VjsN7H2PIFJ6u45Lqf\/9b83geuOTSFuwpuSKF60zrHqsjAqp4brUW3a4ORtzirL+UjYR9wxyQOPpzVRmUr\/tfoBUoGidmSRgFBXJx7CtASrDtNuMA5OT3\/APrZqhCgBG07vX6ntV2Q4bO3G3C\/\/rpeQ1pqaNuzyodz4zhASOnHFNliV5cxsWxgcfdxjFUY5CM5YhQOnrmrCXCpEY0BB7D1J\/zxWMovoTKN9SWSQ79qMwbIBK8Z\/wDrAVato55ZN0pH7wBG5+Y54zVFCYtpX5mf5Sev6VoGGdWEijDnHPBJ9hWbViGrFi2t5GnNoQ3G1lK\/dP8AiMcVvTQWWk2okYfaJlOUHVVznGKWRrfR4FVj5s4jwvy\/n\/OsS3la\/nC3oUqDlVTg8e3TH1rld5+hlZy0EijaW5afk+YgO7rgkZ49xzWrp+qrBdQWsi8wsoTPJ255B9vftUk4sXuYrSyRmmIwi+rDjnHQDua6e10+DTbfMYBu2H7yXuT6L6LWFWoor3luT8Luwna1iuGnUqNoO5h0I6\/ia4a2ubm\/8Qf2r9mZlBjVUHLLGuRk9g2ecVq67fLpAxIc3DoXij9B0LGuh022tbLRrRrgnzrlBcSDgsS\/IPHtjrWEJOEE0rt6IyUbLmsYmw298TMTuMCQ8fdIUDJ\/McVDePLZR+aDui6Ed1rW1CWK5JONvcBaxWm8xGtZTuXaTzySOnP513wbS1Wpzttu5RmsZtdsfJVjs+aRTg\/eUc49eDzWJBpcmnwJENzkkkMV2jB\/+vXbWc11MRFIwVBGQFUBQAQF6DHUDFaMAEcSQS4dQ2ADyP8AOK0vfYG+iOf0pJIXaSTDMAAqryT\/APqrpViOfMlfr264+tV9PtVhRpANm5j8xHJGew9MUXa26xsW3EbT8xPtWUnd6EN9CtrNpP8AY3n04j7RGN2CcggdcehxWBbXElkAxI8yQZPfHqfpnpVzT2mkkVixK4JIBPI6YNUwsc8t1PGPl81gPfbx+WaA20Ols7KGKHZbxxAEc7hyfqcGuU8Qya5p6rJLbQmF2AUxjIB7A4wfzxW95M8lkfs8hjkjXIx0OB0NZMUt7dRtBMxkR8cHofShR7jWmpx91PdyzfaHOH4Chf4fQA16BompeIf9XdWwZV4ErN5RP4c5\/AVdttGsbOI3EyB265POPp+NaZhgkt2lRcMAD1yPyrKpByVkkPn0K8uoal9ut4SYxFI4WTklgv4gDmukt1lFw0ZOWzwW\/pXGzzDad3OSNpHYVl2\/jCey0e4g1EMt\/EhSBiP9ZuOFP1Uc++K8+WGnLQq19jsbmy0fxHi4mTO4tskjOCSrFSCR1GRWJqPgKK8sUudLZvOiUAxOc7\/cH19Aa5vwn4lbTok025Qurv8AIR1BbjGD2J\/WvYo7uG1BExC9icjqeuaiSqUJ2i9BO6ehneAPD8uiWrXl+hju7ttu1hhkjU9D7sevtitvSPDOh6TPdSRQJPdSSNJ5jDdsV8kKAemAeveq914htmlSCGZZZ2QlQDkkDAJ+lT2d59gtJLhUed+rmNS7EnsAOa4akpubd\/iDW5HH4K8NxGS9u2njLHe4Eny8dScg1wmry6KJtulS4iXAMbtl35+8OlXNQ1y\/vpyl7G8EOSRGQQSM8bs9ayJNO0a7uRcFgJNynI4OR2\/xr06NNr3qjIctdSJJf+Eh32sW5LWMct\/fxwoHtnmrjaRaRWcNjLIzKHISPdjc79sdz\/KpNOa1tI3QEKG4JXqoU9jV2ws9KuLqPUbQySOCyhi5YKRwSB0\/KtLpbE7GD4YnWXUrm3tot0pXguOVVevA75xXoVnY6wIV8jMc2S+1F2BwOikn1+tWrDSbKwurjVtiRyS43Enb7889T7VsjUbYEW6Tb2JJHrjsR34rmqzu\/dR0e0urqJh2jeL9PlT7dMqw4BYMAzM2ORgdF962X1O1v5BdXMWJbeJogyn+E88\/So7\/AFSK0VJJUSYvuRSR3\/x6ZqNJbUqLuNBGekgQ4GT7HI\/Kud1ZXsypO\/vfgOsY5ri8bVI12LtESk9SFOSx+pOBVq9k1GxIuHx5e0Heo4AB7+9UV1dHuDGuFUBSO+cZAH4VZkvbO5udysYbpFK4LHYw6gEcgH0I\/Wo63MnZvQ5p9bN\/diGPasUpMaMvTf8A0zXUtcLYhLSzAkupc\/MeMbRgt7AfzrKvka7ieyjTbK5Dh1HIYY+Y+\/FdG8NvChuJICwQYZx1Pc5IPT2q6lrietmjzrWreDT7ZX8jzCpAacMTjd0XnqT3rK0e6Z9Uk2Id620+0dSSU2DHvlhXoLX+hXY8uAxSxty0UrAnjuD7fmKybO10Sz1ZdS05mdyjIVOSF3EYCk84GK0pyfwtamlOHvann8ZnuVeKJcSx9IywVv19K6yy0OQpGz3BdTyvGChPJQ9QcevFaDaRZtrVzqNxhlIyqgdC3U\/zqY6pptg62iAKzNjywSzt+HXNFVza03E00rNE2k2\/kXcizJ+\/iRgjEdmwDg+4qNnA1eIwMR5yqsyk8Hbk59jjitiS4UmGWYeU0aMg\/vlWHQj2NYMoiWU\/u3SRFTDdiR94H09vpWMea92ZONnodVeXdrHp4vSgMSj9\/I\/KqC2Mc8enFZaavp2pRySWjZiiYxRgsqAqB12joOwrzvxBeyvBFosUjMZpBI8e75eOhI6fSsgwLAPJhXIHU9zWqw6tdsq6StY9gt7m8efy5WOAAcJjj8agvba+ktZLm2uHCK21iBg4\/D7wzwRUHh\/Ure\/RtTYiNY8pKc5VWXHQ+hz\/AErk9R1O7SWdLeZzF5jbcMfuMTwB9KmnGXN6ErTcsTy7Va0Rtu5gxIPz8jknvWxZ6vcwaeERC1zbzJcQXBXsnDK2eoxzXATWrRXQeEkMoBDA85xWtazzXJg0ZJpCGl\/djkgM5Ctz15FdkkpbhCXK9D0G68T2GqSLJ\/ZEUMxkLtICWGT12gjCgnkelLFPbNLtUBcHdtB5GPX1+tYGoalBctJNDwOkWOPlDbCD9MVpeE7\/AE+0a7k1KNZUljEe1m2nk5yD1yMConRi1zJHS6sq00pv+vkZcunDTpd9juVCd8hYkhtxwevQ5INc9bTzyS\/abdQ8ZJDBQQfQ13LS219ZTSJjcj4Qg8kHpngdq5+OVIrYGzcJuyHxwTyQT7VNmnqRJdR8WrGF4YQQ6ooWM45AGOGPHHGK2bC8XymtCyFy4by2wdy\/xEe69e\/GfSuaubWIeU1nv\/enEhY\/dGeSPwrMlR1lE5cB45BFuBOTt6MPwq+VSOqlWtuXrudr0PGzvJHE+yNtvI2nDKT0Bz6+xziubS82A2MbyJ1DKR7n3rrrRbC4uZJp3ISUZlj6BmPRh\/XHT9Kh3W8TTG1YtICy73A3bB02nv8A4c1rfldkL4tUznoZI7eMpM2QDknOevselatmYbqGSWNcLcbIkHtjqB65ANOm8J5tftjSeasgDSoeOHHUHvj9Kp+VHoKx2MRaWJFVg44KnPUZ4\/CtUtG2YcjWpbvvDtq88kMEzAKhK7vXjjPp157VjQv55FjESZUzuz\/Dt4JP4iulE63U3mxMG6hh7Gsm1Cw3VxN5eHlKgue4X\/6\/WuWnKUU7id90K9zs3c\/MhUKSOx7Ht14oaQTcxnafuqw7ZHK59PSs29LTERJwhYhj7Yz1pYm+xKgGXTP8R\/lXZGV467myk2b1nPKkYgdNrR53knkkd\/pQpilb5gcnqV4\/\/XVhJra5slhYATElVJ7j0PriuYuEuY444oASQxJZc4GcfU9q0lFaHROXunQ3el3zyrNbr50LABsff\/EdhVSyubhVkhu1xHISvluOAw+v86xBr99bXiiRX5OFdc5Xbxz7HFbkl7BqyrHrKlucxXEXyt2+8M4P4U9FozNNJtMvXMqXkUcMiLlCNh5BB98HmqTJNbj7dIxQkbXA\/vAccj1FV9QtZYIfOLkqw+Rx0bH5YIplleNer5Jk25UADGfmBLZ\/EcYpOKUVylOfdahfarqAY2eFu4JcHypBkkEcbW6giu30m30hIrfUbiKMyW6mOKN5eATlxnuTyQO+BXB3N1bvA0VliSRAFLEYI7jGOcH1rGtrgFCsqtAsciysR825lBwMfp9KhQTVupcaii\/e3PSb24sntZtTVlt5y\/lmZckrk8EZ5Geme2PeuBmWW3tJ7yLbNIpLEk8bSQG6+v8AWr9heSXIaO5HmwurLIOhZScgg+o6iobvT5tN3CUpLbHbsdeeGBGSO3pVRdtGZznz6hA9q1vFPEF3zJvZUH3ee571oLcIsQBP7sjgdfriuIea7srltOuOE25DjjOenTsRVm2jkgt5ImXfGoLR4J5zyw555HOK2cFuYzprdM35ordoZliVZPPTBZhnjrx6EetZEFqiSNsYDcu3birdlrFtcKREhTHGD1qtcIs8mIgSWBPpzS5baGGuzB9Ie7iuBGwR2CuoPdk\/xBNYMdpPBbvNjADKrIwwQR2Psc9a1bLUJQcn5sHB57irYv4b6OW1b+E\/Mvc4rSMraFqTRjX0L7U8xRJ8pKgH8\/yrFXZIN6KyuvVO59x607VLy1hb7MgcGI9FOAD\/AIVnXcxR1uLchd53MoOQD2xWkU9mdGj6Ed0sckwaL+IfN6Aj1qINbhPsxfzDztYdB7Zq\/vt72PbdL5crdG7H61kXFs1m4R1O0dD25rRLoS422IxORkIPLZf89aslbqVQ6ZB65Hepo5rbhvlDY6nnNTJcw9j0pXa2ROvQgjW7O1yenYnFa1reyhyJVaPHcciq6TwudjHcD2\/+vVuzu7SJWSUNluFPUUr3epUdy291DFE6uobdyCP88Vky39qhUAMcmrHnxyWz\/MMbxweuKaumxTpkHJGSPoaZclzWEjvYvPQwseTjj1qg4kadpohgKDvQjk\/T1qWOBIZlULghh+dKbjdK0bfKyk0tjO9tD\/\/X\/NgDvmloHH4U0uc7VHNB1iSKy4B+uKgYMCR3\/lUz5yOc4GPrSc9gOaaJZYtiUZCh5BqV7lxIW65PIqqBhgGbb6kf561aiAik84DhBuBPc+uKl9y12EaZyRuUAn8KsQlpJAO7Hn2HfrUKyvJcedEm45zg89PWnRoWGEPXv\/OgEbNvLawKzZBJOA\/+Aqy00hJMLFj2xXMJLg+W\/Az0\/rXRQ3NnFb5Q7SCeP4jWE4g1cjkh82YidnUHHJGTz0\/Co3We3lHljYynO5eoA4\/I06O82SCVx5gHIGelabWxaZrlywiQqB2Ls3c9eMdqyasZOPU1vC8sK6ohk5\/duQxHQkHHUV1F5c\/ala3hlaLfwXAG4j0B7flXChmYiwWZk3ENlF5POcluPwroIxMsYiZ8kDhjyx+uOK4qlNOXNIxqaJKJBceFLSfNxG8zSouRk7ixGeCSM89Kw9EnuILee4u2YchU39wPTPp0Fdgs1zFEUVssynp6noSfasaSCOUpCBxGBknufU+vrVKbWhg7pWZXnvPKCL96e4G4L3wB+gFVLGeRknkmIaUsFX1Yc5A9h2qc6Le3F3JfJMsW5fLQH7wQrjPsealttL+zbIIsHZtG4nhVHX8T2qnJLYlx6ElhqEIvJVdctxsOCenBHFT32oMsbFAyuMhAwxlsf0qFIYtNDIHJZmzkdz\/hTppoZ9tvckgMwPHVSOc5pU9ImdtTcsWljtFmunLu2AoPr06fWuZ8WX8lpFBaFsPcthiOyA9B6Z6Vr3d5Hbwwi2HKPlS3PTPJ\/OvNNelu9WvEkILhx+7x1POM4HqRxWsI31Go63PUl8qwtJLjb8sa9PXA4H51x+n3My3KW90BHDIzyFyeC5AwPbvV66vrmYWlhLG0ZfBlyOh6DP481pGxguIWhlA5HXtTstyNjUdZY4v3LqjZAw3Q54x+I6VV0+1ms3CXDLJgkA4x8vOKx7O5kt79dP1FvNWT5Y2YZ2svTJ78d63iFU+SzbBnr6fSkK1jYm+a3P8AdIzn8arR3SQafPNJjbErZz9M4\/WuRuNfuIb6PS4YjMqAiVlyeuSAPTjBrWFsdWhNlIfJhZldwCA0gx93PQe9J6DcLasZZyjUbaJol+Q\/vCx7DsP1rC1e31C7ZI4oVMaEnJPOcf8A1668aLHbR+RZ3DRqB8qMMqPTmsffdRkxSHBBwazlPk3Q9L6HIQaZqsG65S3cled4XO3HcemK0vD2kS+ItUEmoSStawAtM+SeOygnuTXbWF8yweS+VkwRn1FNXxJpujWt1bRWZWO2XzHbIAkmfov1P6AVyOvKV4wWpSu9EaNzpNnKogggWCIrtVlJVtp5xkHNdZo0U9jpENrZD7gOdzZd27sSe5rzLwz4gvvEt5cXNyqwxwBRFGucDdnLEnknAx+NemafdZ+RhuwWXI6jng\/SvPnTnTk4TZLTXuyGXWstBcC21GaON+gWQjkH0yDxWLeQ6BdlooXjScqSDEDwfXGACM+mKyvH15bxXNmhYGRFcMRz0I4OO4OaxdNuri5wYoCwHG85UfgSOa2hQVlO4pK3QLeyUwu5+dhjeCf4h8pwPQkE1paG0qt9j04hTGgAbAI3c5P4mix0VmkEtxLtCk7gCTk5J9u9akIbT5JFtYg80p45AAxycn8a6JNtaEPXY6zS9LtbeMXF2ftF0qgtI5yFPXC9hz7VFfa\/9qWTzEdlhw4KgFiMHIA9vSkjneGJ7NpB5oQNIF7M3t1wOgrJubiLS7MXsgJAZRgHByemM1xtJysNaMzU8S2GrMbIDZGpEgd+DxwR7da6bT\/J1DSpEjkRkdNyuGzwOcjFeS37abc+ddxRmCVmLKqn5cnsPSnaBmHVbeO1YMqDBPbZ36+1aToRcbrob8ilax6rbQRrOuFJTABUdT15+orpIdL1O8tVv7ayymzY4IBY4zzkc8CuH1i\/Emj3D+H5c3MmxE2clQWCkc9CQeD+NeieCLHV9K8OlNQmaecuW3Zyckc4z1XAAPvXHUj7vPf5Fwo+77xh2Ed5eagLS2YBFRt7EHI5G1c98813c2liGVLeNycqCWyMg859hzViO809RJfouyQMnnqAFU7T17HPrXE6n420uDVRoM0sjXVwBwgJI3\/dyR3wcisLVKmi3R0ezhGNnuZumy6HrGpXdpd2axajZyMkgbbuO043KRkHBrRvLKKymWaPGwHA4AIJ9cVat9N0zTUXyYVeRT\/rGGZGY9SW65J5NYMEqay0sgYm3ErIhDEhigwxHsGyBz2qpTV+aOyOKdruUDjNY1CfR9YkdWZo3YNjHBVsZXPt7VraRaWdlJNrCAHecQs\/JIPJb29PXrW1BbLc2rWsiLMmPlV+QSemCen1rhbe4mnkS1ZWjghc5jbqBnOD710Krzx5bbCcrx5TuA2yP7VPktIMqMdQf8fSud1G7jw2+RlcjIVAST7ZHAP1NVtXTVtauEh0+5+zfxdPT19vatSTzLeL98QXC4Yjox9h2z6VVna5ha2pwGrG9t\/KvYV2RzOoDHG5d3BBz3\/Sunv7LaHji3N6gDt+FR3kkcyfZJ0DRSMAOdpGO\/8ASsrVtZfSJhGsW\/eoK7mJHp179u9bOTnyxitTf47W3EjuXmkt9Bs98azENOpG3ATLEEepGfwrZuEETGRRkn7q\/wCe1eef8JHq82oJNGVVwCoCKDweMdyePyr0LQpbb+y0e8JknZnLjqxbJGCe2Md63nFwSuKpCyRmyy3hZi2GfYSM9yK1bKZVvvtMeF8lJHHswQhf1IxWLq+pXdonmyRoxkbAihBOIxkEliOpJHQdqt6fEGW4IO5TbOyFuccAg+2Kiztd7CUbWbIYZQUjhXLZJLY7KW3f40l9c2zTYYhOwxyQP5D+dUtI1W21CLZGdr\/xRnv7qe\/061RvrG3s5BeKpki\/gU9A3+13xXQl0kEY62O30W5MED+eoeGU7UZWOTjv2PXAqPUpFeK4uoVWOIEkoDgkj0\/CuJ02TUGuJL2ecFcY25HQfdOOw44FdDdTeeJYOUhU4DL\/ABDHf2zS9mubQ6rW0exuXdtqUthai2C5UlmKnqCB0\/Wq8VlJNAZrs+SsZLe+Pcdqw7C8ktJlCSSvEgzsU+wxxnp+VOlvxf3U1pcyGKELxg85H949PwrdU4rREKF3YlhlnvLtLWzYSPCDswcYC\/MeuPrVu+e+W6imEQ3Nn5VIwGXrn69q5J5b20kaOKMrKi7mO3qvqCOv1zzSQeIb13zeFdg+YnHUN379OPwqeS8rvYunZfEeoprNk8CxwN5TgbXjznB9B6fSq3myypxyvqR2rGtNHtbh\/wC1LghY5DnBbguvUnPoc\/UYNT6jqSmE26SbxyDggnFRJX0Q5pa22K9uB9rMkBEnqRwcf4Vr3OmiWETwsAwyWHoDWLYSvaaRd3MYUJAu6MY6kkDnp3NZMXiy4n2uq7NuAV\/HmtKduVxexVKaS5ZbE93CXZVhkwB0JBBJ96imTdyXPy89D97t26Gqd9rKGVr91LxHCmMdRnAz9Kjg+0XWx7VXkCnIAHJ+v0rR01uEoK90zUvrszTFfK3RHbgDIIxxke4otppLicROginJxuB4cf3sE+3NNWwuHB8xwG5PlxfM36cCrGmqzyK7wSR7DkmUHOfX0qkuaVjSClKaT6m8dN021kN7qAG5FzuHGcDvVU6nMt\/bRPEgtIyNgKZLD0z0PHrVfU5xcXJBcDYMFM4yAcZz6UXE4tcecwRWAKhuQfoK0qRTTjE6JwV\/cWx0urQDcRdoEtJgA5VtyqxPyn29\/avPZ7KbRrtokZkMfKqTwVHIw3Sumttat72P+zWfyWcfKW5VvQHPQg1Fe4uLVFukCGHCluox0B7\/AC54PpXFBOK5ZHPV5W7xOb1VYI7lb2zJX7QoLgcAN3I7d88VOUW5tVkB2O4zuHIJUEciprGaxRzaX0QLL93fyo\/3afIlvGhW3JWPOQvUL7g9ceo7Vm6t2uU5WY9hdvHZtcTYIjfIePoRj\/ORWpFqJmUrHgxAblY\/7XVfp3rLNubOOaa3O5ZWBki6gDnLD65qY2JtG8y2z5Uoxt\/utjgEeh6VtdS2HvuX7yK2vYFllVY5YvlzjjA5H9fyrkYLi6t7vdzNhidvXd7iteKYbTHBIyBh8oPO0jkdc8ZrSsoLVG+0W7+aX9eq+oA7VspaWJvpqTNoel3CCUQbD7ZU+tV20ocKJWypBR\/4hjt6EVfF4I+OABTlvLebgsPr71fQzTZyU1jNaXks648liWAHY46VEkbmU3MB+YoT9T7\/AJV00kkJZ4EO7gn2PtXO2E6KAZeAu5c+x5qH3LV3qZeu2\/n\/AGe7SIMXXB9QRzjPX1rn0O4EsuGH97\/GvRZLe2nQxysdhyQBwetZK6HbCd2G4xMMY75+oreM7rUvmSODnWRvnyQ35Zq3b6hJF\/o9wBJGQPv\/AMvatnUPD90o2xsZVB6en4Z\/lWPDphV9s7MgGR05zWt1Y0Uk9Ikx0+GQi4hBEROSrdj6A1cSaGRCkaqFXg46VRWe6TfFbsSN3cZU+3pVyW7tvKxCrfIPmAHfuamSfQTRCzon+qjUe5HNVpJUjlDuMKQTgD0qGG8hlLLJ8hHTJ60l8kn2Vtv8RyP93vTS1sxFeO5VyQm0t1Ga1bCa5l4U4lT5lx+o\/EVzMJ2OH\/ugn8q3bK6aXE0fylTyBVyVtUUnbY6XaHAllX97VOfcp+ZcFu+OtSWplk3TyKcMeM+lOvHLgYyAOcGst2J66s\/\/0PhUfDrXTx51t\/30\/wD8RTP+Fb64CR59t1\/vP\/8AEV7WOtIev41Z0nin\/CudeB\/19tz\/ALT\/APxFOX4c66Vz51t14+Z\/\/iK9nbtTk+4P97+lJiPGH+G+tLHuE9uWPcs\/\/wARTT8Ote2jM9scerP\/APEV7ZJ9wUw\/dqUNs8fi+H2vDEYuLdVHXDNn\/wBAq8\/w21aQxgTW6rztAZ+vXrtr1ZPvGtIdYfq1SzSJ4M\/w81yXdIJrYc\/3n\/8AiKfH8O9cGQk1tkjkln7c\/wByvYk\/1Tf71SRdT9D\/ACp9CFueY2\/w61vLR+dbbSpdss\/PTj7lalz8P9d8vma1zI33dz7VOe3ydMV6nbf6xv8Arif5itC5+7F\/v1zSQpPoeb6d8PNWtrGQCW2LlS7tuc525wBleOKis\/B2s3EH2gNbIG4xvcn\/ANA9K9nh\/wCPSX\/ri\/8AI1jaV\/yDV\/3j\/IVyKKbbManY8xt\/BmtSXb25mgG1C2dzHuB\/cqwngPWgcJNbBFHPLliT77emK9ItP+QrL\/1yP\/oQrUTpJ+H8hWckjkkeQN4G1hyFEtuMsF+83cE\/3Paq\/wDwg+sR3UUSyW+HbDEs+emf7levL98f9dB\/6C1Vn\/5CEP8Av\/8AsprRRT3NOVaHkV98NdfEe6K6tyGLEFmfcM9vudPyrMsfhjrrzxh7qAsf9p+n\/fFfQN3\/AMe6fVqz7D\/j5h+n9K0itDO+h4RqPgfxDJKtuLi2zM3kq25xtXODxs6mvQT8K7jw5oj+U0E13tISRmYAFQWP8BOMDoBWzef8f9p\/13\/9mFeqeJf+QefpJ\/6LertokaxSa1Pluy8Ca60huJp7dnc5J3N1P\/AK1bnwJrSjCzQYPX5n\/wDiK9Gs\/uj61qXdZ9zmaPFW8B66Z4kae3OMt95\/cf3K2h4B1poDJNPbkkcYZuAPfZmvQm\/4+k\/3f8a3D\/x7D\/dNTboayS5Ezyu0+G+ovZNaPLAEnBEhVnBOeM529cVyDeGvEOiXQ0qdrWaO3OzzFZ1cgY2nGzHTrX0nZ\/cT\/Pc15j4l\/wCQ3cf7\/wDQVrTV9GKKu2mVLXwXrNzapPHNAN3Ys3b\/AIDUq\/D3Vr68hs2ltwXyQdzY4HOfkzzivTNI\/wCQZF+Namnf8hy1+j\/+gms5K6sxcq5rHk2peGtQFlsMdoGQFSy7gQc4+X5B+tc3B8P9Zl3+bLbH5juGWIPbkFPSvYdU\/wBRJ\/vH+Yptt1k\/3jXl1UrXKlqeGaP4F1jRPFZtY5Lc206iPYGfjd8ynlOzfpXqeneCtVj1CTdLAQSP4m\/+J96lm\/5G2D\/ej\/kK9Ks\/+P8Ab\/gP9K6MRFNxb7CqbpnytdeCNcvfElxqayWvmTzHAdnYKAcDjZjoBXo9n4G1iCRY5poJZWBIO5gq4\/ujbWjB\/wAhIf8AXY\/+hV6IP+P5P91\/5U6yWiIkzyO+8K6yok\/eW+B1wWByf+A1UsfBusXM7K8sCvz0Z8EAf7teoah9yb6im6T\/AMfh\/H+VQoqxSivZtnDnwVqNpHPeD7PJMIycl3Gcc4J2ZwSK8113w94rvIg0k9rkHcEDOEHb+5k19MXn\/Hncf9cm\/ka8u1L\/AFVa4anF3bQUopq7PLh4A11lRXntmYjcTufH4fJUn\/CDa5bzCa3lt4+MAB3+n9z0r10ffT\/rn\/Wo5u1atIL2eh51pXgPxIl7bJb3FsDJKgwWfBYcrn5Og6+9fUUXg3UrO1ih82EhIwMAtjOOcfL615\/pP\/ITsP8Ar4T+VfRNz9wf7tePjoqyO1aUreaPG9U8K3JujDiFFlTLbXbJx1ySvfFVdN+HmkJqS6pNZwyXrKSZ2lkLZxjp0ACjAwBivRdU\/wCP+P8A65v\/AFpbP\/XR\/wC6f5GvPldXsybu9zyD4h+BPEJ0KW68P3cFqBtEgkLs22Tj5GC8H1yPpXE6P4X1nQfA6TB7eR7VHUDcwBJkIznZ719J+Lv+RWuvpB\/6FXmF1\/yIlx9W\/wDRld9CKlRipL7RNWK92xQsPBmpqVbzYdpUNjc3cZx92uMu\/h5qd1vZ54gZCWLK7qck5zwte+2f+rj\/AOuS\/wAqwT92ocVzHBY8j0v4f6zYW5la4hmkfje7uWCZ4Gdvr1rM1Hw1riXNvFHJb5lkUbizcLkZx8nWvcY\/+PNPp\/WuP1L\/AJCFl\/10H8xXoRimlcaV3qeZah4H1ePU1ZpoSscJJXc3O5v93qNoqWXwhqT3i2MwtZIWPl7WLEZwP9j36jkV6fqv\/H8\/\/XuP\/QmqGX\/kMR\/9dv6LSUE0vQ3cVZPyPNoPhY9jdPe2TQoZEKBCzEIQeSCVzyK24PBeoW8TSKbcncVAy2PUn7vU5r01vuL\/ALzfzpD\/AMe5\/wCuh\/lWbSlK8jDfc43T\/BerfareG5lgKTbVIRmG0OMDHy9utI3gHUbu1uIHlhjYwyx70ZsjOFzyvNen23\/H9Y\/WGp4P+W\/+7J\/6EKcYrRlwWh8fT\/DHXNNvpLX7VbybCPn3MpOeQeE4P41qjwn4gKNBcyW0occHc4OPf5O1eua3\/wAhif8A4D\/6CKoN95f90V6Vr2bHujye0+HOrXDq3nW6MW2ZDP256ba6mLwd4hs7po4pbVhIvO4v2Hb5a7vTPvR\/9dT\/ACrYl\/4\/R\/un+VTZGkTwiXwn4gEUnlGzjJJOUZxyCBzhPeorvwHrf2UPFLbjzCC2WfPOc87PWvU5P9W\/4\/zFWZ\/+PKP8KtxWgNanJeGfBetR6XcW08lvLH5gjCszkBQoyFO3K8ntUepfCO\/s9Kg1a0ngy0jq6OzEZz2ITkfgPXivV9B\/48rj\/rv\/AEWui1j\/AJFOH\/ru38zXHd87XmPqeM2vgHVrzTbnS55YCrRhlO5+GUYz93uP5CuRX4S635fmi7tyVLAgs4ztJBOdnWvonS\/vy\/8AXM1UT\/j2f6yf+hGlTbWwX908h0X4e65LZzabNcW5DYUtljxkMONv4VlyfC27tHmKSQkqhfG9gMjHH3M4Oa930L\/XyfUfyFVL\/wD1lz\/1yf8AmlbQ+JocEm9T57HhS+huGRYLJgeCZGkY++RtAPtxWpdeFvEMtqEWa2TORtVmVRj2CV2En\/Hyfqa2pP8AUr+NdjijaWjdjzew8I61ZMGWS33LjJDvzn\/gFdGln4rtHCM9o64HBLHqcf3K6lerf8B\/nUt3\/rB9F\/nWLgpPUUZvuc\/\/AMIzJqOLi8s7QtjlkkdTjHslXYfAgvrdNpiaLnEU3zqvb5TsBH511dn\/AMe3\/Af6Vu6N\/wAeifVv51zVIJbGqdtUeNT\/AA6vNLmeIfZntpjvK73BBHOR8n9apXvhbWrK4kt0+yNbsPmUl\/mDYzkbTXtevffX\/db+Vc1rX\/Hy\/wDur\/SppRTlcU\/hPMR8PL648zy5IUEYzgsxwDjodmfwP51Sn+HuvWzDZcWxDdPmfP8A6BXtFn1uf90f0pmof8s6copM4pHi1r4J1r7YjSSW5A6gO\/8A8RXTnwZrVlKZYJbfcOuSxBGehGyutg\/4+R+P866S86tSkkmNaO6PH9d8L6gJJInt7Ji6KI2Vnj2FiSSQqcjgcVn2ngLUNR04oxtoZ1lDLLGz5JZTkHK9MgV6lr\/\/AB8p\/ux\/1qXRf+PY\/wDXRP5NXZHY6oycp2keBy+DPEDwtH5tuMHGfMfPX12U+08H6vbWpj3W5Jbd99+4\/wByvU26P\/vGq\/8AyzFaJI57LY89h8Ia00iDdbcnBO9+h\/4BV1\/h3qxQkTQD\/gT\/APxFegW\/+uj\/AN5a6Nv9WfrSaRm0eNXHgTXV09istszR\/d3M\/wD8RXJx+GfFEMrzCW1Kg42b3xj\/AL4619E3P\/HhL9K4JvuSfWrpxTNIpWOf03wdrN9CJDJboSORucjj\/gFPvfA+oRoUmaBxz\/E2ePT5K9L8Pf8AHsv0b+YqXVO\/1P8AKi2pKS5jwGP4faq7ny5LdVDfdLMQc8f3OtWZfhfqxk3Ce3U+qs\/\/AMRXqtr95vqv863JPvj6UPR6G03sfOd98Jta3B1uLbDHBG5+p7j5Ki\/4V9r+SqT2wVTsxvc8f98da+grz7i\/7wrBXq\/\/AF0rZarUSPEn+GWuKuRPbfMOPmf\/AOIqgnw48QwPvjuLYEf7b\/8AxFe\/yf6tP90\/zNZrdTWqHs9Dh9M+H+u\/YQzTW\/JOBvc4\/wDHKtn4d64U2tPbEE9Nz\/8AxFerab\/yD1+pq+33RXK92S9z\/9k=&quot;,&#xd;
      &quot;filename&quot; : &quot;6_0_1_1506415073&quot;,&#xd;
      &quot;extension&quot; : &quot;jpg&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_files</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract image url" enabled="true">
              <stringProp name="VAR">IMAGE_URL</stringProp>
              <stringProp name="JSONPATH">$.data.url</stringProp>
              <stringProp name="DEFAULT">NOT_MATCH</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get sections status - OK" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/inspections/${INSPECTION_ID}/results</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get inspection_id from API &quot;update assignment&quot; first; call get C.A.R before get HTML Template</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract result_id of Check-in part" enabled="true">
              <stringProp name="VAR">RESULT_ID_CHECK_IN</stringProp>
              <stringProp name="JSONPATH">$.data.[?(@.groupName==&apos;Check-in&apos;)].resultId</stringProp>
              <stringProp name="DEFAULT">NOT_FOUND</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract result_id of Documentation part" enabled="true">
              <stringProp name="VAR">RESULT_ID_DOCUMENTATION</stringProp>
              <stringProp name="JSONPATH">$.data.[?(@.groupName==&apos;Documentation&apos;)].resultId</stringProp>
              <stringProp name="DEFAULT">NOT_FOUND</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract result_id of Approved Samples part" enabled="true">
              <stringProp name="VAR">RESULT_ID_APPROVED_SAMPLES</stringProp>
              <stringProp name="JSONPATH">$.data.[?(@.groupName==&apos;Approved Samples&apos;)].resultId</stringProp>
              <stringProp name="DEFAULT">NOT_FOUND</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract result_id of Approved Standards part" enabled="true">
              <stringProp name="VAR">RESULT_ID_APPROVED_STANDARDS</stringProp>
              <stringProp name="JSONPATH">$.data.[?(@.groupName==&apos;Approved Standards&apos;)].resultId</stringProp>
              <stringProp name="DEFAULT">NOT_FOUND</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract result_id of Production Validation part" enabled="true">
              <stringProp name="VAR">RESULT_ID_PRODUCTION_VALIDATION</stringProp>
              <stringProp name="JSONPATH">$.data.[?(@.groupName==&apos;Production Validation&apos;)].resultId</stringProp>
              <stringProp name="DEFAULT">NOT_FOUND</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract result_id of RFID Check part" enabled="true">
              <stringProp name="VAR">RESULT_ID_RFID_CHECK</stringProp>
              <stringProp name="JSONPATH">$.data.[?(@.groupName==&apos;RFID Check&apos;)].resultId</stringProp>
              <stringProp name="DEFAULT">NOT_FOUND</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract result_id of Product Overview part" enabled="false">
              <stringProp name="VAR">RESULT_ID_PRODUCT_OVERVIEW</stringProp>
              <stringProp name="JSONPATH">$.data.[?(@.groupName==&apos;&apos;)].resultId</stringProp>
              <stringProp name="DEFAULT">NOT_FOUND</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="put C.A.R true/false &amp;&amp; overral result then get HTML report - OK" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;car&quot;: true,&#xd;
	&quot;results&quot;: [{&#xd;
		&quot;includeInReport&quot;: true,&#xd;
		&quot;status&quot;: &quot;pass&quot;,&#xd;
		&quot;resultId&quot;: &quot;123bc6d8-ef36-4f30-900e-8f1362aa9ea8&quot;,&#xd;
		&quot;organizationId&quot;: &quot;1254&quot;,&#xd;
		&quot;groupName&quot;: &quot;Approved Samples&quot;,&#xd;
		&quot;inspectionId&quot;: &quot;208b7438-a8d9-11e7-a694-0242ac11000b&quot;&#xd;
	}, {&#xd;
		&quot;includeInReport&quot;: true,&#xd;
		&quot;status&quot;: &quot;pending&quot;,&#xd;
		&quot;resultId&quot;: &quot;2f8a53c6-3ece-4eca-824d-3bc60d47c8ca&quot;,&#xd;
		&quot;organizationId&quot;: &quot;1254&quot;,&#xd;
		&quot;groupName&quot;: &quot;Check-in&quot;,&#xd;
		&quot;inspectionId&quot;: &quot;208b7438-a8d9-11e7-a694-0242ac11000b&quot;&#xd;
	}, {&#xd;
		&quot;includeInReport&quot;: true,&#xd;
		&quot;status&quot;: &quot;pass&quot;,&#xd;
		&quot;resultId&quot;: &quot;52e9d978-46be-4db4-a19c-0eb90467f812&quot;,&#xd;
		&quot;organizationId&quot;: &quot;1254&quot;,&#xd;
		&quot;groupName&quot;: &quot;On-Site Verification&quot;,&#xd;
		&quot;inspectionId&quot;: &quot;208b7438-a8d9-11e7-a694-0242ac11000b&quot;&#xd;
	}, {&#xd;
		&quot;includeInReport&quot;: true,&#xd;
		&quot;status&quot;: &quot;pass&quot;,&#xd;
		&quot;resultId&quot;: &quot;6a1a7e80-e059-419d-ba2f-67f172c88f6c&quot;,&#xd;
		&quot;organizationId&quot;: &quot;1254&quot;,&#xd;
		&quot;groupName&quot;: &quot;RFID Check&quot;,&#xd;
		&quot;inspectionId&quot;: &quot;208b7438-a8d9-11e7-a694-0242ac11000b&quot;&#xd;
	}, {&#xd;
		&quot;includeInReport&quot;: true,&#xd;
		&quot;status&quot;: &quot;pending&quot;,&#xd;
		&quot;resultId&quot;: &quot;7feaad47-3114-44fd-97cb-8b6218be7dec&quot;,&#xd;
		&quot;organizationId&quot;: &quot;1254&quot;,&#xd;
		&quot;groupName&quot;: &quot;Documentation&quot;,&#xd;
		&quot;inspectionId&quot;: &quot;208b7438-a8d9-11e7-a694-0242ac11000b&quot;&#xd;
	}, {&#xd;
		&quot;includeInReport&quot;: true,&#xd;
		&quot;status&quot;: &quot;pass&quot;,&#xd;
		&quot;resultId&quot;: &quot;a713e8c0-21f6-4446-bad4-4dd7ae61ceb4&quot;,&#xd;
		&quot;organizationId&quot;: &quot;1254&quot;,&#xd;
		&quot;groupName&quot;: &quot;Product Overview&quot;,&#xd;
		&quot;inspectionId&quot;: &quot;208b7438-a8d9-11e7-a694-0242ac11000b&quot;&#xd;
	}, {&#xd;
		&quot;includeInReport&quot;: true,&#xd;
		&quot;status&quot;: &quot;pass&quot;,&#xd;
		&quot;resultId&quot;: &quot;d77e06dc-70f1-48ac-8f03-2f7847e3c004&quot;,&#xd;
		&quot;organizationId&quot;: &quot;1254&quot;,&#xd;
		&quot;groupName&quot;: &quot;Production Validation&quot;,&#xd;
		&quot;inspectionId&quot;: &quot;208b7438-a8d9-11e7-a694-0242ac11000b&quot;&#xd;
	}, {&#xd;
		&quot;includeInReport&quot;: true,&#xd;
		&quot;status&quot;: &quot;pass&quot;,&#xd;
		&quot;resultId&quot;: &quot;fcda2984-46f3-4dfa-9422-4f168506bfbd&quot;,&#xd;
		&quot;organizationId&quot;: &quot;1254&quot;,&#xd;
		&quot;groupName&quot;: &quot;Approved Standards&quot;,&#xd;
		&quot;inspectionId&quot;: &quot;208b7438-a8d9-11e7-a694-0242ac11000b&quot;&#xd;
	}, {&#xd;
		&quot;includeInReport&quot;: true,&#xd;
		&quot;status&quot;: &quot;pass&quot;,&#xd;
		&quot;resultId&quot;: &quot;measurements&quot;,&#xd;
		&quot;organizationId&quot;: &quot;1254&quot;,&#xd;
		&quot;groupName&quot;: &quot;Measurements&quot;,&#xd;
		&quot;inspectionId&quot;: &quot;208b7438-a8d9-11e7-a694-0242ac11000b&quot;&#xd;
	}, {&#xd;
		&quot;includeInReport&quot;: true,&#xd;
		&quot;status&quot;: &quot;fail&quot;,&#xd;
		&quot;resultId&quot;: &quot;packaging&quot;,&#xd;
		&quot;organizationId&quot;: &quot;1254&quot;,&#xd;
		&quot;groupName&quot;: &quot;Packaging&quot;,&#xd;
		&quot;inspectionId&quot;: &quot;208b7438-a8d9-11e7-a694-0242ac11000b&quot;&#xd;
	}, {&#xd;
		&quot;includeInReport&quot;: true,&#xd;
		&quot;status&quot;: &quot;pass&quot;,&#xd;
		&quot;resultId&quot;: &quot;sampleSelection&quot;,&#xd;
		&quot;organizationId&quot;: &quot;1254&quot;,&#xd;
		&quot;groupName&quot;: &quot;Sample Selection&quot;,&#xd;
		&quot;inspectionId&quot;: &quot;208b7438-a8d9-11e7-a694-0242ac11000b&quot;&#xd;
	}, {&#xd;
		&quot;includeInReport&quot;: true,&#xd;
		&quot;status&quot;: &quot;fail&quot;,&#xd;
		&quot;resultId&quot;: &quot;workmanship&quot;,&#xd;
		&quot;organizationId&quot;: &quot;1254&quot;,&#xd;
		&quot;groupName&quot;: &quot;Workmanship&quot;,&#xd;
		&quot;inspectionId&quot;: &quot;208b7438-a8d9-11e7-a694-0242ac11000b&quot;&#xd;
	}],&#xd;
	&quot;overall_result&quot;: &quot;fail&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/inspections/${INSPECTION_ID}/results</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get inspection_id from API &quot;update assignment&quot; first; call get C.A.R before get HTML Template</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="extract HTML URL" enabled="true">
              <stringProp name="VAR">HTML_URL</stringProp>
              <stringProp name="JSONPATH">$.data.htmlReportUrl</stringProp>
              <stringProp name="DEFAULT">NOT_MATCH</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - All questions" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post Check In questions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_bc1509f9-07ae-41a3-be66-6f4b79855f51&quot;,&#xd;
	&quot;label&quot;: &quot;Were you denied access to the factory?&quot;,&#xd;
	&quot;groupId&quot;: &quot;2f8a53c6-3ece-4eca-824d-3bc60d47c8ca&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_bc1509f9-07ae-41a3-be66-6f4b79855f51&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;No&quot;,&#xd;
		&quot;actions&quot;: []&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;Yes&quot;&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_2f0e54b9-79a7-4667-9e7f-2727c057a97e&quot;,&#xd;
	&quot;label&quot;: &quot;Is the factory prepared for this activity?&quot;,&#xd;
	&quot;groupId&quot;: &quot;2f8a53c6-3ece-4eca-824d-3bc60d47c8ca&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_2f0e54b9-79a7-4667-9e7f-2727c057a97e&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: []&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_question?inspection_id=${INSPECTION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get item_id = question_id from itemId of API &quot;get assignment details&quot; first </stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post Documentation questions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_6e8784e3-8ca5-49a9-95f2-c2c62f405d99&quot;,&#xd;
	&quot;label&quot;: &quot;Is PVP Documentation available on-site?&quot;,&#xd;
	&quot;groupId&quot;: &quot;7feaad47-3114-44fd-97cb-8b6218be7dec&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_6e8784e3-8ca5-49a9-95f2-c2c62f405d99&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: []&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_bb125280-18b9-4cfa-930b-12dad05e1bdd&quot;,&#xd;
	&quot;label&quot;: &quot;Does factory provide a valid testing certificate for the product being inspected based on MST requirements?&quot;,&#xd;
	&quot;groupId&quot;: &quot;7feaad47-3114-44fd-97cb-8b6218be7dec&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_bb125280-18b9-4cfa-930b-12dad05e1bdd&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;N\/A&quot;&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: []&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_25cf824b-14ee-4ddb-926f-50f59b338aec&quot;,&#xd;
	&quot;label&quot;: &quot;Does factory provide copies of Target Purchase Orders, CMS or Packing List for the product being inspected?&quot;,&#xd;
	&quot;groupId&quot;: &quot;7feaad47-3114-44fd-97cb-8b6218be7dec&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_25cf824b-14ee-4ddb-926f-50f59b338aec&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;N\/A&quot;&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: [{&#xd;
			&quot;action&quot;: &quot;request_picture&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/24_0_0_1507103661.jpg&quot;&#xd;
			}&#xd;
		}]&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_d66d683b-15e2-4160-913b-b40219be981c&quot;,&#xd;
	&quot;label&quot;: &quot;Does the factory provide an appropriate manufacturing control plan including process monitoring, quality controls, and internal testing for the product being inspected?&quot;,&#xd;
	&quot;groupId&quot;: &quot;7feaad47-3114-44fd-97cb-8b6218be7dec&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_d66d683b-15e2-4160-913b-b40219be981c&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: [{&#xd;
			&quot;action&quot;: &quot;request_picture&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/24_0_0_1507103670.jpg&quot;&#xd;
			}&#xd;
		}]&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_1bfbb13e-d3f3-4dfd-a65e-7466e7d6d27a&quot;,&#xd;
	&quot;label&quot;: &quot;Which criteria meets based on your observations?&quot;,&#xd;
	&quot;groupId&quot;: &quot;7feaad47-3114-44fd-97cb-8b6218be7dec&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_1bfbb13e-d3f3-4dfd-a65e-7466e7d6d27a&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;Does not meet requirements&quot;&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;Partially Meets requirement &quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Fully Meets requirements&quot;,&#xd;
		&quot;actions&quot;: []&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;Exceeds Requirements&quot;&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_e649d5c9-cfa5-4b95-b6e7-c9823389694d&quot;,&#xd;
	&quot;label&quot;: &quot;Which criteria meets based on your observations?&quot;,&#xd;
	&quot;groupId&quot;: &quot;52e9d978-46be-4db4-a19c-0eb90467f812&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_e649d5c9-cfa5-4b95-b6e7-c9823389694d&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Does not meet requirements&quot;,&#xd;
		&quot;actions&quot;: [{&#xd;
			&quot;action&quot;: &quot;request_picture&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/24_0_0_1507103681.jpg&quot;&#xd;
			}&#xd;
		}, {&#xd;
			&quot;action&quot;: &quot;add_description&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;text&quot;: &quot;Ssskskks&quot;&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;Partially Meets requirement &quot;&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;Fully Meets requirements&quot;&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;Exceeds Requirements&quot;&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_d6f60a8c-cb29-49bd-98cb-0c2c95d231ce&quot;,&#xd;
	&quot;label&quot;: &quot;Does factory provide a complete production plan that confirms the factory can meet the program delivery dates?&quot;,&#xd;
	&quot;groupId&quot;: &quot;7feaad47-3114-44fd-97cb-8b6218be7dec&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_d6f60a8c-cb29-49bd-98cb-0c2c95d231ce&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;N\/A&quot;&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: [{&#xd;
			&quot;action&quot;: &quot;request_picture&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/24_0_0_1507103694.jpg&quot;&#xd;
			}&#xd;
		}]&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_0f686b17-af6a-4a03-8faa-daa600a6ad5f&quot;,&#xd;
	&quot;label&quot;: &quot;Does Factory provide all Floor Ready components including retail packaging and the sample has been approved?&quot;,&#xd;
	&quot;groupId&quot;: &quot;7feaad47-3114-44fd-97cb-8b6218be7dec&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_0f686b17-af6a-4a03-8faa-daa600a6ad5f&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;N\/A&quot;&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: []&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_72f54b54-9352-4d95-af1f-47f34690c4ff&quot;,&#xd;
	&quot;label&quot;: &quot;Is this product Children&apos;s Flame Retardant Sleepwear?&quot;,&#xd;
	&quot;groupId&quot;: &quot;7feaad47-3114-44fd-97cb-8b6218be7dec&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_72f54b54-9352-4d95-af1f-47f34690c4ff&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: []&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_9343cd72-eabe-4081-ad92-768e2521d787&quot;,&#xd;
	&quot;label&quot;: &quot;Does the tracking labels meet applicable FPU and GPU requirements?&quot;,&#xd;
	&quot;groupId&quot;: &quot;7feaad47-3114-44fd-97cb-8b6218be7dec&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_9343cd72-eabe-4081-ad92-768e2521d787&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: []&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_f8bd4598-fd11-4fe9-a945-dc74fee81038&quot;,&#xd;
	&quot;label&quot;: &quot;Is the product subject to mold \/ mildew requirements?&quot;,&#xd;
	&quot;groupId&quot;: &quot;7feaad47-3114-44fd-97cb-8b6218be7dec&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_f8bd4598-fd11-4fe9-a945-dc74fee81038&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: [{&#xd;
			&quot;action&quot;: &quot;request_picture&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/24_0_0_1507103704.jpg&quot;&#xd;
			}&#xd;
		}]&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_0fd922a4-8d81-4ca4-99e9-aa6d601f157b&quot;,&#xd;
	&quot;label&quot;: &quot;Does CAP’S or any applicable action has been provided by the factory as a follow up from previous failed inspections or TPR meetings?&quot;,&#xd;
	&quot;groupId&quot;: &quot;7feaad47-3114-44fd-97cb-8b6218be7dec&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_0fd922a4-8d81-4ca4-99e9-aa6d601f157b&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;N\/A&quot;&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: [{&#xd;
			&quot;action&quot;: &quot;add_description&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;text&quot;: &quot;Didjjdk&quot;&#xd;
			}&#xd;
		}]&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_ad148d6e-e74a-44ba-a007-d1232c9872a2&quot;,&#xd;
	&quot;label&quot;: &quot;Did Vendor \/ Factory provided Self Inspection Result?&quot;,&#xd;
	&quot;groupId&quot;: &quot;7feaad47-3114-44fd-97cb-8b6218be7dec&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_ad148d6e-e74a-44ba-a007-d1232c9872a2&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: []&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_question?inspection_id=${INSPECTION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get item_id = question_id from itemId of API &quot;get assignment details&quot; first </stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post Approved Samples questions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_f7426189-7dcb-4888-96ff-f130f7ede0d6&quot;,&#xd;
	&quot;label&quot;: &quot;Are there Approved Samples?&quot;,&#xd;
	&quot;groupId&quot;: &quot;123bc6d8-ef36-4f30-900e-8f1362aa9ea8&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_f7426189-7dcb-4888-96ff-f130f7ede0d6&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: []&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_78924a1b-f5e5-4d0f-9901-6e0a0999e838&quot;,&#xd;
	&quot;label&quot;: &quot;Are there Red\/White Label sealed samples?&quot;,&#xd;
	&quot;groupId&quot;: &quot;123bc6d8-ef36-4f30-900e-8f1362aa9ea8&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_78924a1b-f5e5-4d0f-9901-6e0a0999e838&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: [{&#xd;
			&quot;action&quot;: &quot;request_picture&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;description&quot;: &quot;534397&quot;,&#xd;
				&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/25_0_0_1507103747.jpg&quot;&#xd;
			}&#xd;
		}, {&#xd;
			&quot;action&quot;: &quot;request_picture&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;description&quot;: &quot;535620&quot;,&#xd;
				&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/25_0_0_1507103754.jpg&quot;&#xd;
			}&#xd;
		}]&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_ff2a24a0-074c-4d5a-bcfa-283a675a6377&quot;,&#xd;
	&quot;label&quot;: &quot;Are there Yellow Label sealed samples?&quot;,&#xd;
	&quot;groupId&quot;: &quot;123bc6d8-ef36-4f30-900e-8f1362aa9ea8&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_ff2a24a0-074c-4d5a-bcfa-283a675a6377&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: [{&#xd;
			&quot;action&quot;: &quot;request_picture&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;description&quot;: &quot;534397&quot;,&#xd;
				&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/25_0_0_1507103830.jpg&quot;&#xd;
			}&#xd;
		}, {&#xd;
			&quot;action&quot;: &quot;request_picture&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;description&quot;: &quot;535620&quot;,&#xd;
				&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/25_0_0_1507103836.jpg&quot;&#xd;
			}&#xd;
		}]&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_question?inspection_id=${INSPECTION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get item_id = question_id from itemId of API &quot;get assignment details&quot; first </stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post Approved Standards questions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_eefb9c9b-adee-43db-8a0b-871ef4a97623&quot;,&#xd;
	&quot;label&quot;: &quot;Are there approved Color\/Print\/Artwork\/shade band for the sample?&quot;,&#xd;
	&quot;groupId&quot;: &quot;fcda2984-46f3-4dfa-9422-4f168506bfbd&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_eefb9c9b-adee-43db-8a0b-871ef4a97623&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;N\/A&quot;&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: [{&#xd;
			&quot;action&quot;: &quot;request_picture&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;description&quot;: &quot;535620&quot;,&#xd;
				&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/25_0_0_1507103853.jpg&quot;&#xd;
			}&#xd;
		}, {&#xd;
			&quot;action&quot;: &quot;request_picture&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;description&quot;: &quot;534397&quot;,&#xd;
				&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/25_0_0_1507103847.jpg&quot;&#xd;
			}&#xd;
		}]&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_28317db3-23d3-497e-9e50-f0f2b8e0a92d&quot;,&#xd;
	&quot;label&quot;: &quot;Does the sample have Trims and Accessories?&quot;,&#xd;
	&quot;groupId&quot;: &quot;fcda2984-46f3-4dfa-9422-4f168506bfbd&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_28317db3-23d3-497e-9e50-f0f2b8e0a92d&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;N\/A&quot;&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: [{&#xd;
			&quot;action&quot;: &quot;request_picture&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;description&quot;: &quot;534397&quot;,&#xd;
				&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/25_0_0_1507103861.jpg&quot;&#xd;
			}&#xd;
		}, {&#xd;
			&quot;action&quot;: &quot;request_picture&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;description&quot;: &quot;535620&quot;,&#xd;
				&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/25_0_0_1507103867.jpg&quot;&#xd;
			}&#xd;
		}]&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_question?inspection_id=${INSPECTION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get item_id = question_id from itemId of API &quot;get assignment details&quot; first </stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post RFID questions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_b10a9906-3263-412c-b188-6cf5b61df5ef&quot;,&#xd;
	&quot;label&quot;: &quot;Does product have any RFID?&quot;,&#xd;
	&quot;groupId&quot;: &quot;6a1a7e80-e059-419d-ba2f-67f172c88f6c&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_b10a9906-3263-412c-b188-6cf5b61df5ef&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;No&quot;,&#xd;
		&quot;actions&quot;: []&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;Yes&quot;&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_question?inspection_id=${INSPECTION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get item_id = question_id from itemId of API &quot;get assignment details&quot; first </stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post Additional Verifications questions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_172ead1a-1655-42f7-9822-c0f0e037ae1f&quot;,&#xd;
	&quot;label&quot;: &quot;Do we need to pull a Black sealed sample?&quot;,&#xd;
	&quot;groupId&quot;: &quot;123bc6d8-ef36-4f30-900e-8f1362aa9ea8&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_172ead1a-1655-42f7-9822-c0f0e037ae1f&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;N\/A&quot;&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: [{&#xd;
			&quot;action&quot;: &quot;request_picture&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;description&quot;: &quot;31013304&quot;,&#xd;
				&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/24_0_0_1507103996.jpg&quot;&#xd;
			}&#xd;
		}, {&#xd;
			&quot;action&quot;: &quot;add_description&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;text&quot;: &quot;Skidjddj&quot;&#xd;
			}&#xd;
		}]&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_question?inspection_id=${INSPECTION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get item_id = question_id from itemId of API &quot;get assignment details&quot; first </stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post Production Validations questions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_ef24b5c5-0621-40b0-b967-ecc75ef7d9ec&quot;,&#xd;
	&quot;label&quot;: &quot;Did you identify any issues that will affect delivery, cost, liability, quality, safety, or design? Include details for each issue?&quot;,&#xd;
	&quot;groupId&quot;: &quot;52e9d978-46be-4db4-a19c-0eb90467f812&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_ef24b5c5-0621-40b0-b967-ecc75ef7d9ec&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: [{&#xd;
			&quot;action&quot;: &quot;request_picture&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/24_0_0_1507104009.jpg&quot;&#xd;
			}&#xd;
		}, {&#xd;
			&quot;action&quot;: &quot;add_description&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;text&quot;: &quot;Hedhdjhdhd&quot;&#xd;
			}&#xd;
		}]&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_bbd02e70-7827-488a-ada3-0d67cbafa4bc&quot;,&#xd;
	&quot;label&quot;: &quot;During the inspection and production validation walkthrough, did the factory demonstrate full execution of the manufacturing control plan?&quot;,&#xd;
	&quot;groupId&quot;: &quot;52e9d978-46be-4db4-a19c-0eb90467f812&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_bbd02e70-7827-488a-ada3-0d67cbafa4bc&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: []&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_e0906a2c-e0d9-49de-af59-200c7881ca11&quot;,&#xd;
	&quot;label&quot;: &quot;Which criteria meets based on your observations?&quot;,&#xd;
	&quot;groupId&quot;: &quot;7feaad47-3114-44fd-97cb-8b6218be7dec&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_e0906a2c-e0d9-49de-af59-200c7881ca11&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;Does not meet requirements&quot;&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;Partially Meets requirement &quot;&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;Fully Meets requirements&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Exceeds Requirements&quot;,&#xd;
		&quot;actions&quot;: [{&#xd;
			&quot;action&quot;: &quot;request_picture&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;source&quot;: &quot;https:\/\/s3.amazonaws.com\/inspectorio-files-upload-staging\/organization_1254\/images\/208b7438-a8d9-11e7-a694-0242ac11000b\/24_0_0_1507104022.jpg&quot;&#xd;
			}&#xd;
		}, {&#xd;
			&quot;action&quot;: &quot;add_description&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;text&quot;: &quot;Jdjdjdjrjd&quot;&#xd;
			}&#xd;
		}]&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_679815e1-b76b-4e4b-8c49-eb488c0d232d&quot;,&#xd;
	&quot;label&quot;: &quot;Did the facility provide appropriate site conditions to perform Inspection Activities (sufficient lighting, Inspection Tables, Ventilation)?&quot;,&#xd;
	&quot;groupId&quot;: &quot;52e9d978-46be-4db4-a19c-0eb90467f812&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_679815e1-b76b-4e4b-8c49-eb488c0d232d&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: []&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}, {&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_cbfc945e-c1c2-4129-a427-4e4dc802eb30&quot;,&#xd;
	&quot;label&quot;: &quot;During the inspection did you experience any kind of influence from factory\/agent or vendor trying to alter the result of the inspection?&quot;,&#xd;
	&quot;groupId&quot;: &quot;52e9d978-46be-4db4-a19c-0eb90467f812&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_cbfc945e-c1c2-4129-a427-4e4dc802eb30&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;value&quot;: &quot;No&quot;&#xd;
	}, {&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;Yes&quot;,&#xd;
		&quot;actions&quot;: [{&#xd;
			&quot;action&quot;: &quot;add_description&quot;,&#xd;
			&quot;value&quot;: {&#xd;
				&quot;text&quot;: &quot;Ufhfjfjr&quot;&#xd;
			}&#xd;
		}]&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_question?inspection_id=${INSPECTION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get item_id = question_id from itemId of API &quot;get assignment details&quot; first </stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post RFID questions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_b10a9906-3263-412c-b188-6cf5b61df5ef&quot;,&#xd;
	&quot;label&quot;: &quot;Does product have any RFID?&quot;,&#xd;
	&quot;groupId&quot;: &quot;6a1a7e80-e059-419d-ba2f-67f172c88f6c&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_b10a9906-3263-412c-b188-6cf5b61df5ef&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;No&quot;,&#xd;
		&quot;actions&quot;: []&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;Yes&quot;&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_question?inspection_id=${INSPECTION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get item_id = question_id from itemId of API &quot;get assignment details&quot; first </stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post RFID questions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
	&quot;itemId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_b10a9906-3263-412c-b188-6cf5b61df5ef&quot;,&#xd;
	&quot;label&quot;: &quot;Does product have any RFID?&quot;,&#xd;
	&quot;groupId&quot;: &quot;6a1a7e80-e059-419d-ba2f-67f172c88f6c&quot;,&#xd;
	&quot;questionType&quot;: &quot;yes_no&quot;,&#xd;
	&quot;status&quot;: &quot;pass&quot;,&#xd;
	&quot;questionId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8_b10a9906-3263-412c-b188-6cf5b61df5ef&quot;,&#xd;
	&quot;options&quot;: [{&#xd;
		&quot;selected&quot;: true,&#xd;
		&quot;value&quot;: &quot;No&quot;,&#xd;
		&quot;actions&quot;: []&#xd;
	}, {&#xd;
		&quot;value&quot;: &quot;Yes&quot;&#xd;
	}],&#xd;
	&quot;type&quot;: &quot;question&quot;,&#xd;
	&quot;assignmentId&quot;: &quot;c7243a98-141b-43f6-ab15-8dcab336a2c8&quot;&#xd;
}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${STAGING_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile-responses/v1/${ORG_ID}/gateways/post_question?inspection_id=${INSPECTION_ID}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">get item_id = question_id from itemId of API &quot;get assignment details&quot; first </stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="debug controller" enabled="false"/>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="QUESTIONS_CHECK_IN" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">TETS</stringProp>
            <stringProp name="RESPONSE_DATA">${ITEM_ID_CHECK_IN}</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="QUESTIONS_DOCUMENTATION" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">TETS</stringProp>
            <stringProp name="RESPONSE_DATA">${QUESTIONS_DOCUMENTATION}</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="QUESTIONS_APPROVED_SAMPLES" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">TETS</stringProp>
            <stringProp name="RESPONSE_DATA">${QUESTIONS_APPROVED_SAMPLES}</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="QUESTIONS_APPROVED_STANDARDS" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">TETS</stringProp>
            <stringProp name="RESPONSE_DATA">${QUESTIONS_APPROVED_STANDARDS}</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="QUESTIONS_PRODUCTION_VALIDATION" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">TETS</stringProp>
            <stringProp name="RESPONSE_DATA">${QUESTIONS_PRODUCTION_VALIDATION}</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="QUESTIONS_RFID_CHECK" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">TETS</stringProp>
            <stringProp name="RESPONSE_DATA">${QUESTIONS_RFID_CHECK}</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="QUESTIONS_GREEN_BLACK_SEAL" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">TETS</stringProp>
            <stringProp name="RESPONSE_DATA">${QUESTIONS_GREEN_BLACK_SEAL}</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="QUESTIONS_ONSITE_VERIFICATION" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">TETS</stringProp>
            <stringProp name="RESPONSE_DATA">${QUESTIONS_ONSITE_VERIFICATION}</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
